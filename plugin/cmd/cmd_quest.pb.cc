// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_quest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_quest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class QuestListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestListNotify>
     _instance;
} _QuestListNotify_default_instance_;
class QuestListUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestListUpdateNotify>
     _instance;
} _QuestListUpdateNotify_default_instance_;
class QuestDelNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDelNotify>
     _instance;
} _QuestDelNotify_default_instance_;
class ChildQuestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChildQuest>
     _instance;
} _ChildQuest_default_instance_;
class ParentQuestRandomInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParentQuestRandomInfo>
     _instance;
} _ParentQuestRandomInfo_default_instance_;
class ParentQuestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParentQuest>
     _instance;
} _ParentQuest_default_instance_;
class FinishedParentQuestNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishedParentQuestNotify>
     _instance;
} _FinishedParentQuestNotify_default_instance_;
class FinishedParentQuestUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishedParentQuestUpdateNotify>
     _instance;
} _FinishedParentQuestUpdateNotify_default_instance_;
class AddQuestContentProgressReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddQuestContentProgressReq>
     _instance;
} _AddQuestContentProgressReq_default_instance_;
class AddQuestContentProgressRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddQuestContentProgressRsp>
     _instance;
} _AddQuestContentProgressRsp_default_instance_;
class GetQuestTalkHistoryReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestTalkHistoryReq>
     _instance;
} _GetQuestTalkHistoryReq_default_instance_;
class GetQuestTalkHistoryRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestTalkHistoryRsp>
     _instance;
} _GetQuestTalkHistoryRsp_default_instance_;
class QuestCreateEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestCreateEntityReq>
     _instance;
} _QuestCreateEntityReq_default_instance_;
class QuestCreateEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestCreateEntityRsp>
     _instance;
} _QuestCreateEntityRsp_default_instance_;
class QuestDestroyEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyEntityReq>
     _instance;
} _QuestDestroyEntityReq_default_instance_;
class QuestDestroyEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyEntityRsp>
     _instance;
} _QuestDestroyEntityRsp_default_instance_;
class LogTalkNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LogTalkNotify>
     _instance;
} _LogTalkNotify_default_instance_;
class LogCutsceneNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LogCutsceneNotify>
     _instance;
} _LogCutsceneNotify_default_instance_;
class ChapterStateNotify_NeedPlayerLevelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChapterStateNotify_NeedPlayerLevel>
     _instance;
} _ChapterStateNotify_NeedPlayerLevel_default_instance_;
class ChapterStateNotify_NeedBeginTimeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChapterStateNotify_NeedBeginTime>
     _instance;
} _ChapterStateNotify_NeedBeginTime_default_instance_;
class ChapterStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChapterStateNotify>
     _instance;
} _ChapterStateNotify_default_instance_;
class QuestProgressUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestProgressUpdateNotify>
     _instance;
} _QuestProgressUpdateNotify_default_instance_;
class QuestVarOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestVarOp>
     _instance;
} _QuestVarOp_default_instance_;
class QuestUpdateQuestVarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestVarReq>
     _instance;
} _QuestUpdateQuestVarReq_default_instance_;
class QuestUpdateQuestVarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestVarRsp>
     _instance;
} _QuestUpdateQuestVarRsp_default_instance_;
class QuestUpdateQuestVarNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestVarNotify>
     _instance;
} _QuestUpdateQuestVarNotify_default_instance_;
class QuestDestroyNpcReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyNpcReq>
     _instance;
} _QuestDestroyNpcReq_default_instance_;
class QuestDestroyNpcRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyNpcRsp>
     _instance;
} _QuestDestroyNpcRsp_default_instance_;
class BargainStartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainStartNotify>
     _instance;
} _BargainStartNotify_default_instance_;
class BargainOfferPriceReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainOfferPriceReq>
     _instance;
} _BargainOfferPriceReq_default_instance_;
class BargainOfferPriceRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainOfferPriceRsp>
     _instance;
} _BargainOfferPriceRsp_default_instance_;
class BargainTerminateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainTerminateNotify>
     _instance;
} _BargainTerminateNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fquest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[32];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[28];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListNotify, quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListUpdateNotify, quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDelNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDelNotify, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, quest_config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, entrance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, factor_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, child_quest_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, is_finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, is_random_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, random_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, quest_var_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, parent_quest_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestNotify, parent_quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestUpdateNotify, parent_quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, add_progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressRsp, content_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, talk_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, is_rewind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, is_rewind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogTalkNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogTalkNotify, talk_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogTalkNotify, is_start_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogCutsceneNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogCutsceneNotify, cutscene_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogCutsceneNotify, is_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogCutsceneNotify, is_skip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedPlayerLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedPlayerLevel, is_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedPlayerLevel, config_need_player_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedBeginTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedBeginTime, is_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedBeginTime, config_need_begin_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, chapter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, chapter_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, need_player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, need_begin_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, finish_progress_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, fail_progress_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, is_add_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, quest_var_op_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, quest_var_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcReq, npc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, npc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, bargain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, cur_mood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, expected_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, price_low_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceReq, bargain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceReq, price_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, bargain_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, result_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, cur_mood_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainTerminateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainTerminateNotify, bargain_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(QuestListNotify)},
  { 6, -1, sizeof(QuestListUpdateNotify)},
  { 12, -1, sizeof(QuestDelNotify)},
  { 18, -1, sizeof(ChildQuest)},
  { 26, -1, sizeof(ParentQuestRandomInfo)},
  { 34, -1, sizeof(ParentQuest)},
  { 46, -1, sizeof(FinishedParentQuestNotify)},
  { 52, -1, sizeof(FinishedParentQuestUpdateNotify)},
  { 58, -1, sizeof(AddQuestContentProgressReq)},
  { 66, -1, sizeof(AddQuestContentProgressRsp)},
  { 73, -1, sizeof(GetQuestTalkHistoryReq)},
  { 79, -1, sizeof(GetQuestTalkHistoryRsp)},
  { 87, -1, sizeof(QuestCreateEntityReq)},
  { 96, -1, sizeof(QuestCreateEntityRsp)},
  { 107, -1, sizeof(QuestDestroyEntityReq)},
  { 115, -1, sizeof(QuestDestroyEntityRsp)},
  { 124, -1, sizeof(LogTalkNotify)},
  { 131, -1, sizeof(LogCutsceneNotify)},
  { 139, -1, sizeof(ChapterStateNotify_NeedPlayerLevel)},
  { 146, -1, sizeof(ChapterStateNotify_NeedBeginTime)},
  { 153, -1, sizeof(ChapterStateNotify)},
  { 162, -1, sizeof(QuestProgressUpdateNotify)},
  { 170, -1, sizeof(QuestVarOp)},
  { 178, -1, sizeof(QuestUpdateQuestVarReq)},
  { 186, -1, sizeof(QuestUpdateQuestVarRsp)},
  { 194, -1, sizeof(QuestUpdateQuestVarNotify)},
  { 201, -1, sizeof(QuestDestroyNpcReq)},
  { 208, -1, sizeof(QuestDestroyNpcRsp)},
  { 216, -1, sizeof(BargainStartNotify)},
  { 225, -1, sizeof(BargainOfferPriceReq)},
  { 232, -1, sizeof(BargainOfferPriceRsp)},
  { 241, -1, sizeof(BargainTerminateNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestListUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDelNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChildQuest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentQuestRandomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentQuest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishedParentQuestNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishedParentQuestUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddQuestContentProgressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddQuestContentProgressRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestTalkHistoryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestTalkHistoryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestCreateEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestCreateEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogTalkNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogCutsceneNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChapterStateNotify_NeedPlayerLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChapterStateNotify_NeedBeginTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChapterStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestProgressUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestVarOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestVarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestVarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestVarNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyNpcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyNpcRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainStartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainOfferPriceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainOfferPriceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainTerminateNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_quest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _QuestListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestListNotify_default_instance_);_QuestListUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestListUpdateNotify_default_instance_);_QuestDelNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDelNotify_default_instance_);_ChildQuest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChildQuest_default_instance_);_ParentQuestRandomInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParentQuestRandomInfo_default_instance_);_ParentQuest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParentQuest_default_instance_);_FinishedParentQuestNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishedParentQuestNotify_default_instance_);_FinishedParentQuestUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishedParentQuestUpdateNotify_default_instance_);_AddQuestContentProgressReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddQuestContentProgressReq_default_instance_);_AddQuestContentProgressRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddQuestContentProgressRsp_default_instance_);_GetQuestTalkHistoryReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestTalkHistoryReq_default_instance_);_GetQuestTalkHistoryRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestTalkHistoryRsp_default_instance_);_QuestCreateEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestCreateEntityReq_default_instance_);_QuestCreateEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestCreateEntityRsp_default_instance_);_QuestDestroyEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyEntityReq_default_instance_);_QuestDestroyEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyEntityRsp_default_instance_);_LogTalkNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LogTalkNotify_default_instance_);_LogCutsceneNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LogCutsceneNotify_default_instance_);_ChapterStateNotify_NeedPlayerLevel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChapterStateNotify_NeedPlayerLevel_default_instance_);_ChapterStateNotify_NeedBeginTime_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChapterStateNotify_NeedBeginTime_default_instance_);_ChapterStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChapterStateNotify_default_instance_);_QuestProgressUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestProgressUpdateNotify_default_instance_);_QuestVarOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestVarOp_default_instance_);_QuestUpdateQuestVarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestVarReq_default_instance_);_QuestUpdateQuestVarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestVarRsp_default_instance_);_QuestUpdateQuestVarNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestVarNotify_default_instance_);_QuestDestroyNpcReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyNpcReq_default_instance_);_QuestDestroyNpcRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyNpcRsp_default_instance_);_BargainStartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainStartNotify_default_instance_);_BargainOfferPriceReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainOfferPriceReq_default_instance_);_BargainOfferPriceRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainOfferPriceRsp_default_instance_);_BargainTerminateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainTerminateNotify_default_instance_);_ParentQuest_default_instance_._instance.get_mutable()->random_info_ = const_cast< ::proto::ParentQuestRandomInfo*>(
      ::proto::ParentQuestRandomInfo::internal_default_instance());
  _QuestCreateEntityReq_default_instance_._instance.get_mutable()->entity_ = const_cast< ::proto::CreateEntityInfo*>(
      ::proto::CreateEntityInfo::internal_default_instance());
  _QuestCreateEntityRsp_default_instance_._instance.get_mutable()->entity_ = const_cast< ::proto::CreateEntityInfo*>(
      ::proto::CreateEntityInfo::internal_default_instance());
  _ChapterStateNotify_default_instance_._instance.get_mutable()->need_player_level_ = const_cast< ::proto::ChapterStateNotify_NeedPlayerLevel*>(
      ::proto::ChapterStateNotify_NeedPlayerLevel::internal_default_instance());
  _ChapterStateNotify_default_instance_._instance.get_mutable()->need_begin_time_ = const_cast< ::proto::ChapterStateNotify_NeedBeginTime*>(
      ::proto::ChapterStateNotify_NeedBeginTime::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023cmd/cmd_quest.proto\022\005proto\032\014define.pro"
      "to\"\202\001\n\017QuestListNotify\022 \n\nquest_list\030\001 \003"
      "(\0132\014.proto.Quest\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\221\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\032\002\020\001\"\210\001\n\025QuestListUpdateNotif"
      "y\022 \n\nquest_list\030\001 \003(\0132\014.proto.Quest\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\222\003\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"q\n\016Qu"
      "estDelNotify\022\020\n\010quest_id\030\001 \001(\r\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\223\003\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"F\n\nChildQu"
      "est\022\020\n\010quest_id\030\001 \001(\r\022\r\n\005state\030\002 \001(\r\022\027\n\017"
      "quest_config_id\030\003 \001(\r\"V\n\025ParentQuestRand"
      "omInfo\022\023\n\013entrance_id\030\001 \001(\r\022\023\n\013template_"
      "id\030\002 \001(\r\022\023\n\013factor_list\030\003 \003(\r\"\335\001\n\013Parent"
      "Quest\022\027\n\017parent_quest_id\030\001 \001(\r\022+\n\020child_"
      "quest_list\030\002 \003(\0132\021.proto.ChildQuest\022\023\n\013i"
      "s_finished\030\003 \001(\010\022\021\n\tis_random\030\004 \001(\010\0221\n\013r"
      "andom_info\030\005 \001(\0132\034.proto.ParentQuestRand"
      "omInfo\022\021\n\tquest_var\030\006 \003(\005\022\032\n\022parent_ques"
      "t_state\030\007 \001(\r\"\231\001\n\031FinishedParentQuestNot"
      "ify\022-\n\021parent_quest_list\030\001 \003(\0132\022.proto.P"
      "arentQuest\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\224\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\032\002\020\001\"\237\001\n\037FinishedParentQuestUpdateN"
      "otify\022-\n\021parent_quest_list\030\001 \003(\0132\022.proto"
      ".ParentQuest\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\225\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\032\002\020\001\"\273\001\n\032AddQuestContentProgressR"
      "eq\022\024\n\014content_type\030\001 \001(\r\022\r\n\005param\030\002 \001(\r\022"
      "\024\n\014add_progress\030\003 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\226\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020"
      "\001\"\222\001\n\032AddQuestContentProgressRsp\022\017\n\007retc"
      "ode\030\001 \001(\005\022\024\n\014content_type\030\002 \001(\r\"M\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\227\003\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\225\001\n\026GetQu"
      "estTalkHistoryReq\022\027\n\017parent_quest_id\030\001 \001"
      "(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\230\003\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n"
      "\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\247\001\n\026GetQuestTalkH"
      "istoryRsp\022\017\n\007retcode\030\001 \001(\005\022\027\n\017parent_que"
      "st_id\030\002 \001(\r\022\024\n\014talk_id_list\030\003 \003(\r\"M\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\231\003\022\023\n\017ENET_CHANNE"
      "L_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\341\001\n\024Que"
      "stCreateEntityReq\022\'\n\006entity\030\001 \001(\0132\027.prot"
      "o.CreateEntityInfo\022\020\n\010quest_id\030\002 \001(\r\022\021\n\t"
      "is_rewind\030\003 \001(\010\022\027\n\017parent_quest_id\030\004 \001(\r"
      "\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\232\003\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"\360\001\n\024QuestCreateEnti"
      "tyRsp\022\017\n\007retcode\030\001 \001(\005\022\021\n\tentity_id\030\002 \001("
      "\r\022\'\n\006entity\030\003 \001(\0132\027.proto.CreateEntityIn"
      "fo\022\020\n\010quest_id\030\007 \001(\r\022\021\n\tis_rewind\030\010 \001(\010\022"
      "\027\n\017parent_quest_id\030\t \001(\r\"M\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\233\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\262\001\n\025QuestDestroy"
      "EntityReq\022\021\n\tentity_id\030\001 \001(\r\022\020\n\010quest_id"
      "\030\002 \001(\r\022\020\n\010scene_id\030\003 \001(\r\"b\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\234\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001"
      "\032\002\020\001\"\256\001\n\025QuestDestroyEntityRsp\022\017\n\007retcod"
      "e\030\001 \001(\005\022\021\n\tentity_id\030\002 \001(\r\022\020\n\010quest_id\030\003"
      " \001(\r\022\020\n\010scene_id\030\004 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\235\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\226\001\n\rLogTalkNotify\022"
      "\017\n\007talk_id\030\001 \001(\r\022\020\n\010is_start\030\002 \001(\010\"b\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\236\003\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLO"
      "W_CLIENT\020\001\032\002\020\001\"\261\001\n\021LogCutsceneNotify\022\025\n\r"
      "cutscene_name\030\001 \001(\t\022\020\n\010is_start\030\002 \001(\010\022\017\n"
      "\007is_skip\030\003 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\237\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\265\003\n\022C"
      "hapterStateNotify\022\022\n\nchapter_id\030\001 \001(\r\022*\n"
      "\rchapter_state\030\002 \001(\0162\023.proto.ChapterStat"
      "e\022D\n\021need_player_level\030\003 \001(\0132).proto.Cha"
      "pterStateNotify.NeedPlayerLevel\022@\n\017need_"
      "begin_time\030\004 \001(\0132\'.proto.ChapterStateNot"
      "ify.NeedBeginTime\032E\n\017NeedPlayerLevel\022\020\n\010"
      "is_limit\030\001 \001(\010\022 \n\030config_need_player_lev"
      "el\030\002 \001(\r\032A\n\rNeedBeginTime\022\020\n\010is_limit\030\001 "
      "\001(\010\022\036\n\026config_need_begin_time\030\002 \001(\r\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\240\003\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\266\001\n\031Q"
      "uestProgressUpdateNotify\022\020\n\010quest_id\030\001 \001"
      "(\r\022\034\n\024finish_progress_list\030\002 \003(\r\022\032\n\022fail"
      "_progress_list\030\003 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\013\n\006CMD_ID\020\241\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\032\002\020\001\":\n\nQuestVarOp\022\r\n\005ind"
      "ex\030\001 \001(\r\022\r\n\005value\030\002 \001(\005\022\016\n\006is_add\030\003 \001(\010\""
      "\325\001\n\026QuestUpdateQuestVarReq\022\020\n\010quest_id\030\001"
      " \001(\r\022,\n\021quest_var_op_list\030\002 \003(\0132\021.proto."
      "QuestVarOp\022\027\n\017parent_quest_id\030\003 \001(\r\"b\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\242\003\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALL"
      "OW_CLIENT\020\001\032\002\020\001\"\243\001\n\026QuestUpdateQuestVarR"
      "sp\022\017\n\007retcode\030\001 \001(\005\022\020\n\010quest_id\030\002 \001(\r\022\027\n"
      "\017parent_quest_id\030\003 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\243\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\226\001\n\031QuestUpdateQue"
      "stVarNotify\022\027\n\017parent_quest_id\030\001 \001(\r\022\021\n\t"
      "quest_var\030\002 \003(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\244\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\241\001\n\022QuestDestroyNpcReq\022\016\n"
      "\006npc_id\030\001 \001(\r\022\027\n\017parent_quest_id\030\002 \001(\r\"b"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\245\003\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_"
      "ALLOW_CLIENT\020\001\032\002\020\001\"\235\001\n\022QuestDestroyNpcRs"
      "p\022\017\n\007retcode\030\001 \001(\005\022\016\n\006npc_id\030\002 \001(\r\022\027\n\017pa"
      "rent_quest_id\030\003 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013"
      "\n\006CMD_ID\020\246\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\032\002\020\001\"\272\001\n\022BargainStartNotif"
      "y\022\022\n\nbargain_id\030\001 \001(\r\022\020\n\010cur_mood\030\002 \001(\005\022"
      "\026\n\016expected_price\030\003 \001(\r\022\027\n\017price_low_lim"
      "it\030\004 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\247\003"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\235\001\n\024BargainOfferPriceReq\022\022\n\nbarg"
      "ain_id\030\001 \001(\r\022\r\n\005price\030\002 \001(\r\"b\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\250\003\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIEN"
      "T\020\001\032\002\020\001\"\320\001\n\024BargainOfferPriceRsp\022\017\n\007retc"
      "ode\030\001 \001(\005\0220\n\016bargain_result\030\002 \001(\0162\030.prot"
      "o.BargainResultType\022\024\n\014result_param\030\003 \001("
      "\r\022\020\n\010cur_mood\030\004 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013"
      "\n\006CMD_ID\020\251\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\032\002\020\001\"{\n\026BargainTerminateNo"
      "tify\022\022\n\nbargain_id\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\252\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\032\002\020\001*|\n\014ChapterState\022"
      "\031\n\025CHAPTER_STATE_INVALID\020\000\022!\n\035CHAPTER_ST"
      "ATE_UNABLE_TO_BEGIN\020\001\022\027\n\023CHAPTER_STATE_B"
      "EGIN\020\002\022\025\n\021CHAPTER_STATE_END\020\003*b\n\021Bargain"
      "ResultType\022\031\n\025BARGAIN_COMPLETE_SUCC\020\000\022\027\n"
      "\023BARGAIN_SINGLE_FAIL\020\001\022\031\n\025BARGAIN_COMPLE"
      "TE_FAIL\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5417);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_quest.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fquest_2eproto

const ::google::protobuf::EnumDescriptor* QuestListNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[0];
}
bool QuestListNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 401:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestListNotify_CmdId QuestListNotify::NONE;
const QuestListNotify_CmdId QuestListNotify::CMD_ID;
const QuestListNotify_CmdId QuestListNotify::ENET_CHANNEL_ID;
const QuestListNotify_CmdId QuestListNotify::ENET_IS_RELIABLE;
const QuestListNotify_CmdId QuestListNotify::CmdId_MIN;
const QuestListNotify_CmdId QuestListNotify::CmdId_MAX;
const int QuestListNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestListUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[1];
}
bool QuestListUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 402:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::NONE;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::CMD_ID;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::ENET_CHANNEL_ID;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::ENET_IS_RELIABLE;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::CmdId_MIN;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::CmdId_MAX;
const int QuestListUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDelNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[2];
}
bool QuestDelNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 403:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDelNotify_CmdId QuestDelNotify::NONE;
const QuestDelNotify_CmdId QuestDelNotify::CMD_ID;
const QuestDelNotify_CmdId QuestDelNotify::ENET_CHANNEL_ID;
const QuestDelNotify_CmdId QuestDelNotify::ENET_IS_RELIABLE;
const QuestDelNotify_CmdId QuestDelNotify::CmdId_MIN;
const QuestDelNotify_CmdId QuestDelNotify::CmdId_MAX;
const int QuestDelNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FinishedParentQuestNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[3];
}
bool FinishedParentQuestNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 404:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::NONE;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::CMD_ID;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::ENET_CHANNEL_ID;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::ENET_IS_RELIABLE;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::CmdId_MIN;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::CmdId_MAX;
const int FinishedParentQuestNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FinishedParentQuestUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[4];
}
bool FinishedParentQuestUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 405:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::NONE;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::CMD_ID;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::ENET_CHANNEL_ID;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::ENET_IS_RELIABLE;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::CmdId_MIN;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::CmdId_MAX;
const int FinishedParentQuestUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddQuestContentProgressReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[5];
}
bool AddQuestContentProgressReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 406:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::NONE;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::CMD_ID;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::ENET_CHANNEL_ID;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::ENET_IS_RELIABLE;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::IS_ALLOW_CLIENT;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::CmdId_MIN;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::CmdId_MAX;
const int AddQuestContentProgressReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddQuestContentProgressRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[6];
}
bool AddQuestContentProgressRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 407:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::NONE;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::CMD_ID;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::ENET_CHANNEL_ID;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::ENET_IS_RELIABLE;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::CmdId_MIN;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::CmdId_MAX;
const int AddQuestContentProgressRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetQuestTalkHistoryReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[7];
}
bool GetQuestTalkHistoryReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 408:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::NONE;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::CMD_ID;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::ENET_CHANNEL_ID;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::ENET_IS_RELIABLE;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::IS_ALLOW_CLIENT;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::CmdId_MIN;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::CmdId_MAX;
const int GetQuestTalkHistoryReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetQuestTalkHistoryRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[8];
}
bool GetQuestTalkHistoryRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 409:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::NONE;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::CMD_ID;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::ENET_CHANNEL_ID;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::ENET_IS_RELIABLE;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::CmdId_MIN;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::CmdId_MAX;
const int GetQuestTalkHistoryRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestCreateEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[9];
}
bool QuestCreateEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 410:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::NONE;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::CMD_ID;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::ENET_CHANNEL_ID;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::ENET_IS_RELIABLE;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::IS_ALLOW_CLIENT;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::CmdId_MIN;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::CmdId_MAX;
const int QuestCreateEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestCreateEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[10];
}
bool QuestCreateEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 411:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::NONE;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::CMD_ID;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::ENET_CHANNEL_ID;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::ENET_IS_RELIABLE;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::CmdId_MIN;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::CmdId_MAX;
const int QuestCreateEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[11];
}
bool QuestDestroyEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 412:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::NONE;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::CMD_ID;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::ENET_CHANNEL_ID;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::ENET_IS_RELIABLE;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::IS_ALLOW_CLIENT;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::CmdId_MIN;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::CmdId_MAX;
const int QuestDestroyEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[12];
}
bool QuestDestroyEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 413:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::NONE;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::CMD_ID;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::ENET_CHANNEL_ID;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::ENET_IS_RELIABLE;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::CmdId_MIN;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::CmdId_MAX;
const int QuestDestroyEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogTalkNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[13];
}
bool LogTalkNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 414:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogTalkNotify_CmdId LogTalkNotify::NONE;
const LogTalkNotify_CmdId LogTalkNotify::CMD_ID;
const LogTalkNotify_CmdId LogTalkNotify::ENET_CHANNEL_ID;
const LogTalkNotify_CmdId LogTalkNotify::ENET_IS_RELIABLE;
const LogTalkNotify_CmdId LogTalkNotify::IS_ALLOW_CLIENT;
const LogTalkNotify_CmdId LogTalkNotify::CmdId_MIN;
const LogTalkNotify_CmdId LogTalkNotify::CmdId_MAX;
const int LogTalkNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogCutsceneNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[14];
}
bool LogCutsceneNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 415:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogCutsceneNotify_CmdId LogCutsceneNotify::NONE;
const LogCutsceneNotify_CmdId LogCutsceneNotify::CMD_ID;
const LogCutsceneNotify_CmdId LogCutsceneNotify::ENET_CHANNEL_ID;
const LogCutsceneNotify_CmdId LogCutsceneNotify::ENET_IS_RELIABLE;
const LogCutsceneNotify_CmdId LogCutsceneNotify::IS_ALLOW_CLIENT;
const LogCutsceneNotify_CmdId LogCutsceneNotify::CmdId_MIN;
const LogCutsceneNotify_CmdId LogCutsceneNotify::CmdId_MAX;
const int LogCutsceneNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChapterStateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[15];
}
bool ChapterStateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 416:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChapterStateNotify_CmdId ChapterStateNotify::NONE;
const ChapterStateNotify_CmdId ChapterStateNotify::CMD_ID;
const ChapterStateNotify_CmdId ChapterStateNotify::ENET_CHANNEL_ID;
const ChapterStateNotify_CmdId ChapterStateNotify::ENET_IS_RELIABLE;
const ChapterStateNotify_CmdId ChapterStateNotify::CmdId_MIN;
const ChapterStateNotify_CmdId ChapterStateNotify::CmdId_MAX;
const int ChapterStateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestProgressUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[16];
}
bool QuestProgressUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 417:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::NONE;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::CMD_ID;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::ENET_CHANNEL_ID;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::ENET_IS_RELIABLE;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::CmdId_MIN;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::CmdId_MAX;
const int QuestProgressUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestVarReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[17];
}
bool QuestUpdateQuestVarReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 418:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::NONE;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::CMD_ID;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::ENET_CHANNEL_ID;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::ENET_IS_RELIABLE;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::IS_ALLOW_CLIENT;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::CmdId_MIN;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::CmdId_MAX;
const int QuestUpdateQuestVarReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestVarRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[18];
}
bool QuestUpdateQuestVarRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 419:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::NONE;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::CMD_ID;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::ENET_CHANNEL_ID;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::ENET_IS_RELIABLE;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::CmdId_MIN;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::CmdId_MAX;
const int QuestUpdateQuestVarRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestVarNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[19];
}
bool QuestUpdateQuestVarNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 420:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::NONE;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::CMD_ID;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::ENET_CHANNEL_ID;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::ENET_IS_RELIABLE;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::CmdId_MIN;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::CmdId_MAX;
const int QuestUpdateQuestVarNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyNpcReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[20];
}
bool QuestDestroyNpcReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 421:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::NONE;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::CMD_ID;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::ENET_CHANNEL_ID;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::ENET_IS_RELIABLE;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::IS_ALLOW_CLIENT;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::CmdId_MIN;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::CmdId_MAX;
const int QuestDestroyNpcReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyNpcRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[21];
}
bool QuestDestroyNpcRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 422:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::NONE;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::CMD_ID;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::ENET_CHANNEL_ID;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::ENET_IS_RELIABLE;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::CmdId_MIN;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::CmdId_MAX;
const int QuestDestroyNpcRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainStartNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[22];
}
bool BargainStartNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 423:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainStartNotify_CmdId BargainStartNotify::NONE;
const BargainStartNotify_CmdId BargainStartNotify::CMD_ID;
const BargainStartNotify_CmdId BargainStartNotify::ENET_CHANNEL_ID;
const BargainStartNotify_CmdId BargainStartNotify::ENET_IS_RELIABLE;
const BargainStartNotify_CmdId BargainStartNotify::CmdId_MIN;
const BargainStartNotify_CmdId BargainStartNotify::CmdId_MAX;
const int BargainStartNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainOfferPriceReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[23];
}
bool BargainOfferPriceReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 424:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::NONE;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::CMD_ID;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::ENET_CHANNEL_ID;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::ENET_IS_RELIABLE;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::IS_ALLOW_CLIENT;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::CmdId_MIN;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::CmdId_MAX;
const int BargainOfferPriceReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainOfferPriceRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[24];
}
bool BargainOfferPriceRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 425:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::NONE;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::CMD_ID;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::ENET_CHANNEL_ID;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::ENET_IS_RELIABLE;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::CmdId_MIN;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::CmdId_MAX;
const int BargainOfferPriceRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainTerminateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[25];
}
bool BargainTerminateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 426:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainTerminateNotify_CmdId BargainTerminateNotify::NONE;
const BargainTerminateNotify_CmdId BargainTerminateNotify::CMD_ID;
const BargainTerminateNotify_CmdId BargainTerminateNotify::ENET_CHANNEL_ID;
const BargainTerminateNotify_CmdId BargainTerminateNotify::ENET_IS_RELIABLE;
const BargainTerminateNotify_CmdId BargainTerminateNotify::CmdId_MIN;
const BargainTerminateNotify_CmdId BargainTerminateNotify::CmdId_MAX;
const int BargainTerminateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChapterState_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[26];
}
bool ChapterState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BargainResultType_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[27];
}
bool BargainResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestListNotify::kQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestListNotify::QuestListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestListNotify)
}
QuestListNotify::QuestListNotify(const QuestListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_list_(from.quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.QuestListNotify)
}

void QuestListNotify::SharedCtor() {
  _cached_size_ = 0;
}

QuestListNotify::~QuestListNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestListNotify)
  SharedDtor();
}

void QuestListNotify::SharedDtor() {
}

void QuestListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestListNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestListNotify& QuestListNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestListNotify* QuestListNotify::New(::google::protobuf::Arena* arena) const {
  QuestListNotify* n = new QuestListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool QuestListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Quest quest_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestListNotify)
  return false;
#undef DO_
}

void QuestListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestListNotify)
}

::google::protobuf::uint8* QuestListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestListNotify)
  return target;
}

size_t QuestListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestListNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Quest quest_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestListNotify)
    MergeFrom(*source);
  }
}

void QuestListNotify::MergeFrom(const QuestListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_list_.MergeFrom(from.quest_list_);
}

void QuestListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestListNotify::CopyFrom(const QuestListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestListNotify::IsInitialized() const {
  return true;
}

void QuestListNotify::Swap(QuestListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestListNotify::InternalSwap(QuestListNotify* other) {
  using std::swap;
  quest_list_.InternalSwap(&other->quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestListNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestListNotify

// repeated .proto.Quest quest_list = 1;
int QuestListNotify::quest_list_size() const {
  return quest_list_.size();
}
void QuestListNotify::clear_quest_list() {
  quest_list_.Clear();
}
const ::proto::Quest& QuestListNotify::quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestListNotify.quest_list)
  return quest_list_.Get(index);
}
::proto::Quest* QuestListNotify::mutable_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestListNotify.quest_list)
  return quest_list_.Mutable(index);
}
::proto::Quest* QuestListNotify::add_quest_list() {
  // @@protoc_insertion_point(field_add:proto.QuestListNotify.quest_list)
  return quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Quest >*
QuestListNotify::mutable_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestListNotify.quest_list)
  return &quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Quest >&
QuestListNotify::quest_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestListNotify.quest_list)
  return quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestListUpdateNotify::kQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestListUpdateNotify::QuestListUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestListUpdateNotify)
}
QuestListUpdateNotify::QuestListUpdateNotify(const QuestListUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_list_(from.quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.QuestListUpdateNotify)
}

void QuestListUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

QuestListUpdateNotify::~QuestListUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestListUpdateNotify)
  SharedDtor();
}

void QuestListUpdateNotify::SharedDtor() {
}

void QuestListUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestListUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestListUpdateNotify& QuestListUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestListUpdateNotify* QuestListUpdateNotify::New(::google::protobuf::Arena* arena) const {
  QuestListUpdateNotify* n = new QuestListUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestListUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool QuestListUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestListUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Quest quest_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestListUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestListUpdateNotify)
  return false;
#undef DO_
}

void QuestListUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestListUpdateNotify)
}

::google::protobuf::uint8* QuestListUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestListUpdateNotify)
  return target;
}

size_t QuestListUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestListUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Quest quest_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestListUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestListUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestListUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestListUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestListUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestListUpdateNotify)
    MergeFrom(*source);
  }
}

void QuestListUpdateNotify::MergeFrom(const QuestListUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestListUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_list_.MergeFrom(from.quest_list_);
}

void QuestListUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestListUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestListUpdateNotify::CopyFrom(const QuestListUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestListUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestListUpdateNotify::IsInitialized() const {
  return true;
}

void QuestListUpdateNotify::Swap(QuestListUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestListUpdateNotify::InternalSwap(QuestListUpdateNotify* other) {
  using std::swap;
  quest_list_.InternalSwap(&other->quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestListUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestListUpdateNotify

// repeated .proto.Quest quest_list = 1;
int QuestListUpdateNotify::quest_list_size() const {
  return quest_list_.size();
}
void QuestListUpdateNotify::clear_quest_list() {
  quest_list_.Clear();
}
const ::proto::Quest& QuestListUpdateNotify::quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestListUpdateNotify.quest_list)
  return quest_list_.Get(index);
}
::proto::Quest* QuestListUpdateNotify::mutable_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestListUpdateNotify.quest_list)
  return quest_list_.Mutable(index);
}
::proto::Quest* QuestListUpdateNotify::add_quest_list() {
  // @@protoc_insertion_point(field_add:proto.QuestListUpdateNotify.quest_list)
  return quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Quest >*
QuestListUpdateNotify::mutable_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestListUpdateNotify.quest_list)
  return &quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Quest >&
QuestListUpdateNotify::quest_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestListUpdateNotify.quest_list)
  return quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDelNotify::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDelNotify::QuestDelNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDelNotify)
}
QuestDelNotify::QuestDelNotify(const QuestDelNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QuestDelNotify)
}

void QuestDelNotify::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

QuestDelNotify::~QuestDelNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestDelNotify)
  SharedDtor();
}

void QuestDelNotify::SharedDtor() {
}

void QuestDelNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDelNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDelNotify& QuestDelNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDelNotify* QuestDelNotify::New(::google::protobuf::Arena* arena) const {
  QuestDelNotify* n = new QuestDelNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDelNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QuestDelNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDelNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDelNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDelNotify)
  return false;
#undef DO_
}

void QuestDelNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDelNotify)
}

::google::protobuf::uint8* QuestDelNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDelNotify)
  return target;
}

size_t QuestDelNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDelNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDelNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDelNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDelNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDelNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDelNotify)
    MergeFrom(*source);
  }
}

void QuestDelNotify::MergeFrom(const QuestDelNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestDelNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDelNotify::CopyFrom(const QuestDelNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDelNotify::IsInitialized() const {
  return true;
}

void QuestDelNotify::Swap(QuestDelNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDelNotify::InternalSwap(QuestDelNotify* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDelNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDelNotify

// uint32 quest_id = 1;
void QuestDelNotify::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDelNotify::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDelNotify.quest_id)
  return quest_id_;
}
void QuestDelNotify::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDelNotify.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChildQuest::kQuestIdFieldNumber;
const int ChildQuest::kStateFieldNumber;
const int ChildQuest::kQuestConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChildQuest::ChildQuest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChildQuest)
}
ChildQuest::ChildQuest(const ChildQuest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_config_id_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(quest_config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ChildQuest)
}

void ChildQuest::SharedCtor() {
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_config_id_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(quest_config_id_));
  _cached_size_ = 0;
}

ChildQuest::~ChildQuest() {
  // @@protoc_insertion_point(destructor:proto.ChildQuest)
  SharedDtor();
}

void ChildQuest::SharedDtor() {
}

void ChildQuest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChildQuest::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChildQuest& ChildQuest::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChildQuest* ChildQuest::New(::google::protobuf::Arena* arena) const {
  ChildQuest* n = new ChildQuest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChildQuest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChildQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_config_id_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(quest_config_id_));
  _internal_metadata_.Clear();
}

bool ChildQuest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChildQuest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChildQuest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChildQuest)
  return false;
#undef DO_
}

void ChildQuest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChildQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // uint32 quest_config_id = 3;
  if (this->quest_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quest_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChildQuest)
}

::google::protobuf::uint8* ChildQuest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChildQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // uint32 quest_config_id = 3;
  if (this->quest_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quest_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChildQuest)
  return target;
}

size_t ChildQuest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChildQuest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint32 quest_config_id = 3;
  if (this->quest_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChildQuest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChildQuest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChildQuest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChildQuest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChildQuest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChildQuest)
    MergeFrom(*source);
  }
}

void ChildQuest::MergeFrom(const ChildQuest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChildQuest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.quest_config_id() != 0) {
    set_quest_config_id(from.quest_config_id());
  }
}

void ChildQuest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChildQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChildQuest::CopyFrom(const ChildQuest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChildQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChildQuest::IsInitialized() const {
  return true;
}

void ChildQuest::Swap(ChildQuest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChildQuest::InternalSwap(ChildQuest* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  swap(state_, other->state_);
  swap(quest_config_id_, other->quest_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChildQuest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChildQuest

// uint32 quest_id = 1;
void ChildQuest::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 ChildQuest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ChildQuest.quest_id)
  return quest_id_;
}
void ChildQuest::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChildQuest.quest_id)
}

// uint32 state = 2;
void ChildQuest::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 ChildQuest::state() const {
  // @@protoc_insertion_point(field_get:proto.ChildQuest.state)
  return state_;
}
void ChildQuest::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.ChildQuest.state)
}

// uint32 quest_config_id = 3;
void ChildQuest::clear_quest_config_id() {
  quest_config_id_ = 0u;
}
::google::protobuf::uint32 ChildQuest::quest_config_id() const {
  // @@protoc_insertion_point(field_get:proto.ChildQuest.quest_config_id)
  return quest_config_id_;
}
void ChildQuest::set_quest_config_id(::google::protobuf::uint32 value) {
  
  quest_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChildQuest.quest_config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentQuestRandomInfo::kEntranceIdFieldNumber;
const int ParentQuestRandomInfo::kTemplateIdFieldNumber;
const int ParentQuestRandomInfo::kFactorListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentQuestRandomInfo::ParentQuestRandomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ParentQuestRandomInfo)
}
ParentQuestRandomInfo::ParentQuestRandomInfo(const ParentQuestRandomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      factor_list_(from.factor_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entrance_id_, &from.entrance_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&template_id_) -
    reinterpret_cast<char*>(&entrance_id_)) + sizeof(template_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ParentQuestRandomInfo)
}

void ParentQuestRandomInfo::SharedCtor() {
  ::memset(&entrance_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&template_id_) -
      reinterpret_cast<char*>(&entrance_id_)) + sizeof(template_id_));
  _cached_size_ = 0;
}

ParentQuestRandomInfo::~ParentQuestRandomInfo() {
  // @@protoc_insertion_point(destructor:proto.ParentQuestRandomInfo)
  SharedDtor();
}

void ParentQuestRandomInfo::SharedDtor() {
}

void ParentQuestRandomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentQuestRandomInfo::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentQuestRandomInfo& ParentQuestRandomInfo::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentQuestRandomInfo* ParentQuestRandomInfo::New(::google::protobuf::Arena* arena) const {
  ParentQuestRandomInfo* n = new ParentQuestRandomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentQuestRandomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ParentQuestRandomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  factor_list_.Clear();
  ::memset(&entrance_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&template_id_) -
      reinterpret_cast<char*>(&entrance_id_)) + sizeof(template_id_));
  _internal_metadata_.Clear();
}

bool ParentQuestRandomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ParentQuestRandomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entrance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entrance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 template_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 factor_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_factor_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_factor_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ParentQuestRandomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ParentQuestRandomInfo)
  return false;
#undef DO_
}

void ParentQuestRandomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ParentQuestRandomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entrance_id = 1;
  if (this->entrance_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entrance_id(), output);
  }

  // uint32 template_id = 2;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->template_id(), output);
  }

  // repeated uint32 factor_list = 3;
  if (this->factor_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _factor_list_cached_byte_size_));
  }
  for (int i = 0, n = this->factor_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->factor_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ParentQuestRandomInfo)
}

::google::protobuf::uint8* ParentQuestRandomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ParentQuestRandomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entrance_id = 1;
  if (this->entrance_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entrance_id(), target);
  }

  // uint32 template_id = 2;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->template_id(), target);
  }

  // repeated uint32 factor_list = 3;
  if (this->factor_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _factor_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->factor_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ParentQuestRandomInfo)
  return target;
}

size_t ParentQuestRandomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ParentQuestRandomInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 factor_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->factor_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _factor_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 entrance_id = 1;
  if (this->entrance_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entrance_id());
  }

  // uint32 template_id = 2;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->template_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentQuestRandomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ParentQuestRandomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentQuestRandomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentQuestRandomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ParentQuestRandomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ParentQuestRandomInfo)
    MergeFrom(*source);
  }
}

void ParentQuestRandomInfo::MergeFrom(const ParentQuestRandomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ParentQuestRandomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  factor_list_.MergeFrom(from.factor_list_);
  if (from.entrance_id() != 0) {
    set_entrance_id(from.entrance_id());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
}

void ParentQuestRandomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ParentQuestRandomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentQuestRandomInfo::CopyFrom(const ParentQuestRandomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ParentQuestRandomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentQuestRandomInfo::IsInitialized() const {
  return true;
}

void ParentQuestRandomInfo::Swap(ParentQuestRandomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentQuestRandomInfo::InternalSwap(ParentQuestRandomInfo* other) {
  using std::swap;
  factor_list_.InternalSwap(&other->factor_list_);
  swap(entrance_id_, other->entrance_id_);
  swap(template_id_, other->template_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentQuestRandomInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentQuestRandomInfo

// uint32 entrance_id = 1;
void ParentQuestRandomInfo::clear_entrance_id() {
  entrance_id_ = 0u;
}
::google::protobuf::uint32 ParentQuestRandomInfo::entrance_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestRandomInfo.entrance_id)
  return entrance_id_;
}
void ParentQuestRandomInfo::set_entrance_id(::google::protobuf::uint32 value) {
  
  entrance_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuestRandomInfo.entrance_id)
}

// uint32 template_id = 2;
void ParentQuestRandomInfo::clear_template_id() {
  template_id_ = 0u;
}
::google::protobuf::uint32 ParentQuestRandomInfo::template_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestRandomInfo.template_id)
  return template_id_;
}
void ParentQuestRandomInfo::set_template_id(::google::protobuf::uint32 value) {
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuestRandomInfo.template_id)
}

// repeated uint32 factor_list = 3;
int ParentQuestRandomInfo::factor_list_size() const {
  return factor_list_.size();
}
void ParentQuestRandomInfo::clear_factor_list() {
  factor_list_.Clear();
}
::google::protobuf::uint32 ParentQuestRandomInfo::factor_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestRandomInfo.factor_list)
  return factor_list_.Get(index);
}
void ParentQuestRandomInfo::set_factor_list(int index, ::google::protobuf::uint32 value) {
  factor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParentQuestRandomInfo.factor_list)
}
void ParentQuestRandomInfo::add_factor_list(::google::protobuf::uint32 value) {
  factor_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParentQuestRandomInfo.factor_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ParentQuestRandomInfo::factor_list() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuestRandomInfo.factor_list)
  return factor_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ParentQuestRandomInfo::mutable_factor_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuestRandomInfo.factor_list)
  return &factor_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentQuest::kParentQuestIdFieldNumber;
const int ParentQuest::kChildQuestListFieldNumber;
const int ParentQuest::kIsFinishedFieldNumber;
const int ParentQuest::kIsRandomFieldNumber;
const int ParentQuest::kRandomInfoFieldNumber;
const int ParentQuest::kQuestVarFieldNumber;
const int ParentQuest::kParentQuestStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentQuest::ParentQuest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ParentQuest)
}
ParentQuest::ParentQuest(const ParentQuest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_quest_list_(from.child_quest_list_),
      quest_var_(from.quest_var_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_random_info()) {
    random_info_ = new ::proto::ParentQuestRandomInfo(*from.random_info_);
  } else {
    random_info_ = NULL;
  }
  ::memcpy(&parent_quest_id_, &from.parent_quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_state_) -
    reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_state_));
  // @@protoc_insertion_point(copy_constructor:proto.ParentQuest)
}

void ParentQuest::SharedCtor() {
  ::memset(&random_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_state_) -
      reinterpret_cast<char*>(&random_info_)) + sizeof(parent_quest_state_));
  _cached_size_ = 0;
}

ParentQuest::~ParentQuest() {
  // @@protoc_insertion_point(destructor:proto.ParentQuest)
  SharedDtor();
}

void ParentQuest::SharedDtor() {
  if (this != internal_default_instance()) delete random_info_;
}

void ParentQuest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentQuest::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentQuest& ParentQuest::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentQuest* ParentQuest::New(::google::protobuf::Arena* arena) const {
  ParentQuest* n = new ParentQuest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentQuest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ParentQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_quest_list_.Clear();
  quest_var_.Clear();
  if (GetArenaNoVirtual() == NULL && random_info_ != NULL) {
    delete random_info_;
  }
  random_info_ = NULL;
  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_state_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_state_));
  _internal_metadata_.Clear();
}

bool ParentQuest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ParentQuest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChildQuest child_quest_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_child_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_random = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_random_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ParentQuestRandomInfo random_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_random_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 quest_var = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_quest_var())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_quest_var())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ParentQuest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ParentQuest)
  return false;
#undef DO_
}

void ParentQuest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ParentQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->parent_quest_id(), output);
  }

  // repeated .proto.ChildQuest child_quest_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->child_quest_list(static_cast<int>(i)), output);
  }

  // bool is_finished = 3;
  if (this->is_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_finished(), output);
  }

  // bool is_random = 4;
  if (this->is_random() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_random(), output);
  }

  // .proto.ParentQuestRandomInfo random_info = 5;
  if (this->has_random_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->random_info_, output);
  }

  // repeated int32 quest_var = 6;
  if (this->quest_var_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _quest_var_cached_byte_size_));
  }
  for (int i = 0, n = this->quest_var_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->quest_var(i), output);
  }

  // uint32 parent_quest_state = 7;
  if (this->parent_quest_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->parent_quest_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ParentQuest)
}

::google::protobuf::uint8* ParentQuest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ParentQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->parent_quest_id(), target);
  }

  // repeated .proto.ChildQuest child_quest_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->child_quest_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_finished = 3;
  if (this->is_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_finished(), target);
  }

  // bool is_random = 4;
  if (this->is_random() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_random(), target);
  }

  // .proto.ParentQuestRandomInfo random_info = 5;
  if (this->has_random_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->random_info_, deterministic, target);
  }

  // repeated int32 quest_var = 6;
  if (this->quest_var_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _quest_var_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->quest_var_, target);
  }

  // uint32 parent_quest_state = 7;
  if (this->parent_quest_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->parent_quest_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ParentQuest)
  return target;
}

size_t ParentQuest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ParentQuest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ChildQuest child_quest_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->child_quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->child_quest_list(static_cast<int>(i)));
    }
  }

  // repeated int32 quest_var = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->quest_var_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _quest_var_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.ParentQuestRandomInfo random_info = 5;
  if (this->has_random_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->random_info_);
  }

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // bool is_finished = 3;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  // bool is_random = 4;
  if (this->is_random() != 0) {
    total_size += 1 + 1;
  }

  // uint32 parent_quest_state = 7;
  if (this->parent_quest_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentQuest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ParentQuest)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentQuest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentQuest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ParentQuest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ParentQuest)
    MergeFrom(*source);
  }
}

void ParentQuest::MergeFrom(const ParentQuest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ParentQuest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_quest_list_.MergeFrom(from.child_quest_list_);
  quest_var_.MergeFrom(from.quest_var_);
  if (from.has_random_info()) {
    mutable_random_info()->::proto::ParentQuestRandomInfo::MergeFrom(from.random_info());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.is_finished() != 0) {
    set_is_finished(from.is_finished());
  }
  if (from.is_random() != 0) {
    set_is_random(from.is_random());
  }
  if (from.parent_quest_state() != 0) {
    set_parent_quest_state(from.parent_quest_state());
  }
}

void ParentQuest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ParentQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentQuest::CopyFrom(const ParentQuest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ParentQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentQuest::IsInitialized() const {
  return true;
}

void ParentQuest::Swap(ParentQuest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentQuest::InternalSwap(ParentQuest* other) {
  using std::swap;
  child_quest_list_.InternalSwap(&other->child_quest_list_);
  quest_var_.InternalSwap(&other->quest_var_);
  swap(random_info_, other->random_info_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(is_finished_, other->is_finished_);
  swap(is_random_, other->is_random_);
  swap(parent_quest_state_, other->parent_quest_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentQuest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentQuest

// uint32 parent_quest_id = 1;
void ParentQuest::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 ParentQuest::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.parent_quest_id)
  return parent_quest_id_;
}
void ParentQuest::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.parent_quest_id)
}

// repeated .proto.ChildQuest child_quest_list = 2;
int ParentQuest::child_quest_list_size() const {
  return child_quest_list_.size();
}
void ParentQuest::clear_child_quest_list() {
  child_quest_list_.Clear();
}
const ::proto::ChildQuest& ParentQuest::child_quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.child_quest_list)
  return child_quest_list_.Get(index);
}
::proto::ChildQuest* ParentQuest::mutable_child_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ParentQuest.child_quest_list)
  return child_quest_list_.Mutable(index);
}
::proto::ChildQuest* ParentQuest::add_child_quest_list() {
  // @@protoc_insertion_point(field_add:proto.ParentQuest.child_quest_list)
  return child_quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChildQuest >*
ParentQuest::mutable_child_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuest.child_quest_list)
  return &child_quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChildQuest >&
ParentQuest::child_quest_list() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuest.child_quest_list)
  return child_quest_list_;
}

// bool is_finished = 3;
void ParentQuest::clear_is_finished() {
  is_finished_ = false;
}
bool ParentQuest::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.is_finished)
  return is_finished_;
}
void ParentQuest::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.is_finished)
}

// bool is_random = 4;
void ParentQuest::clear_is_random() {
  is_random_ = false;
}
bool ParentQuest::is_random() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.is_random)
  return is_random_;
}
void ParentQuest::set_is_random(bool value) {
  
  is_random_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.is_random)
}

// .proto.ParentQuestRandomInfo random_info = 5;
bool ParentQuest::has_random_info() const {
  return this != internal_default_instance() && random_info_ != NULL;
}
void ParentQuest::clear_random_info() {
  if (GetArenaNoVirtual() == NULL && random_info_ != NULL) delete random_info_;
  random_info_ = NULL;
}
const ::proto::ParentQuestRandomInfo& ParentQuest::random_info() const {
  const ::proto::ParentQuestRandomInfo* p = random_info_;
  // @@protoc_insertion_point(field_get:proto.ParentQuest.random_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ParentQuestRandomInfo*>(
      &::proto::_ParentQuestRandomInfo_default_instance_);
}
::proto::ParentQuestRandomInfo* ParentQuest::mutable_random_info() {
  
  if (random_info_ == NULL) {
    random_info_ = new ::proto::ParentQuestRandomInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ParentQuest.random_info)
  return random_info_;
}
::proto::ParentQuestRandomInfo* ParentQuest::release_random_info() {
  // @@protoc_insertion_point(field_release:proto.ParentQuest.random_info)
  
  ::proto::ParentQuestRandomInfo* temp = random_info_;
  random_info_ = NULL;
  return temp;
}
void ParentQuest::set_allocated_random_info(::proto::ParentQuestRandomInfo* random_info) {
  delete random_info_;
  random_info_ = random_info;
  if (random_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ParentQuest.random_info)
}

// repeated int32 quest_var = 6;
int ParentQuest::quest_var_size() const {
  return quest_var_.size();
}
void ParentQuest::clear_quest_var() {
  quest_var_.Clear();
}
::google::protobuf::int32 ParentQuest::quest_var(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.quest_var)
  return quest_var_.Get(index);
}
void ParentQuest::set_quest_var(int index, ::google::protobuf::int32 value) {
  quest_var_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParentQuest.quest_var)
}
void ParentQuest::add_quest_var(::google::protobuf::int32 value) {
  quest_var_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParentQuest.quest_var)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ParentQuest::quest_var() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuest.quest_var)
  return quest_var_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ParentQuest::mutable_quest_var() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuest.quest_var)
  return &quest_var_;
}

// uint32 parent_quest_state = 7;
void ParentQuest::clear_parent_quest_state() {
  parent_quest_state_ = 0u;
}
::google::protobuf::uint32 ParentQuest::parent_quest_state() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.parent_quest_state)
  return parent_quest_state_;
}
void ParentQuest::set_parent_quest_state(::google::protobuf::uint32 value) {
  
  parent_quest_state_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.parent_quest_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishedParentQuestNotify::kParentQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishedParentQuestNotify::FinishedParentQuestNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishedParentQuestNotify)
}
FinishedParentQuestNotify::FinishedParentQuestNotify(const FinishedParentQuestNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parent_quest_list_(from.parent_quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FinishedParentQuestNotify)
}

void FinishedParentQuestNotify::SharedCtor() {
  _cached_size_ = 0;
}

FinishedParentQuestNotify::~FinishedParentQuestNotify() {
  // @@protoc_insertion_point(destructor:proto.FinishedParentQuestNotify)
  SharedDtor();
}

void FinishedParentQuestNotify::SharedDtor() {
}

void FinishedParentQuestNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishedParentQuestNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishedParentQuestNotify& FinishedParentQuestNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishedParentQuestNotify* FinishedParentQuestNotify::New(::google::protobuf::Arena* arena) const {
  FinishedParentQuestNotify* n = new FinishedParentQuestNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishedParentQuestNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishedParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool FinishedParentQuestNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishedParentQuestNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ParentQuest parent_quest_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parent_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishedParentQuestNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishedParentQuestNotify)
  return false;
#undef DO_
}

void FinishedParentQuestNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishedParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->parent_quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishedParentQuestNotify)
}

::google::protobuf::uint8* FinishedParentQuestNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishedParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->parent_quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishedParentQuestNotify)
  return target;
}

size_t FinishedParentQuestNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishedParentQuestNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ParentQuest parent_quest_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->parent_quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parent_quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishedParentQuestNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishedParentQuestNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishedParentQuestNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishedParentQuestNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishedParentQuestNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishedParentQuestNotify)
    MergeFrom(*source);
  }
}

void FinishedParentQuestNotify::MergeFrom(const FinishedParentQuestNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishedParentQuestNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parent_quest_list_.MergeFrom(from.parent_quest_list_);
}

void FinishedParentQuestNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishedParentQuestNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishedParentQuestNotify::CopyFrom(const FinishedParentQuestNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishedParentQuestNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishedParentQuestNotify::IsInitialized() const {
  return true;
}

void FinishedParentQuestNotify::Swap(FinishedParentQuestNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishedParentQuestNotify::InternalSwap(FinishedParentQuestNotify* other) {
  using std::swap;
  parent_quest_list_.InternalSwap(&other->parent_quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishedParentQuestNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishedParentQuestNotify

// repeated .proto.ParentQuest parent_quest_list = 1;
int FinishedParentQuestNotify::parent_quest_list_size() const {
  return parent_quest_list_.size();
}
void FinishedParentQuestNotify::clear_parent_quest_list() {
  parent_quest_list_.Clear();
}
const ::proto::ParentQuest& FinishedParentQuestNotify::parent_quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_.Get(index);
}
::proto::ParentQuest* FinishedParentQuestNotify::mutable_parent_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_.Mutable(index);
}
::proto::ParentQuest* FinishedParentQuestNotify::add_parent_quest_list() {
  // @@protoc_insertion_point(field_add:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >*
FinishedParentQuestNotify::mutable_parent_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FinishedParentQuestNotify.parent_quest_list)
  return &parent_quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >&
FinishedParentQuestNotify::parent_quest_list() const {
  // @@protoc_insertion_point(field_list:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishedParentQuestUpdateNotify::kParentQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishedParentQuestUpdateNotify::FinishedParentQuestUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishedParentQuestUpdateNotify)
}
FinishedParentQuestUpdateNotify::FinishedParentQuestUpdateNotify(const FinishedParentQuestUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parent_quest_list_(from.parent_quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FinishedParentQuestUpdateNotify)
}

void FinishedParentQuestUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

FinishedParentQuestUpdateNotify::~FinishedParentQuestUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.FinishedParentQuestUpdateNotify)
  SharedDtor();
}

void FinishedParentQuestUpdateNotify::SharedDtor() {
}

void FinishedParentQuestUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishedParentQuestUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishedParentQuestUpdateNotify& FinishedParentQuestUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishedParentQuestUpdateNotify* FinishedParentQuestUpdateNotify::New(::google::protobuf::Arena* arena) const {
  FinishedParentQuestUpdateNotify* n = new FinishedParentQuestUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishedParentQuestUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishedParentQuestUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool FinishedParentQuestUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishedParentQuestUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ParentQuest parent_quest_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parent_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishedParentQuestUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishedParentQuestUpdateNotify)
  return false;
#undef DO_
}

void FinishedParentQuestUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishedParentQuestUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->parent_quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishedParentQuestUpdateNotify)
}

::google::protobuf::uint8* FinishedParentQuestUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishedParentQuestUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->parent_quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishedParentQuestUpdateNotify)
  return target;
}

size_t FinishedParentQuestUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishedParentQuestUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ParentQuest parent_quest_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->parent_quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parent_quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishedParentQuestUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishedParentQuestUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishedParentQuestUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishedParentQuestUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishedParentQuestUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishedParentQuestUpdateNotify)
    MergeFrom(*source);
  }
}

void FinishedParentQuestUpdateNotify::MergeFrom(const FinishedParentQuestUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishedParentQuestUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parent_quest_list_.MergeFrom(from.parent_quest_list_);
}

void FinishedParentQuestUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishedParentQuestUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishedParentQuestUpdateNotify::CopyFrom(const FinishedParentQuestUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishedParentQuestUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishedParentQuestUpdateNotify::IsInitialized() const {
  return true;
}

void FinishedParentQuestUpdateNotify::Swap(FinishedParentQuestUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishedParentQuestUpdateNotify::InternalSwap(FinishedParentQuestUpdateNotify* other) {
  using std::swap;
  parent_quest_list_.InternalSwap(&other->parent_quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishedParentQuestUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishedParentQuestUpdateNotify

// repeated .proto.ParentQuest parent_quest_list = 1;
int FinishedParentQuestUpdateNotify::parent_quest_list_size() const {
  return parent_quest_list_.size();
}
void FinishedParentQuestUpdateNotify::clear_parent_quest_list() {
  parent_quest_list_.Clear();
}
const ::proto::ParentQuest& FinishedParentQuestUpdateNotify::parent_quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_.Get(index);
}
::proto::ParentQuest* FinishedParentQuestUpdateNotify::mutable_parent_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_.Mutable(index);
}
::proto::ParentQuest* FinishedParentQuestUpdateNotify::add_parent_quest_list() {
  // @@protoc_insertion_point(field_add:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >*
FinishedParentQuestUpdateNotify::mutable_parent_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return &parent_quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >&
FinishedParentQuestUpdateNotify::parent_quest_list() const {
  // @@protoc_insertion_point(field_list:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddQuestContentProgressReq::kContentTypeFieldNumber;
const int AddQuestContentProgressReq::kParamFieldNumber;
const int AddQuestContentProgressReq::kAddProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddQuestContentProgressReq::AddQuestContentProgressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddQuestContentProgressReq)
}
AddQuestContentProgressReq::AddQuestContentProgressReq(const AddQuestContentProgressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&content_type_, &from.content_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_progress_) -
    reinterpret_cast<char*>(&content_type_)) + sizeof(add_progress_));
  // @@protoc_insertion_point(copy_constructor:proto.AddQuestContentProgressReq)
}

void AddQuestContentProgressReq::SharedCtor() {
  ::memset(&content_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_progress_) -
      reinterpret_cast<char*>(&content_type_)) + sizeof(add_progress_));
  _cached_size_ = 0;
}

AddQuestContentProgressReq::~AddQuestContentProgressReq() {
  // @@protoc_insertion_point(destructor:proto.AddQuestContentProgressReq)
  SharedDtor();
}

void AddQuestContentProgressReq::SharedDtor() {
}

void AddQuestContentProgressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddQuestContentProgressReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddQuestContentProgressReq& AddQuestContentProgressReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddQuestContentProgressReq* AddQuestContentProgressReq::New(::google::protobuf::Arena* arena) const {
  AddQuestContentProgressReq* n = new AddQuestContentProgressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddQuestContentProgressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddQuestContentProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&content_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_progress_) -
      reinterpret_cast<char*>(&content_type_)) + sizeof(add_progress_));
  _internal_metadata_.Clear();
}

bool AddQuestContentProgressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddQuestContentProgressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 content_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 add_progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddQuestContentProgressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddQuestContentProgressReq)
  return false;
#undef DO_
}

void AddQuestContentProgressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddQuestContentProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 content_type = 1;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->content_type(), output);
  }

  // uint32 param = 2;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param(), output);
  }

  // uint32 add_progress = 3;
  if (this->add_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->add_progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddQuestContentProgressReq)
}

::google::protobuf::uint8* AddQuestContentProgressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddQuestContentProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 content_type = 1;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->content_type(), target);
  }

  // uint32 param = 2;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param(), target);
  }

  // uint32 add_progress = 3;
  if (this->add_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->add_progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddQuestContentProgressReq)
  return target;
}

size_t AddQuestContentProgressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddQuestContentProgressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 content_type = 1;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->content_type());
  }

  // uint32 param = 2;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  // uint32 add_progress = 3;
  if (this->add_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->add_progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddQuestContentProgressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddQuestContentProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddQuestContentProgressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddQuestContentProgressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddQuestContentProgressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddQuestContentProgressReq)
    MergeFrom(*source);
  }
}

void AddQuestContentProgressReq::MergeFrom(const AddQuestContentProgressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddQuestContentProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.add_progress() != 0) {
    set_add_progress(from.add_progress());
  }
}

void AddQuestContentProgressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddQuestContentProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddQuestContentProgressReq::CopyFrom(const AddQuestContentProgressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddQuestContentProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddQuestContentProgressReq::IsInitialized() const {
  return true;
}

void AddQuestContentProgressReq::Swap(AddQuestContentProgressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddQuestContentProgressReq::InternalSwap(AddQuestContentProgressReq* other) {
  using std::swap;
  swap(content_type_, other->content_type_);
  swap(param_, other->param_);
  swap(add_progress_, other->add_progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddQuestContentProgressReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddQuestContentProgressReq

// uint32 content_type = 1;
void AddQuestContentProgressReq::clear_content_type() {
  content_type_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressReq::content_type() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressReq.content_type)
  return content_type_;
}
void AddQuestContentProgressReq::set_content_type(::google::protobuf::uint32 value) {
  
  content_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressReq.content_type)
}

// uint32 param = 2;
void AddQuestContentProgressReq::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressReq::param() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressReq.param)
  return param_;
}
void AddQuestContentProgressReq::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressReq.param)
}

// uint32 add_progress = 3;
void AddQuestContentProgressReq::clear_add_progress() {
  add_progress_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressReq::add_progress() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressReq.add_progress)
  return add_progress_;
}
void AddQuestContentProgressReq::set_add_progress(::google::protobuf::uint32 value) {
  
  add_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressReq.add_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddQuestContentProgressRsp::kRetcodeFieldNumber;
const int AddQuestContentProgressRsp::kContentTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddQuestContentProgressRsp::AddQuestContentProgressRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddQuestContentProgressRsp)
}
AddQuestContentProgressRsp::AddQuestContentProgressRsp(const AddQuestContentProgressRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&content_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(content_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AddQuestContentProgressRsp)
}

void AddQuestContentProgressRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(content_type_));
  _cached_size_ = 0;
}

AddQuestContentProgressRsp::~AddQuestContentProgressRsp() {
  // @@protoc_insertion_point(destructor:proto.AddQuestContentProgressRsp)
  SharedDtor();
}

void AddQuestContentProgressRsp::SharedDtor() {
}

void AddQuestContentProgressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddQuestContentProgressRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddQuestContentProgressRsp& AddQuestContentProgressRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddQuestContentProgressRsp* AddQuestContentProgressRsp::New(::google::protobuf::Arena* arena) const {
  AddQuestContentProgressRsp* n = new AddQuestContentProgressRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddQuestContentProgressRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddQuestContentProgressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(content_type_));
  _internal_metadata_.Clear();
}

bool AddQuestContentProgressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddQuestContentProgressRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 content_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddQuestContentProgressRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddQuestContentProgressRsp)
  return false;
#undef DO_
}

void AddQuestContentProgressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddQuestContentProgressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 content_type = 2;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->content_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddQuestContentProgressRsp)
}

::google::protobuf::uint8* AddQuestContentProgressRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddQuestContentProgressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 content_type = 2;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->content_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddQuestContentProgressRsp)
  return target;
}

size_t AddQuestContentProgressRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddQuestContentProgressRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 content_type = 2;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->content_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddQuestContentProgressRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddQuestContentProgressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddQuestContentProgressRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddQuestContentProgressRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddQuestContentProgressRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddQuestContentProgressRsp)
    MergeFrom(*source);
  }
}

void AddQuestContentProgressRsp::MergeFrom(const AddQuestContentProgressRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddQuestContentProgressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
}

void AddQuestContentProgressRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddQuestContentProgressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddQuestContentProgressRsp::CopyFrom(const AddQuestContentProgressRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddQuestContentProgressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddQuestContentProgressRsp::IsInitialized() const {
  return true;
}

void AddQuestContentProgressRsp::Swap(AddQuestContentProgressRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddQuestContentProgressRsp::InternalSwap(AddQuestContentProgressRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(content_type_, other->content_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddQuestContentProgressRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddQuestContentProgressRsp

// int32 retcode = 1;
void AddQuestContentProgressRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AddQuestContentProgressRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressRsp.retcode)
  return retcode_;
}
void AddQuestContentProgressRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressRsp.retcode)
}

// uint32 content_type = 2;
void AddQuestContentProgressRsp::clear_content_type() {
  content_type_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressRsp::content_type() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressRsp.content_type)
  return content_type_;
}
void AddQuestContentProgressRsp::set_content_type(::google::protobuf::uint32 value) {
  
  content_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressRsp.content_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQuestTalkHistoryReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQuestTalkHistoryReq::GetQuestTalkHistoryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetQuestTalkHistoryReq)
}
GetQuestTalkHistoryReq::GetQuestTalkHistoryReq(const GetQuestTalkHistoryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetQuestTalkHistoryReq)
}

void GetQuestTalkHistoryReq::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

GetQuestTalkHistoryReq::~GetQuestTalkHistoryReq() {
  // @@protoc_insertion_point(destructor:proto.GetQuestTalkHistoryReq)
  SharedDtor();
}

void GetQuestTalkHistoryReq::SharedDtor() {
}

void GetQuestTalkHistoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQuestTalkHistoryReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQuestTalkHistoryReq& GetQuestTalkHistoryReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetQuestTalkHistoryReq* GetQuestTalkHistoryReq::New(::google::protobuf::Arena* arena) const {
  GetQuestTalkHistoryReq* n = new GetQuestTalkHistoryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetQuestTalkHistoryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetQuestTalkHistoryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetQuestTalkHistoryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetQuestTalkHistoryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetQuestTalkHistoryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetQuestTalkHistoryReq)
  return false;
#undef DO_
}

void GetQuestTalkHistoryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetQuestTalkHistoryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetQuestTalkHistoryReq)
}

::google::protobuf::uint8* GetQuestTalkHistoryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetQuestTalkHistoryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetQuestTalkHistoryReq)
  return target;
}

size_t GetQuestTalkHistoryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetQuestTalkHistoryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQuestTalkHistoryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetQuestTalkHistoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuestTalkHistoryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQuestTalkHistoryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetQuestTalkHistoryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetQuestTalkHistoryReq)
    MergeFrom(*source);
  }
}

void GetQuestTalkHistoryReq::MergeFrom(const GetQuestTalkHistoryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetQuestTalkHistoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void GetQuestTalkHistoryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetQuestTalkHistoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuestTalkHistoryReq::CopyFrom(const GetQuestTalkHistoryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetQuestTalkHistoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestTalkHistoryReq::IsInitialized() const {
  return true;
}

void GetQuestTalkHistoryReq::Swap(GetQuestTalkHistoryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQuestTalkHistoryReq::InternalSwap(GetQuestTalkHistoryReq* other) {
  using std::swap;
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetQuestTalkHistoryReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQuestTalkHistoryReq

// uint32 parent_quest_id = 1;
void GetQuestTalkHistoryReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 GetQuestTalkHistoryReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryReq.parent_quest_id)
  return parent_quest_id_;
}
void GetQuestTalkHistoryReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQuestTalkHistoryRsp::kRetcodeFieldNumber;
const int GetQuestTalkHistoryRsp::kParentQuestIdFieldNumber;
const int GetQuestTalkHistoryRsp::kTalkIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQuestTalkHistoryRsp::GetQuestTalkHistoryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetQuestTalkHistoryRsp)
}
GetQuestTalkHistoryRsp::GetQuestTalkHistoryRsp(const GetQuestTalkHistoryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      talk_id_list_(from.talk_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GetQuestTalkHistoryRsp)
}

void GetQuestTalkHistoryRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

GetQuestTalkHistoryRsp::~GetQuestTalkHistoryRsp() {
  // @@protoc_insertion_point(destructor:proto.GetQuestTalkHistoryRsp)
  SharedDtor();
}

void GetQuestTalkHistoryRsp::SharedDtor() {
}

void GetQuestTalkHistoryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQuestTalkHistoryRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQuestTalkHistoryRsp& GetQuestTalkHistoryRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetQuestTalkHistoryRsp* GetQuestTalkHistoryRsp::New(::google::protobuf::Arena* arena) const {
  GetQuestTalkHistoryRsp* n = new GetQuestTalkHistoryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetQuestTalkHistoryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetQuestTalkHistoryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  talk_id_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool GetQuestTalkHistoryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetQuestTalkHistoryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 talk_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_talk_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_talk_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetQuestTalkHistoryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetQuestTalkHistoryRsp)
  return false;
#undef DO_
}

void GetQuestTalkHistoryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetQuestTalkHistoryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 parent_quest_id = 2;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->parent_quest_id(), output);
  }

  // repeated uint32 talk_id_list = 3;
  if (this->talk_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _talk_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->talk_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->talk_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetQuestTalkHistoryRsp)
}

::google::protobuf::uint8* GetQuestTalkHistoryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetQuestTalkHistoryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 parent_quest_id = 2;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->parent_quest_id(), target);
  }

  // repeated uint32 talk_id_list = 3;
  if (this->talk_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _talk_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->talk_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetQuestTalkHistoryRsp)
  return target;
}

size_t GetQuestTalkHistoryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetQuestTalkHistoryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 talk_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->talk_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _talk_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 parent_quest_id = 2;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQuestTalkHistoryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetQuestTalkHistoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuestTalkHistoryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQuestTalkHistoryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetQuestTalkHistoryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetQuestTalkHistoryRsp)
    MergeFrom(*source);
  }
}

void GetQuestTalkHistoryRsp::MergeFrom(const GetQuestTalkHistoryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetQuestTalkHistoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  talk_id_list_.MergeFrom(from.talk_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void GetQuestTalkHistoryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetQuestTalkHistoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuestTalkHistoryRsp::CopyFrom(const GetQuestTalkHistoryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetQuestTalkHistoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestTalkHistoryRsp::IsInitialized() const {
  return true;
}

void GetQuestTalkHistoryRsp::Swap(GetQuestTalkHistoryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQuestTalkHistoryRsp::InternalSwap(GetQuestTalkHistoryRsp* other) {
  using std::swap;
  talk_id_list_.InternalSwap(&other->talk_id_list_);
  swap(retcode_, other->retcode_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetQuestTalkHistoryRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQuestTalkHistoryRsp

// int32 retcode = 1;
void GetQuestTalkHistoryRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetQuestTalkHistoryRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryRsp.retcode)
  return retcode_;
}
void GetQuestTalkHistoryRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryRsp.retcode)
}

// uint32 parent_quest_id = 2;
void GetQuestTalkHistoryRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 GetQuestTalkHistoryRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryRsp.parent_quest_id)
  return parent_quest_id_;
}
void GetQuestTalkHistoryRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryRsp.parent_quest_id)
}

// repeated uint32 talk_id_list = 3;
int GetQuestTalkHistoryRsp::talk_id_list_size() const {
  return talk_id_list_.size();
}
void GetQuestTalkHistoryRsp::clear_talk_id_list() {
  talk_id_list_.Clear();
}
::google::protobuf::uint32 GetQuestTalkHistoryRsp::talk_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryRsp.talk_id_list)
  return talk_id_list_.Get(index);
}
void GetQuestTalkHistoryRsp::set_talk_id_list(int index, ::google::protobuf::uint32 value) {
  talk_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryRsp.talk_id_list)
}
void GetQuestTalkHistoryRsp::add_talk_id_list(::google::protobuf::uint32 value) {
  talk_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetQuestTalkHistoryRsp.talk_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetQuestTalkHistoryRsp::talk_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetQuestTalkHistoryRsp.talk_id_list)
  return talk_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetQuestTalkHistoryRsp::mutable_talk_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetQuestTalkHistoryRsp.talk_id_list)
  return &talk_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestCreateEntityReq::kEntityFieldNumber;
const int QuestCreateEntityReq::kQuestIdFieldNumber;
const int QuestCreateEntityReq::kIsRewindFieldNumber;
const int QuestCreateEntityReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestCreateEntityReq::QuestCreateEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestCreateEntityReq)
}
QuestCreateEntityReq::QuestCreateEntityReq(const QuestCreateEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::proto::CreateEntityInfo(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestCreateEntityReq)
}

void QuestCreateEntityReq::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

QuestCreateEntityReq::~QuestCreateEntityReq() {
  // @@protoc_insertion_point(destructor:proto.QuestCreateEntityReq)
  SharedDtor();
}

void QuestCreateEntityReq::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void QuestCreateEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestCreateEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestCreateEntityReq& QuestCreateEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestCreateEntityReq* QuestCreateEntityReq::New(::google::protobuf::Arena* arena) const {
  QuestCreateEntityReq* n = new QuestCreateEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestCreateEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool QuestCreateEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestCreateEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CreateEntityInfo entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_rewind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rewind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestCreateEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestCreateEntityReq)
  return false;
#undef DO_
}

void QuestCreateEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CreateEntityInfo entity = 1;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entity_, output);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quest_id(), output);
  }

  // bool is_rewind = 3;
  if (this->is_rewind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_rewind(), output);
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestCreateEntityReq)
}

::google::protobuf::uint8* QuestCreateEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CreateEntityInfo entity = 1;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->entity_, deterministic, target);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quest_id(), target);
  }

  // bool is_rewind = 3;
  if (this->is_rewind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_rewind(), target);
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestCreateEntityReq)
  return target;
}

size_t QuestCreateEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestCreateEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateEntityInfo entity = 1;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // bool is_rewind = 3;
  if (this->is_rewind() != 0) {
    total_size += 1 + 1;
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestCreateEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestCreateEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestCreateEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestCreateEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestCreateEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestCreateEntityReq)
    MergeFrom(*source);
  }
}

void QuestCreateEntityReq::MergeFrom(const QuestCreateEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestCreateEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::proto::CreateEntityInfo::MergeFrom(from.entity());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.is_rewind() != 0) {
    set_is_rewind(from.is_rewind());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestCreateEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestCreateEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestCreateEntityReq::CopyFrom(const QuestCreateEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestCreateEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestCreateEntityReq::IsInitialized() const {
  return true;
}

void QuestCreateEntityReq::Swap(QuestCreateEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestCreateEntityReq::InternalSwap(QuestCreateEntityReq* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(quest_id_, other->quest_id_);
  swap(is_rewind_, other->is_rewind_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestCreateEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestCreateEntityReq

// .proto.CreateEntityInfo entity = 1;
bool QuestCreateEntityReq::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void QuestCreateEntityReq::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::proto::CreateEntityInfo& QuestCreateEntityReq::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
::proto::CreateEntityInfo* QuestCreateEntityReq::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuestCreateEntityReq.entity)
  return entity_;
}
::proto::CreateEntityInfo* QuestCreateEntityReq::release_entity() {
  // @@protoc_insertion_point(field_release:proto.QuestCreateEntityReq.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
void QuestCreateEntityReq::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuestCreateEntityReq.entity)
}

// uint32 quest_id = 2;
void QuestCreateEntityReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.quest_id)
  return quest_id_;
}
void QuestCreateEntityReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityReq.quest_id)
}

// bool is_rewind = 3;
void QuestCreateEntityReq::clear_is_rewind() {
  is_rewind_ = false;
}
bool QuestCreateEntityReq::is_rewind() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.is_rewind)
  return is_rewind_;
}
void QuestCreateEntityReq::set_is_rewind(bool value) {
  
  is_rewind_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityReq.is_rewind)
}

// uint32 parent_quest_id = 4;
void QuestCreateEntityReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.parent_quest_id)
  return parent_quest_id_;
}
void QuestCreateEntityReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestCreateEntityRsp::kRetcodeFieldNumber;
const int QuestCreateEntityRsp::kEntityIdFieldNumber;
const int QuestCreateEntityRsp::kEntityFieldNumber;
const int QuestCreateEntityRsp::kQuestIdFieldNumber;
const int QuestCreateEntityRsp::kIsRewindFieldNumber;
const int QuestCreateEntityRsp::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestCreateEntityRsp::QuestCreateEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestCreateEntityRsp)
}
QuestCreateEntityRsp::QuestCreateEntityRsp(const QuestCreateEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::proto::CreateEntityInfo(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_rewind_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_rewind_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestCreateEntityRsp)
}

void QuestCreateEntityRsp::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_rewind_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(is_rewind_));
  _cached_size_ = 0;
}

QuestCreateEntityRsp::~QuestCreateEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestCreateEntityRsp)
  SharedDtor();
}

void QuestCreateEntityRsp::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void QuestCreateEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestCreateEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestCreateEntityRsp& QuestCreateEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestCreateEntityRsp* QuestCreateEntityRsp::New(::google::protobuf::Arena* arena) const {
  QuestCreateEntityRsp* n = new QuestCreateEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestCreateEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_rewind_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_rewind_));
  _internal_metadata_.Clear();
}

bool QuestCreateEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestCreateEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateEntityInfo entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_rewind = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rewind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestCreateEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestCreateEntityRsp)
  return false;
#undef DO_
}

void QuestCreateEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.CreateEntityInfo entity = 3;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entity_, output);
  }

  // uint32 quest_id = 7;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->quest_id(), output);
  }

  // bool is_rewind = 8;
  if (this->is_rewind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_rewind(), output);
  }

  // uint32 parent_quest_id = 9;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestCreateEntityRsp)
}

::google::protobuf::uint8* QuestCreateEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.CreateEntityInfo entity = 3;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entity_, deterministic, target);
  }

  // uint32 quest_id = 7;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->quest_id(), target);
  }

  // bool is_rewind = 8;
  if (this->is_rewind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_rewind(), target);
  }

  // uint32 parent_quest_id = 9;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestCreateEntityRsp)
  return target;
}

size_t QuestCreateEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestCreateEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateEntityInfo entity = 3;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 parent_quest_id = 9;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 quest_id = 7;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // bool is_rewind = 8;
  if (this->is_rewind() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestCreateEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestCreateEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestCreateEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestCreateEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestCreateEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestCreateEntityRsp)
    MergeFrom(*source);
  }
}

void QuestCreateEntityRsp::MergeFrom(const QuestCreateEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestCreateEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::proto::CreateEntityInfo::MergeFrom(from.entity());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.is_rewind() != 0) {
    set_is_rewind(from.is_rewind());
  }
}

void QuestCreateEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestCreateEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestCreateEntityRsp::CopyFrom(const QuestCreateEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestCreateEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestCreateEntityRsp::IsInitialized() const {
  return true;
}

void QuestCreateEntityRsp::Swap(QuestCreateEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestCreateEntityRsp::InternalSwap(QuestCreateEntityRsp* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(quest_id_, other->quest_id_);
  swap(is_rewind_, other->is_rewind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestCreateEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestCreateEntityRsp

// int32 retcode = 1;
void QuestCreateEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestCreateEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.retcode)
  return retcode_;
}
void QuestCreateEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.retcode)
}

// uint32 entity_id = 2;
void QuestCreateEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.entity_id)
  return entity_id_;
}
void QuestCreateEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.entity_id)
}

// .proto.CreateEntityInfo entity = 3;
bool QuestCreateEntityRsp::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void QuestCreateEntityRsp::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::proto::CreateEntityInfo& QuestCreateEntityRsp::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
::proto::CreateEntityInfo* QuestCreateEntityRsp::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuestCreateEntityRsp.entity)
  return entity_;
}
::proto::CreateEntityInfo* QuestCreateEntityRsp::release_entity() {
  // @@protoc_insertion_point(field_release:proto.QuestCreateEntityRsp.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
void QuestCreateEntityRsp::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuestCreateEntityRsp.entity)
}

// uint32 quest_id = 7;
void QuestCreateEntityRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.quest_id)
  return quest_id_;
}
void QuestCreateEntityRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.quest_id)
}

// bool is_rewind = 8;
void QuestCreateEntityRsp::clear_is_rewind() {
  is_rewind_ = false;
}
bool QuestCreateEntityRsp::is_rewind() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.is_rewind)
  return is_rewind_;
}
void QuestCreateEntityRsp::set_is_rewind(bool value) {
  
  is_rewind_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.is_rewind)
}

// uint32 parent_quest_id = 9;
void QuestCreateEntityRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.parent_quest_id)
  return parent_quest_id_;
}
void QuestCreateEntityRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyEntityReq::kEntityIdFieldNumber;
const int QuestDestroyEntityReq::kQuestIdFieldNumber;
const int QuestDestroyEntityReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyEntityReq::QuestDestroyEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyEntityReq)
}
QuestDestroyEntityReq::QuestDestroyEntityReq(const QuestDestroyEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyEntityReq)
}

void QuestDestroyEntityReq::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

QuestDestroyEntityReq::~QuestDestroyEntityReq() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyEntityReq)
  SharedDtor();
}

void QuestDestroyEntityReq::SharedDtor() {
}

void QuestDestroyEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyEntityReq& QuestDestroyEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyEntityReq* QuestDestroyEntityReq::New(::google::protobuf::Arena* arena) const {
  QuestDestroyEntityReq* n = new QuestDestroyEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyEntityReq)
  return false;
#undef DO_
}

void QuestDestroyEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quest_id(), output);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyEntityReq)
}

::google::protobuf::uint8* QuestDestroyEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quest_id(), target);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyEntityReq)
  return target;
}

size_t QuestDestroyEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyEntityReq)
    MergeFrom(*source);
  }
}

void QuestDestroyEntityReq::MergeFrom(const QuestDestroyEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void QuestDestroyEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyEntityReq::CopyFrom(const QuestDestroyEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyEntityReq::IsInitialized() const {
  return true;
}

void QuestDestroyEntityReq::Swap(QuestDestroyEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyEntityReq::InternalSwap(QuestDestroyEntityReq* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(quest_id_, other->quest_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyEntityReq

// uint32 entity_id = 1;
void QuestDestroyEntityReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityReq.entity_id)
  return entity_id_;
}
void QuestDestroyEntityReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityReq.entity_id)
}

// uint32 quest_id = 2;
void QuestDestroyEntityReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityReq.quest_id)
  return quest_id_;
}
void QuestDestroyEntityReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityReq.quest_id)
}

// uint32 scene_id = 3;
void QuestDestroyEntityReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityReq.scene_id)
  return scene_id_;
}
void QuestDestroyEntityReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityReq.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyEntityRsp::kRetcodeFieldNumber;
const int QuestDestroyEntityRsp::kEntityIdFieldNumber;
const int QuestDestroyEntityRsp::kQuestIdFieldNumber;
const int QuestDestroyEntityRsp::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyEntityRsp::QuestDestroyEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyEntityRsp)
}
QuestDestroyEntityRsp::QuestDestroyEntityRsp(const QuestDestroyEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyEntityRsp)
}

void QuestDestroyEntityRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

QuestDestroyEntityRsp::~QuestDestroyEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyEntityRsp)
  SharedDtor();
}

void QuestDestroyEntityRsp::SharedDtor() {
}

void QuestDestroyEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyEntityRsp& QuestDestroyEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyEntityRsp* QuestDestroyEntityRsp::New(::google::protobuf::Arena* arena) const {
  QuestDestroyEntityRsp* n = new QuestDestroyEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyEntityRsp)
  return false;
#undef DO_
}

void QuestDestroyEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quest_id(), output);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyEntityRsp)
}

::google::protobuf::uint8* QuestDestroyEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quest_id(), target);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyEntityRsp)
  return target;
}

size_t QuestDestroyEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyEntityRsp)
    MergeFrom(*source);
  }
}

void QuestDestroyEntityRsp::MergeFrom(const QuestDestroyEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void QuestDestroyEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyEntityRsp::CopyFrom(const QuestDestroyEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyEntityRsp::IsInitialized() const {
  return true;
}

void QuestDestroyEntityRsp::Swap(QuestDestroyEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyEntityRsp::InternalSwap(QuestDestroyEntityRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(quest_id_, other->quest_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyEntityRsp

// int32 retcode = 1;
void QuestDestroyEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestDestroyEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.retcode)
  return retcode_;
}
void QuestDestroyEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.retcode)
}

// uint32 entity_id = 2;
void QuestDestroyEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.entity_id)
  return entity_id_;
}
void QuestDestroyEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.entity_id)
}

// uint32 quest_id = 3;
void QuestDestroyEntityRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.quest_id)
  return quest_id_;
}
void QuestDestroyEntityRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.quest_id)
}

// uint32 scene_id = 4;
void QuestDestroyEntityRsp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.scene_id)
  return scene_id_;
}
void QuestDestroyEntityRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogTalkNotify::kTalkIdFieldNumber;
const int LogTalkNotify::kIsStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogTalkNotify::LogTalkNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LogTalkNotify)
}
LogTalkNotify::LogTalkNotify(const LogTalkNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&talk_id_, &from.talk_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_start_) -
    reinterpret_cast<char*>(&talk_id_)) + sizeof(is_start_));
  // @@protoc_insertion_point(copy_constructor:proto.LogTalkNotify)
}

void LogTalkNotify::SharedCtor() {
  ::memset(&talk_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_start_) -
      reinterpret_cast<char*>(&talk_id_)) + sizeof(is_start_));
  _cached_size_ = 0;
}

LogTalkNotify::~LogTalkNotify() {
  // @@protoc_insertion_point(destructor:proto.LogTalkNotify)
  SharedDtor();
}

void LogTalkNotify::SharedDtor() {
}

void LogTalkNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogTalkNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogTalkNotify& LogTalkNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogTalkNotify* LogTalkNotify::New(::google::protobuf::Arena* arena) const {
  LogTalkNotify* n = new LogTalkNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogTalkNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LogTalkNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&talk_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_start_) -
      reinterpret_cast<char*>(&talk_id_)) + sizeof(is_start_));
  _internal_metadata_.Clear();
}

bool LogTalkNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LogTalkNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 talk_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &talk_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LogTalkNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LogTalkNotify)
  return false;
#undef DO_
}

void LogTalkNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LogTalkNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->talk_id(), output);
  }

  // bool is_start = 2;
  if (this->is_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_start(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LogTalkNotify)
}

::google::protobuf::uint8* LogTalkNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LogTalkNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->talk_id(), target);
  }

  // bool is_start = 2;
  if (this->is_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_start(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LogTalkNotify)
  return target;
}

size_t LogTalkNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LogTalkNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->talk_id());
  }

  // bool is_start = 2;
  if (this->is_start() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogTalkNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LogTalkNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LogTalkNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogTalkNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LogTalkNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LogTalkNotify)
    MergeFrom(*source);
  }
}

void LogTalkNotify::MergeFrom(const LogTalkNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LogTalkNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.talk_id() != 0) {
    set_talk_id(from.talk_id());
  }
  if (from.is_start() != 0) {
    set_is_start(from.is_start());
  }
}

void LogTalkNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LogTalkNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogTalkNotify::CopyFrom(const LogTalkNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LogTalkNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogTalkNotify::IsInitialized() const {
  return true;
}

void LogTalkNotify::Swap(LogTalkNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogTalkNotify::InternalSwap(LogTalkNotify* other) {
  using std::swap;
  swap(talk_id_, other->talk_id_);
  swap(is_start_, other->is_start_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogTalkNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogTalkNotify

// uint32 talk_id = 1;
void LogTalkNotify::clear_talk_id() {
  talk_id_ = 0u;
}
::google::protobuf::uint32 LogTalkNotify::talk_id() const {
  // @@protoc_insertion_point(field_get:proto.LogTalkNotify.talk_id)
  return talk_id_;
}
void LogTalkNotify::set_talk_id(::google::protobuf::uint32 value) {
  
  talk_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LogTalkNotify.talk_id)
}

// bool is_start = 2;
void LogTalkNotify::clear_is_start() {
  is_start_ = false;
}
bool LogTalkNotify::is_start() const {
  // @@protoc_insertion_point(field_get:proto.LogTalkNotify.is_start)
  return is_start_;
}
void LogTalkNotify::set_is_start(bool value) {
  
  is_start_ = value;
  // @@protoc_insertion_point(field_set:proto.LogTalkNotify.is_start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogCutsceneNotify::kCutsceneNameFieldNumber;
const int LogCutsceneNotify::kIsStartFieldNumber;
const int LogCutsceneNotify::kIsSkipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogCutsceneNotify::LogCutsceneNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LogCutsceneNotify)
}
LogCutsceneNotify::LogCutsceneNotify(const LogCutsceneNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cutscene_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cutscene_name().size() > 0) {
    cutscene_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cutscene_name_);
  }
  ::memcpy(&is_start_, &from.is_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_skip_) -
    reinterpret_cast<char*>(&is_start_)) + sizeof(is_skip_));
  // @@protoc_insertion_point(copy_constructor:proto.LogCutsceneNotify)
}

void LogCutsceneNotify::SharedCtor() {
  cutscene_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_) -
      reinterpret_cast<char*>(&is_start_)) + sizeof(is_skip_));
  _cached_size_ = 0;
}

LogCutsceneNotify::~LogCutsceneNotify() {
  // @@protoc_insertion_point(destructor:proto.LogCutsceneNotify)
  SharedDtor();
}

void LogCutsceneNotify::SharedDtor() {
  cutscene_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogCutsceneNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogCutsceneNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogCutsceneNotify& LogCutsceneNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogCutsceneNotify* LogCutsceneNotify::New(::google::protobuf::Arena* arena) const {
  LogCutsceneNotify* n = new LogCutsceneNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogCutsceneNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LogCutsceneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cutscene_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_) -
      reinterpret_cast<char*>(&is_start_)) + sizeof(is_skip_));
  _internal_metadata_.Clear();
}

bool LogCutsceneNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LogCutsceneNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cutscene_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cutscene_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cutscene_name().data(), static_cast<int>(this->cutscene_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.LogCutsceneNotify.cutscene_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_skip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LogCutsceneNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LogCutsceneNotify)
  return false;
#undef DO_
}

void LogCutsceneNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LogCutsceneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cutscene_name = 1;
  if (this->cutscene_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cutscene_name().data(), static_cast<int>(this->cutscene_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.LogCutsceneNotify.cutscene_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cutscene_name(), output);
  }

  // bool is_start = 2;
  if (this->is_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_start(), output);
  }

  // bool is_skip = 3;
  if (this->is_skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_skip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LogCutsceneNotify)
}

::google::protobuf::uint8* LogCutsceneNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LogCutsceneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cutscene_name = 1;
  if (this->cutscene_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cutscene_name().data(), static_cast<int>(this->cutscene_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.LogCutsceneNotify.cutscene_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cutscene_name(), target);
  }

  // bool is_start = 2;
  if (this->is_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_start(), target);
  }

  // bool is_skip = 3;
  if (this->is_skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_skip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LogCutsceneNotify)
  return target;
}

size_t LogCutsceneNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LogCutsceneNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cutscene_name = 1;
  if (this->cutscene_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cutscene_name());
  }

  // bool is_start = 2;
  if (this->is_start() != 0) {
    total_size += 1 + 1;
  }

  // bool is_skip = 3;
  if (this->is_skip() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogCutsceneNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LogCutsceneNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LogCutsceneNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogCutsceneNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LogCutsceneNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LogCutsceneNotify)
    MergeFrom(*source);
  }
}

void LogCutsceneNotify::MergeFrom(const LogCutsceneNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LogCutsceneNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cutscene_name().size() > 0) {

    cutscene_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cutscene_name_);
  }
  if (from.is_start() != 0) {
    set_is_start(from.is_start());
  }
  if (from.is_skip() != 0) {
    set_is_skip(from.is_skip());
  }
}

void LogCutsceneNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LogCutsceneNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogCutsceneNotify::CopyFrom(const LogCutsceneNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LogCutsceneNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogCutsceneNotify::IsInitialized() const {
  return true;
}

void LogCutsceneNotify::Swap(LogCutsceneNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogCutsceneNotify::InternalSwap(LogCutsceneNotify* other) {
  using std::swap;
  cutscene_name_.Swap(&other->cutscene_name_);
  swap(is_start_, other->is_start_);
  swap(is_skip_, other->is_skip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogCutsceneNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogCutsceneNotify

// string cutscene_name = 1;
void LogCutsceneNotify::clear_cutscene_name() {
  cutscene_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogCutsceneNotify::cutscene_name() const {
  // @@protoc_insertion_point(field_get:proto.LogCutsceneNotify.cutscene_name)
  return cutscene_name_.GetNoArena();
}
void LogCutsceneNotify::set_cutscene_name(const ::std::string& value) {
  
  cutscene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LogCutsceneNotify.cutscene_name)
}
#if LANG_CXX11
void LogCutsceneNotify::set_cutscene_name(::std::string&& value) {
  
  cutscene_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LogCutsceneNotify.cutscene_name)
}
#endif
void LogCutsceneNotify::set_cutscene_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cutscene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LogCutsceneNotify.cutscene_name)
}
void LogCutsceneNotify::set_cutscene_name(const char* value, size_t size) {
  
  cutscene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LogCutsceneNotify.cutscene_name)
}
::std::string* LogCutsceneNotify::mutable_cutscene_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.LogCutsceneNotify.cutscene_name)
  return cutscene_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogCutsceneNotify::release_cutscene_name() {
  // @@protoc_insertion_point(field_release:proto.LogCutsceneNotify.cutscene_name)
  
  return cutscene_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogCutsceneNotify::set_allocated_cutscene_name(::std::string* cutscene_name) {
  if (cutscene_name != NULL) {
    
  } else {
    
  }
  cutscene_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cutscene_name);
  // @@protoc_insertion_point(field_set_allocated:proto.LogCutsceneNotify.cutscene_name)
}

// bool is_start = 2;
void LogCutsceneNotify::clear_is_start() {
  is_start_ = false;
}
bool LogCutsceneNotify::is_start() const {
  // @@protoc_insertion_point(field_get:proto.LogCutsceneNotify.is_start)
  return is_start_;
}
void LogCutsceneNotify::set_is_start(bool value) {
  
  is_start_ = value;
  // @@protoc_insertion_point(field_set:proto.LogCutsceneNotify.is_start)
}

// bool is_skip = 3;
void LogCutsceneNotify::clear_is_skip() {
  is_skip_ = false;
}
bool LogCutsceneNotify::is_skip() const {
  // @@protoc_insertion_point(field_get:proto.LogCutsceneNotify.is_skip)
  return is_skip_;
}
void LogCutsceneNotify::set_is_skip(bool value) {
  
  is_skip_ = value;
  // @@protoc_insertion_point(field_set:proto.LogCutsceneNotify.is_skip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChapterStateNotify_NeedPlayerLevel::kIsLimitFieldNumber;
const int ChapterStateNotify_NeedPlayerLevel::kConfigNeedPlayerLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChapterStateNotify_NeedPlayerLevel::ChapterStateNotify_NeedPlayerLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChapterStateNotify.NeedPlayerLevel)
}
ChapterStateNotify_NeedPlayerLevel::ChapterStateNotify_NeedPlayerLevel(const ChapterStateNotify_NeedPlayerLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_limit_, &from.is_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_need_player_level_) -
    reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_player_level_));
  // @@protoc_insertion_point(copy_constructor:proto.ChapterStateNotify.NeedPlayerLevel)
}

void ChapterStateNotify_NeedPlayerLevel::SharedCtor() {
  ::memset(&is_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_need_player_level_) -
      reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_player_level_));
  _cached_size_ = 0;
}

ChapterStateNotify_NeedPlayerLevel::~ChapterStateNotify_NeedPlayerLevel() {
  // @@protoc_insertion_point(destructor:proto.ChapterStateNotify.NeedPlayerLevel)
  SharedDtor();
}

void ChapterStateNotify_NeedPlayerLevel::SharedDtor() {
}

void ChapterStateNotify_NeedPlayerLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStateNotify_NeedPlayerLevel::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChapterStateNotify_NeedPlayerLevel& ChapterStateNotify_NeedPlayerLevel::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChapterStateNotify_NeedPlayerLevel* ChapterStateNotify_NeedPlayerLevel::New(::google::protobuf::Arena* arena) const {
  ChapterStateNotify_NeedPlayerLevel* n = new ChapterStateNotify_NeedPlayerLevel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChapterStateNotify_NeedPlayerLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChapterStateNotify.NeedPlayerLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_need_player_level_) -
      reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_player_level_));
  _internal_metadata_.Clear();
}

bool ChapterStateNotify_NeedPlayerLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChapterStateNotify.NeedPlayerLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_limit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_need_player_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_need_player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChapterStateNotify.NeedPlayerLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChapterStateNotify.NeedPlayerLevel)
  return false;
#undef DO_
}

void ChapterStateNotify_NeedPlayerLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChapterStateNotify.NeedPlayerLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_limit = 1;
  if (this->is_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_limit(), output);
  }

  // uint32 config_need_player_level = 2;
  if (this->config_need_player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_need_player_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChapterStateNotify.NeedPlayerLevel)
}

::google::protobuf::uint8* ChapterStateNotify_NeedPlayerLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChapterStateNotify.NeedPlayerLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_limit = 1;
  if (this->is_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_limit(), target);
  }

  // uint32 config_need_player_level = 2;
  if (this->config_need_player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_need_player_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChapterStateNotify.NeedPlayerLevel)
  return target;
}

size_t ChapterStateNotify_NeedPlayerLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChapterStateNotify.NeedPlayerLevel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_limit = 1;
  if (this->is_limit() != 0) {
    total_size += 1 + 1;
  }

  // uint32 config_need_player_level = 2;
  if (this->config_need_player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_need_player_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStateNotify_NeedPlayerLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const ChapterStateNotify_NeedPlayerLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChapterStateNotify_NeedPlayerLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChapterStateNotify.NeedPlayerLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChapterStateNotify.NeedPlayerLevel)
    MergeFrom(*source);
  }
}

void ChapterStateNotify_NeedPlayerLevel::MergeFrom(const ChapterStateNotify_NeedPlayerLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_limit() != 0) {
    set_is_limit(from.is_limit());
  }
  if (from.config_need_player_level() != 0) {
    set_config_need_player_level(from.config_need_player_level());
  }
}

void ChapterStateNotify_NeedPlayerLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStateNotify_NeedPlayerLevel::CopyFrom(const ChapterStateNotify_NeedPlayerLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStateNotify_NeedPlayerLevel::IsInitialized() const {
  return true;
}

void ChapterStateNotify_NeedPlayerLevel::Swap(ChapterStateNotify_NeedPlayerLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChapterStateNotify_NeedPlayerLevel::InternalSwap(ChapterStateNotify_NeedPlayerLevel* other) {
  using std::swap;
  swap(is_limit_, other->is_limit_);
  swap(config_need_player_level_, other->config_need_player_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChapterStateNotify_NeedPlayerLevel::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChapterStateNotify_NeedPlayerLevel

// bool is_limit = 1;
void ChapterStateNotify_NeedPlayerLevel::clear_is_limit() {
  is_limit_ = false;
}
bool ChapterStateNotify_NeedPlayerLevel::is_limit() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedPlayerLevel.is_limit)
  return is_limit_;
}
void ChapterStateNotify_NeedPlayerLevel::set_is_limit(bool value) {
  
  is_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedPlayerLevel.is_limit)
}

// uint32 config_need_player_level = 2;
void ChapterStateNotify_NeedPlayerLevel::clear_config_need_player_level() {
  config_need_player_level_ = 0u;
}
::google::protobuf::uint32 ChapterStateNotify_NeedPlayerLevel::config_need_player_level() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedPlayerLevel.config_need_player_level)
  return config_need_player_level_;
}
void ChapterStateNotify_NeedPlayerLevel::set_config_need_player_level(::google::protobuf::uint32 value) {
  
  config_need_player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedPlayerLevel.config_need_player_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChapterStateNotify_NeedBeginTime::kIsLimitFieldNumber;
const int ChapterStateNotify_NeedBeginTime::kConfigNeedBeginTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChapterStateNotify_NeedBeginTime::ChapterStateNotify_NeedBeginTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChapterStateNotify.NeedBeginTime)
}
ChapterStateNotify_NeedBeginTime::ChapterStateNotify_NeedBeginTime(const ChapterStateNotify_NeedBeginTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_limit_, &from.is_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_need_begin_time_) -
    reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_begin_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ChapterStateNotify.NeedBeginTime)
}

void ChapterStateNotify_NeedBeginTime::SharedCtor() {
  ::memset(&is_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_need_begin_time_) -
      reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_begin_time_));
  _cached_size_ = 0;
}

ChapterStateNotify_NeedBeginTime::~ChapterStateNotify_NeedBeginTime() {
  // @@protoc_insertion_point(destructor:proto.ChapterStateNotify.NeedBeginTime)
  SharedDtor();
}

void ChapterStateNotify_NeedBeginTime::SharedDtor() {
}

void ChapterStateNotify_NeedBeginTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStateNotify_NeedBeginTime::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChapterStateNotify_NeedBeginTime& ChapterStateNotify_NeedBeginTime::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChapterStateNotify_NeedBeginTime* ChapterStateNotify_NeedBeginTime::New(::google::protobuf::Arena* arena) const {
  ChapterStateNotify_NeedBeginTime* n = new ChapterStateNotify_NeedBeginTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChapterStateNotify_NeedBeginTime::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChapterStateNotify.NeedBeginTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_need_begin_time_) -
      reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_begin_time_));
  _internal_metadata_.Clear();
}

bool ChapterStateNotify_NeedBeginTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChapterStateNotify.NeedBeginTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_limit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_need_begin_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_need_begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChapterStateNotify.NeedBeginTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChapterStateNotify.NeedBeginTime)
  return false;
#undef DO_
}

void ChapterStateNotify_NeedBeginTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChapterStateNotify.NeedBeginTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_limit = 1;
  if (this->is_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_limit(), output);
  }

  // uint32 config_need_begin_time = 2;
  if (this->config_need_begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_need_begin_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChapterStateNotify.NeedBeginTime)
}

::google::protobuf::uint8* ChapterStateNotify_NeedBeginTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChapterStateNotify.NeedBeginTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_limit = 1;
  if (this->is_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_limit(), target);
  }

  // uint32 config_need_begin_time = 2;
  if (this->config_need_begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_need_begin_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChapterStateNotify.NeedBeginTime)
  return target;
}

size_t ChapterStateNotify_NeedBeginTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChapterStateNotify.NeedBeginTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_limit = 1;
  if (this->is_limit() != 0) {
    total_size += 1 + 1;
  }

  // uint32 config_need_begin_time = 2;
  if (this->config_need_begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_need_begin_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStateNotify_NeedBeginTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChapterStateNotify.NeedBeginTime)
  GOOGLE_DCHECK_NE(&from, this);
  const ChapterStateNotify_NeedBeginTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChapterStateNotify_NeedBeginTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChapterStateNotify.NeedBeginTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChapterStateNotify.NeedBeginTime)
    MergeFrom(*source);
  }
}

void ChapterStateNotify_NeedBeginTime::MergeFrom(const ChapterStateNotify_NeedBeginTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChapterStateNotify.NeedBeginTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_limit() != 0) {
    set_is_limit(from.is_limit());
  }
  if (from.config_need_begin_time() != 0) {
    set_config_need_begin_time(from.config_need_begin_time());
  }
}

void ChapterStateNotify_NeedBeginTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChapterStateNotify.NeedBeginTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStateNotify_NeedBeginTime::CopyFrom(const ChapterStateNotify_NeedBeginTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChapterStateNotify.NeedBeginTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStateNotify_NeedBeginTime::IsInitialized() const {
  return true;
}

void ChapterStateNotify_NeedBeginTime::Swap(ChapterStateNotify_NeedBeginTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChapterStateNotify_NeedBeginTime::InternalSwap(ChapterStateNotify_NeedBeginTime* other) {
  using std::swap;
  swap(is_limit_, other->is_limit_);
  swap(config_need_begin_time_, other->config_need_begin_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChapterStateNotify_NeedBeginTime::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChapterStateNotify_NeedBeginTime

// bool is_limit = 1;
void ChapterStateNotify_NeedBeginTime::clear_is_limit() {
  is_limit_ = false;
}
bool ChapterStateNotify_NeedBeginTime::is_limit() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedBeginTime.is_limit)
  return is_limit_;
}
void ChapterStateNotify_NeedBeginTime::set_is_limit(bool value) {
  
  is_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedBeginTime.is_limit)
}

// uint32 config_need_begin_time = 2;
void ChapterStateNotify_NeedBeginTime::clear_config_need_begin_time() {
  config_need_begin_time_ = 0u;
}
::google::protobuf::uint32 ChapterStateNotify_NeedBeginTime::config_need_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedBeginTime.config_need_begin_time)
  return config_need_begin_time_;
}
void ChapterStateNotify_NeedBeginTime::set_config_need_begin_time(::google::protobuf::uint32 value) {
  
  config_need_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedBeginTime.config_need_begin_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChapterStateNotify::kChapterIdFieldNumber;
const int ChapterStateNotify::kChapterStateFieldNumber;
const int ChapterStateNotify::kNeedPlayerLevelFieldNumber;
const int ChapterStateNotify::kNeedBeginTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChapterStateNotify::ChapterStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChapterStateNotify)
}
ChapterStateNotify::ChapterStateNotify(const ChapterStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_need_player_level()) {
    need_player_level_ = new ::proto::ChapterStateNotify_NeedPlayerLevel(*from.need_player_level_);
  } else {
    need_player_level_ = NULL;
  }
  if (from.has_need_begin_time()) {
    need_begin_time_ = new ::proto::ChapterStateNotify_NeedBeginTime(*from.need_begin_time_);
  } else {
    need_begin_time_ = NULL;
  }
  ::memcpy(&chapter_id_, &from.chapter_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&chapter_state_) -
    reinterpret_cast<char*>(&chapter_id_)) + sizeof(chapter_state_));
  // @@protoc_insertion_point(copy_constructor:proto.ChapterStateNotify)
}

void ChapterStateNotify::SharedCtor() {
  ::memset(&need_player_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chapter_state_) -
      reinterpret_cast<char*>(&need_player_level_)) + sizeof(chapter_state_));
  _cached_size_ = 0;
}

ChapterStateNotify::~ChapterStateNotify() {
  // @@protoc_insertion_point(destructor:proto.ChapterStateNotify)
  SharedDtor();
}

void ChapterStateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete need_player_level_;
  if (this != internal_default_instance()) delete need_begin_time_;
}

void ChapterStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChapterStateNotify& ChapterStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChapterStateNotify* ChapterStateNotify::New(::google::protobuf::Arena* arena) const {
  ChapterStateNotify* n = new ChapterStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChapterStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChapterStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && need_player_level_ != NULL) {
    delete need_player_level_;
  }
  need_player_level_ = NULL;
  if (GetArenaNoVirtual() == NULL && need_begin_time_ != NULL) {
    delete need_begin_time_;
  }
  need_begin_time_ = NULL;
  ::memset(&chapter_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chapter_state_) -
      reinterpret_cast<char*>(&chapter_id_)) + sizeof(chapter_state_));
  _internal_metadata_.Clear();
}

bool ChapterStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChapterStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 chapter_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChapterState chapter_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_chapter_state(static_cast< ::proto::ChapterState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_need_player_level()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_need_begin_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChapterStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChapterStateNotify)
  return false;
#undef DO_
}

void ChapterStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChapterStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chapter_id = 1;
  if (this->chapter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapter_id(), output);
  }

  // .proto.ChapterState chapter_state = 2;
  if (this->chapter_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->chapter_state(), output);
  }

  // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 3;
  if (this->has_need_player_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->need_player_level_, output);
  }

  // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 4;
  if (this->has_need_begin_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->need_begin_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChapterStateNotify)
}

::google::protobuf::uint8* ChapterStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChapterStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chapter_id = 1;
  if (this->chapter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapter_id(), target);
  }

  // .proto.ChapterState chapter_state = 2;
  if (this->chapter_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->chapter_state(), target);
  }

  // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 3;
  if (this->has_need_player_level()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->need_player_level_, deterministic, target);
  }

  // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 4;
  if (this->has_need_begin_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->need_begin_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChapterStateNotify)
  return target;
}

size_t ChapterStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChapterStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 3;
  if (this->has_need_player_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->need_player_level_);
  }

  // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 4;
  if (this->has_need_begin_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->need_begin_time_);
  }

  // uint32 chapter_id = 1;
  if (this->chapter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chapter_id());
  }

  // .proto.ChapterState chapter_state = 2;
  if (this->chapter_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->chapter_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChapterStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChapterStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChapterStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChapterStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChapterStateNotify)
    MergeFrom(*source);
  }
}

void ChapterStateNotify::MergeFrom(const ChapterStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChapterStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_need_player_level()) {
    mutable_need_player_level()->::proto::ChapterStateNotify_NeedPlayerLevel::MergeFrom(from.need_player_level());
  }
  if (from.has_need_begin_time()) {
    mutable_need_begin_time()->::proto::ChapterStateNotify_NeedBeginTime::MergeFrom(from.need_begin_time());
  }
  if (from.chapter_id() != 0) {
    set_chapter_id(from.chapter_id());
  }
  if (from.chapter_state() != 0) {
    set_chapter_state(from.chapter_state());
  }
}

void ChapterStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChapterStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStateNotify::CopyFrom(const ChapterStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChapterStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStateNotify::IsInitialized() const {
  return true;
}

void ChapterStateNotify::Swap(ChapterStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChapterStateNotify::InternalSwap(ChapterStateNotify* other) {
  using std::swap;
  swap(need_player_level_, other->need_player_level_);
  swap(need_begin_time_, other->need_begin_time_);
  swap(chapter_id_, other->chapter_id_);
  swap(chapter_state_, other->chapter_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChapterStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChapterStateNotify

// uint32 chapter_id = 1;
void ChapterStateNotify::clear_chapter_id() {
  chapter_id_ = 0u;
}
::google::protobuf::uint32 ChapterStateNotify::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.chapter_id)
  return chapter_id_;
}
void ChapterStateNotify::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.chapter_id)
}

// .proto.ChapterState chapter_state = 2;
void ChapterStateNotify::clear_chapter_state() {
  chapter_state_ = 0;
}
::proto::ChapterState ChapterStateNotify::chapter_state() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.chapter_state)
  return static_cast< ::proto::ChapterState >(chapter_state_);
}
void ChapterStateNotify::set_chapter_state(::proto::ChapterState value) {
  
  chapter_state_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.chapter_state)
}

// .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 3;
bool ChapterStateNotify::has_need_player_level() const {
  return this != internal_default_instance() && need_player_level_ != NULL;
}
void ChapterStateNotify::clear_need_player_level() {
  if (GetArenaNoVirtual() == NULL && need_player_level_ != NULL) delete need_player_level_;
  need_player_level_ = NULL;
}
const ::proto::ChapterStateNotify_NeedPlayerLevel& ChapterStateNotify::need_player_level() const {
  const ::proto::ChapterStateNotify_NeedPlayerLevel* p = need_player_level_;
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.need_player_level)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChapterStateNotify_NeedPlayerLevel*>(
      &::proto::_ChapterStateNotify_NeedPlayerLevel_default_instance_);
}
::proto::ChapterStateNotify_NeedPlayerLevel* ChapterStateNotify::mutable_need_player_level() {
  
  if (need_player_level_ == NULL) {
    need_player_level_ = new ::proto::ChapterStateNotify_NeedPlayerLevel;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChapterStateNotify.need_player_level)
  return need_player_level_;
}
::proto::ChapterStateNotify_NeedPlayerLevel* ChapterStateNotify::release_need_player_level() {
  // @@protoc_insertion_point(field_release:proto.ChapterStateNotify.need_player_level)
  
  ::proto::ChapterStateNotify_NeedPlayerLevel* temp = need_player_level_;
  need_player_level_ = NULL;
  return temp;
}
void ChapterStateNotify::set_allocated_need_player_level(::proto::ChapterStateNotify_NeedPlayerLevel* need_player_level) {
  delete need_player_level_;
  need_player_level_ = need_player_level;
  if (need_player_level) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChapterStateNotify.need_player_level)
}

// .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 4;
bool ChapterStateNotify::has_need_begin_time() const {
  return this != internal_default_instance() && need_begin_time_ != NULL;
}
void ChapterStateNotify::clear_need_begin_time() {
  if (GetArenaNoVirtual() == NULL && need_begin_time_ != NULL) delete need_begin_time_;
  need_begin_time_ = NULL;
}
const ::proto::ChapterStateNotify_NeedBeginTime& ChapterStateNotify::need_begin_time() const {
  const ::proto::ChapterStateNotify_NeedBeginTime* p = need_begin_time_;
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.need_begin_time)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChapterStateNotify_NeedBeginTime*>(
      &::proto::_ChapterStateNotify_NeedBeginTime_default_instance_);
}
::proto::ChapterStateNotify_NeedBeginTime* ChapterStateNotify::mutable_need_begin_time() {
  
  if (need_begin_time_ == NULL) {
    need_begin_time_ = new ::proto::ChapterStateNotify_NeedBeginTime;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChapterStateNotify.need_begin_time)
  return need_begin_time_;
}
::proto::ChapterStateNotify_NeedBeginTime* ChapterStateNotify::release_need_begin_time() {
  // @@protoc_insertion_point(field_release:proto.ChapterStateNotify.need_begin_time)
  
  ::proto::ChapterStateNotify_NeedBeginTime* temp = need_begin_time_;
  need_begin_time_ = NULL;
  return temp;
}
void ChapterStateNotify::set_allocated_need_begin_time(::proto::ChapterStateNotify_NeedBeginTime* need_begin_time) {
  delete need_begin_time_;
  need_begin_time_ = need_begin_time;
  if (need_begin_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChapterStateNotify.need_begin_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestProgressUpdateNotify::kQuestIdFieldNumber;
const int QuestProgressUpdateNotify::kFinishProgressListFieldNumber;
const int QuestProgressUpdateNotify::kFailProgressListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestProgressUpdateNotify::QuestProgressUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestProgressUpdateNotify)
}
QuestProgressUpdateNotify::QuestProgressUpdateNotify(const QuestProgressUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      finish_progress_list_(from.finish_progress_list_),
      fail_progress_list_(from.fail_progress_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QuestProgressUpdateNotify)
}

void QuestProgressUpdateNotify::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

QuestProgressUpdateNotify::~QuestProgressUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestProgressUpdateNotify)
  SharedDtor();
}

void QuestProgressUpdateNotify::SharedDtor() {
}

void QuestProgressUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestProgressUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestProgressUpdateNotify& QuestProgressUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestProgressUpdateNotify* QuestProgressUpdateNotify::New(::google::protobuf::Arena* arena) const {
  QuestProgressUpdateNotify* n = new QuestProgressUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestProgressUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestProgressUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finish_progress_list_.Clear();
  fail_progress_list_.Clear();
  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QuestProgressUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestProgressUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 finish_progress_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finish_progress_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_finish_progress_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 fail_progress_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fail_progress_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_fail_progress_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestProgressUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestProgressUpdateNotify)
  return false;
#undef DO_
}

void QuestProgressUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestProgressUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // repeated uint32 finish_progress_list = 2;
  if (this->finish_progress_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finish_progress_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finish_progress_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finish_progress_list(i), output);
  }

  // repeated uint32 fail_progress_list = 3;
  if (this->fail_progress_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fail_progress_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fail_progress_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fail_progress_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestProgressUpdateNotify)
}

::google::protobuf::uint8* QuestProgressUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestProgressUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // repeated uint32 finish_progress_list = 2;
  if (this->finish_progress_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finish_progress_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finish_progress_list_, target);
  }

  // repeated uint32 fail_progress_list = 3;
  if (this->fail_progress_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fail_progress_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fail_progress_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestProgressUpdateNotify)
  return target;
}

size_t QuestProgressUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestProgressUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 finish_progress_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finish_progress_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finish_progress_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 fail_progress_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fail_progress_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fail_progress_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestProgressUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestProgressUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestProgressUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestProgressUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestProgressUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestProgressUpdateNotify)
    MergeFrom(*source);
  }
}

void QuestProgressUpdateNotify::MergeFrom(const QuestProgressUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestProgressUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  finish_progress_list_.MergeFrom(from.finish_progress_list_);
  fail_progress_list_.MergeFrom(from.fail_progress_list_);
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestProgressUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestProgressUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestProgressUpdateNotify::CopyFrom(const QuestProgressUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestProgressUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestProgressUpdateNotify::IsInitialized() const {
  return true;
}

void QuestProgressUpdateNotify::Swap(QuestProgressUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestProgressUpdateNotify::InternalSwap(QuestProgressUpdateNotify* other) {
  using std::swap;
  finish_progress_list_.InternalSwap(&other->finish_progress_list_);
  fail_progress_list_.InternalSwap(&other->fail_progress_list_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestProgressUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestProgressUpdateNotify

// uint32 quest_id = 1;
void QuestProgressUpdateNotify::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestProgressUpdateNotify::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestProgressUpdateNotify.quest_id)
  return quest_id_;
}
void QuestProgressUpdateNotify::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestProgressUpdateNotify.quest_id)
}

// repeated uint32 finish_progress_list = 2;
int QuestProgressUpdateNotify::finish_progress_list_size() const {
  return finish_progress_list_.size();
}
void QuestProgressUpdateNotify::clear_finish_progress_list() {
  finish_progress_list_.Clear();
}
::google::protobuf::uint32 QuestProgressUpdateNotify::finish_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestProgressUpdateNotify.finish_progress_list)
  return finish_progress_list_.Get(index);
}
void QuestProgressUpdateNotify::set_finish_progress_list(int index, ::google::protobuf::uint32 value) {
  finish_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QuestProgressUpdateNotify.finish_progress_list)
}
void QuestProgressUpdateNotify::add_finish_progress_list(::google::protobuf::uint32 value) {
  finish_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QuestProgressUpdateNotify.finish_progress_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestProgressUpdateNotify::finish_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestProgressUpdateNotify.finish_progress_list)
  return finish_progress_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestProgressUpdateNotify::mutable_finish_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestProgressUpdateNotify.finish_progress_list)
  return &finish_progress_list_;
}

// repeated uint32 fail_progress_list = 3;
int QuestProgressUpdateNotify::fail_progress_list_size() const {
  return fail_progress_list_.size();
}
void QuestProgressUpdateNotify::clear_fail_progress_list() {
  fail_progress_list_.Clear();
}
::google::protobuf::uint32 QuestProgressUpdateNotify::fail_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestProgressUpdateNotify.fail_progress_list)
  return fail_progress_list_.Get(index);
}
void QuestProgressUpdateNotify::set_fail_progress_list(int index, ::google::protobuf::uint32 value) {
  fail_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QuestProgressUpdateNotify.fail_progress_list)
}
void QuestProgressUpdateNotify::add_fail_progress_list(::google::protobuf::uint32 value) {
  fail_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QuestProgressUpdateNotify.fail_progress_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestProgressUpdateNotify::fail_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestProgressUpdateNotify.fail_progress_list)
  return fail_progress_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestProgressUpdateNotify::mutable_fail_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestProgressUpdateNotify.fail_progress_list)
  return &fail_progress_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestVarOp::kIndexFieldNumber;
const int QuestVarOp::kValueFieldNumber;
const int QuestVarOp::kIsAddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestVarOp::QuestVarOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestVarOp)
}
QuestVarOp::QuestVarOp(const QuestVarOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_add_) -
    reinterpret_cast<char*>(&index_)) + sizeof(is_add_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestVarOp)
}

void QuestVarOp::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_add_) -
      reinterpret_cast<char*>(&index_)) + sizeof(is_add_));
  _cached_size_ = 0;
}

QuestVarOp::~QuestVarOp() {
  // @@protoc_insertion_point(destructor:proto.QuestVarOp)
  SharedDtor();
}

void QuestVarOp::SharedDtor() {
}

void QuestVarOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestVarOp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestVarOp& QuestVarOp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestVarOp* QuestVarOp::New(::google::protobuf::Arena* arena) const {
  QuestVarOp* n = new QuestVarOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestVarOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_add_) -
      reinterpret_cast<char*>(&index_)) + sizeof(is_add_));
  _internal_metadata_.Clear();
}

bool QuestVarOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestVarOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_add = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestVarOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestVarOp)
  return false;
#undef DO_
}

void QuestVarOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // bool is_add = 3;
  if (this->is_add() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_add(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestVarOp)
}

::google::protobuf::uint8* QuestVarOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  // bool is_add = 3;
  if (this->is_add() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_add(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestVarOp)
  return target;
}

size_t QuestVarOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestVarOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  // bool is_add = 3;
  if (this->is_add() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestVarOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestVarOp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestVarOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestVarOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestVarOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestVarOp)
    MergeFrom(*source);
  }
}

void QuestVarOp::MergeFrom(const QuestVarOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestVarOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.is_add() != 0) {
    set_is_add(from.is_add());
  }
}

void QuestVarOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestVarOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestVarOp::CopyFrom(const QuestVarOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestVarOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestVarOp::IsInitialized() const {
  return true;
}

void QuestVarOp::Swap(QuestVarOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestVarOp::InternalSwap(QuestVarOp* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(value_, other->value_);
  swap(is_add_, other->is_add_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestVarOp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestVarOp

// uint32 index = 1;
void QuestVarOp::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 QuestVarOp::index() const {
  // @@protoc_insertion_point(field_get:proto.QuestVarOp.index)
  return index_;
}
void QuestVarOp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestVarOp.index)
}

// int32 value = 2;
void QuestVarOp::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 QuestVarOp::value() const {
  // @@protoc_insertion_point(field_get:proto.QuestVarOp.value)
  return value_;
}
void QuestVarOp::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestVarOp.value)
}

// bool is_add = 3;
void QuestVarOp::clear_is_add() {
  is_add_ = false;
}
bool QuestVarOp::is_add() const {
  // @@protoc_insertion_point(field_get:proto.QuestVarOp.is_add)
  return is_add_;
}
void QuestVarOp::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestVarOp.is_add)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestVarReq::kQuestIdFieldNumber;
const int QuestUpdateQuestVarReq::kQuestVarOpListFieldNumber;
const int QuestUpdateQuestVarReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestVarReq::QuestUpdateQuestVarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestVarReq)
}
QuestUpdateQuestVarReq::QuestUpdateQuestVarReq(const QuestUpdateQuestVarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_var_op_list_(from.quest_var_op_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestVarReq)
}

void QuestUpdateQuestVarReq::SharedCtor() {
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

QuestUpdateQuestVarReq::~QuestUpdateQuestVarReq() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestVarReq)
  SharedDtor();
}

void QuestUpdateQuestVarReq::SharedDtor() {
}

void QuestUpdateQuestVarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestVarReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestVarReq& QuestUpdateQuestVarReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestVarReq* QuestUpdateQuestVarReq::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestVarReq* n = new QuestUpdateQuestVarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestVarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestVarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_var_op_list_.Clear();
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestVarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestVarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.QuestVarOp quest_var_op_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quest_var_op_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestVarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestVarReq)
  return false;
#undef DO_
}

void QuestUpdateQuestVarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestVarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // repeated .proto.QuestVarOp quest_var_op_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_var_op_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->quest_var_op_list(static_cast<int>(i)), output);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestVarReq)
}

::google::protobuf::uint8* QuestUpdateQuestVarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestVarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // repeated .proto.QuestVarOp quest_var_op_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_var_op_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->quest_var_op_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestVarReq)
  return target;
}

size_t QuestUpdateQuestVarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestVarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.QuestVarOp quest_var_op_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->quest_var_op_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quest_var_op_list(static_cast<int>(i)));
    }
  }

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestVarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestVarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestVarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestVarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestVarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestVarReq)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestVarReq::MergeFrom(const QuestUpdateQuestVarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestVarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_var_op_list_.MergeFrom(from.quest_var_op_list_);
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestUpdateQuestVarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestVarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestVarReq::CopyFrom(const QuestUpdateQuestVarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestVarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestVarReq::IsInitialized() const {
  return true;
}

void QuestUpdateQuestVarReq::Swap(QuestUpdateQuestVarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestVarReq::InternalSwap(QuestUpdateQuestVarReq* other) {
  using std::swap;
  quest_var_op_list_.InternalSwap(&other->quest_var_op_list_);
  swap(quest_id_, other->quest_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestVarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestVarReq

// uint32 quest_id = 1;
void QuestUpdateQuestVarReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.quest_id)
  return quest_id_;
}
void QuestUpdateQuestVarReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarReq.quest_id)
}

// repeated .proto.QuestVarOp quest_var_op_list = 2;
int QuestUpdateQuestVarReq::quest_var_op_list_size() const {
  return quest_var_op_list_.size();
}
void QuestUpdateQuestVarReq::clear_quest_var_op_list() {
  quest_var_op_list_.Clear();
}
const ::proto::QuestVarOp& QuestUpdateQuestVarReq::quest_var_op_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_.Get(index);
}
::proto::QuestVarOp* QuestUpdateQuestVarReq::mutable_quest_var_op_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_.Mutable(index);
}
::proto::QuestVarOp* QuestUpdateQuestVarReq::add_quest_var_op_list() {
  // @@protoc_insertion_point(field_add:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::QuestVarOp >*
QuestUpdateQuestVarReq::mutable_quest_var_op_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return &quest_var_op_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::QuestVarOp >&
QuestUpdateQuestVarReq::quest_var_op_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_;
}

// uint32 parent_quest_id = 3;
void QuestUpdateQuestVarReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestVarReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestVarRsp::kRetcodeFieldNumber;
const int QuestUpdateQuestVarRsp::kQuestIdFieldNumber;
const int QuestUpdateQuestVarRsp::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestVarRsp::QuestUpdateQuestVarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestVarRsp)
}
QuestUpdateQuestVarRsp::QuestUpdateQuestVarRsp(const QuestUpdateQuestVarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestVarRsp)
}

void QuestUpdateQuestVarRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

QuestUpdateQuestVarRsp::~QuestUpdateQuestVarRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestVarRsp)
  SharedDtor();
}

void QuestUpdateQuestVarRsp::SharedDtor() {
}

void QuestUpdateQuestVarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestVarRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestVarRsp& QuestUpdateQuestVarRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestVarRsp* QuestUpdateQuestVarRsp::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestVarRsp* n = new QuestUpdateQuestVarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestVarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestVarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestVarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestVarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestVarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestVarRsp)
  return false;
#undef DO_
}

void QuestUpdateQuestVarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestVarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quest_id(), output);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestVarRsp)
}

::google::protobuf::uint8* QuestUpdateQuestVarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestVarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quest_id(), target);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestVarRsp)
  return target;
}

size_t QuestUpdateQuestVarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestVarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestVarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestVarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestVarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestVarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestVarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestVarRsp)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestVarRsp::MergeFrom(const QuestUpdateQuestVarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestVarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestUpdateQuestVarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestVarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestVarRsp::CopyFrom(const QuestUpdateQuestVarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestVarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestVarRsp::IsInitialized() const {
  return true;
}

void QuestUpdateQuestVarRsp::Swap(QuestUpdateQuestVarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestVarRsp::InternalSwap(QuestUpdateQuestVarRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(quest_id_, other->quest_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestVarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestVarRsp

// int32 retcode = 1;
void QuestUpdateQuestVarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestUpdateQuestVarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.retcode)
  return retcode_;
}
void QuestUpdateQuestVarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.retcode)
}

// uint32 quest_id = 2;
void QuestUpdateQuestVarRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.quest_id)
  return quest_id_;
}
void QuestUpdateQuestVarRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.quest_id)
}

// uint32 parent_quest_id = 3;
void QuestUpdateQuestVarRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestVarRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestVarNotify::kParentQuestIdFieldNumber;
const int QuestUpdateQuestVarNotify::kQuestVarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestVarNotify::QuestUpdateQuestVarNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestVarNotify)
}
QuestUpdateQuestVarNotify::QuestUpdateQuestVarNotify(const QuestUpdateQuestVarNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_var_(from.quest_var_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestVarNotify)
}

void QuestUpdateQuestVarNotify::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

QuestUpdateQuestVarNotify::~QuestUpdateQuestVarNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestVarNotify)
  SharedDtor();
}

void QuestUpdateQuestVarNotify::SharedDtor() {
}

void QuestUpdateQuestVarNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestVarNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestVarNotify& QuestUpdateQuestVarNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestVarNotify* QuestUpdateQuestVarNotify::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestVarNotify* n = new QuestUpdateQuestVarNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestVarNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_var_.Clear();
  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestVarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestVarNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 quest_var = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_quest_var())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_quest_var())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestVarNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestVarNotify)
  return false;
#undef DO_
}

void QuestUpdateQuestVarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->parent_quest_id(), output);
  }

  // repeated int32 quest_var = 2;
  if (this->quest_var_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _quest_var_cached_byte_size_));
  }
  for (int i = 0, n = this->quest_var_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->quest_var(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestVarNotify)
}

::google::protobuf::uint8* QuestUpdateQuestVarNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->parent_quest_id(), target);
  }

  // repeated int32 quest_var = 2;
  if (this->quest_var_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _quest_var_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->quest_var_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestVarNotify)
  return target;
}

size_t QuestUpdateQuestVarNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestVarNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 quest_var = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->quest_var_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _quest_var_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestVarNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestVarNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestVarNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestVarNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestVarNotify)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestVarNotify::MergeFrom(const QuestUpdateQuestVarNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_var_.MergeFrom(from.quest_var_);
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestUpdateQuestVarNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestVarNotify::CopyFrom(const QuestUpdateQuestVarNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestVarNotify::IsInitialized() const {
  return true;
}

void QuestUpdateQuestVarNotify::Swap(QuestUpdateQuestVarNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestVarNotify::InternalSwap(QuestUpdateQuestVarNotify* other) {
  using std::swap;
  quest_var_.InternalSwap(&other->quest_var_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestVarNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestVarNotify

// uint32 parent_quest_id = 1;
void QuestUpdateQuestVarNotify::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarNotify::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarNotify.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestVarNotify::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarNotify.parent_quest_id)
}

// repeated int32 quest_var = 2;
int QuestUpdateQuestVarNotify::quest_var_size() const {
  return quest_var_.size();
}
void QuestUpdateQuestVarNotify::clear_quest_var() {
  quest_var_.Clear();
}
::google::protobuf::int32 QuestUpdateQuestVarNotify::quest_var(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarNotify.quest_var)
  return quest_var_.Get(index);
}
void QuestUpdateQuestVarNotify::set_quest_var(int index, ::google::protobuf::int32 value) {
  quest_var_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarNotify.quest_var)
}
void QuestUpdateQuestVarNotify::add_quest_var(::google::protobuf::int32 value) {
  quest_var_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QuestUpdateQuestVarNotify.quest_var)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestUpdateQuestVarNotify::quest_var() const {
  // @@protoc_insertion_point(field_list:proto.QuestUpdateQuestVarNotify.quest_var)
  return quest_var_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestUpdateQuestVarNotify::mutable_quest_var() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestUpdateQuestVarNotify.quest_var)
  return &quest_var_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyNpcReq::kNpcIdFieldNumber;
const int QuestDestroyNpcReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyNpcReq::QuestDestroyNpcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyNpcReq)
}
QuestDestroyNpcReq::QuestDestroyNpcReq(const QuestDestroyNpcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&npc_id_, &from.npc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&npc_id_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyNpcReq)
}

void QuestDestroyNpcReq::SharedCtor() {
  ::memset(&npc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&npc_id_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

QuestDestroyNpcReq::~QuestDestroyNpcReq() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyNpcReq)
  SharedDtor();
}

void QuestDestroyNpcReq::SharedDtor() {
}

void QuestDestroyNpcReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyNpcReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyNpcReq& QuestDestroyNpcReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyNpcReq* QuestDestroyNpcReq::New(::google::protobuf::Arena* arena) const {
  QuestDestroyNpcReq* n = new QuestDestroyNpcReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyNpcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyNpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&npc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&npc_id_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyNpcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyNpcReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 npc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyNpcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyNpcReq)
  return false;
#undef DO_
}

void QuestDestroyNpcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyNpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npc_id(), output);
  }

  // uint32 parent_quest_id = 2;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyNpcReq)
}

::google::protobuf::uint8* QuestDestroyNpcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyNpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npc_id(), target);
  }

  // uint32 parent_quest_id = 2;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyNpcReq)
  return target;
}

size_t QuestDestroyNpcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyNpcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc_id());
  }

  // uint32 parent_quest_id = 2;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyNpcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyNpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyNpcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyNpcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyNpcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyNpcReq)
    MergeFrom(*source);
  }
}

void QuestDestroyNpcReq::MergeFrom(const QuestDestroyNpcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyNpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.npc_id() != 0) {
    set_npc_id(from.npc_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestDestroyNpcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyNpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyNpcReq::CopyFrom(const QuestDestroyNpcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyNpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyNpcReq::IsInitialized() const {
  return true;
}

void QuestDestroyNpcReq::Swap(QuestDestroyNpcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyNpcReq::InternalSwap(QuestDestroyNpcReq* other) {
  using std::swap;
  swap(npc_id_, other->npc_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyNpcReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyNpcReq

// uint32 npc_id = 1;
void QuestDestroyNpcReq::clear_npc_id() {
  npc_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcReq::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcReq.npc_id)
  return npc_id_;
}
void QuestDestroyNpcReq::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcReq.npc_id)
}

// uint32 parent_quest_id = 2;
void QuestDestroyNpcReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcReq.parent_quest_id)
  return parent_quest_id_;
}
void QuestDestroyNpcReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyNpcRsp::kRetcodeFieldNumber;
const int QuestDestroyNpcRsp::kNpcIdFieldNumber;
const int QuestDestroyNpcRsp::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyNpcRsp::QuestDestroyNpcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyNpcRsp)
}
QuestDestroyNpcRsp::QuestDestroyNpcRsp(const QuestDestroyNpcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyNpcRsp)
}

void QuestDestroyNpcRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

QuestDestroyNpcRsp::~QuestDestroyNpcRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyNpcRsp)
  SharedDtor();
}

void QuestDestroyNpcRsp::SharedDtor() {
}

void QuestDestroyNpcRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyNpcRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyNpcRsp& QuestDestroyNpcRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyNpcRsp* QuestDestroyNpcRsp::New(::google::protobuf::Arena* arena) const {
  QuestDestroyNpcRsp* n = new QuestDestroyNpcRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyNpcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyNpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyNpcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyNpcRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 npc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyNpcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyNpcRsp)
  return false;
#undef DO_
}

void QuestDestroyNpcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyNpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 npc_id = 2;
  if (this->npc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->npc_id(), output);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyNpcRsp)
}

::google::protobuf::uint8* QuestDestroyNpcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyNpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 npc_id = 2;
  if (this->npc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->npc_id(), target);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyNpcRsp)
  return target;
}

size_t QuestDestroyNpcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyNpcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 npc_id = 2;
  if (this->npc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc_id());
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyNpcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyNpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyNpcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyNpcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyNpcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyNpcRsp)
    MergeFrom(*source);
  }
}

void QuestDestroyNpcRsp::MergeFrom(const QuestDestroyNpcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyNpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.npc_id() != 0) {
    set_npc_id(from.npc_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestDestroyNpcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyNpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyNpcRsp::CopyFrom(const QuestDestroyNpcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyNpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyNpcRsp::IsInitialized() const {
  return true;
}

void QuestDestroyNpcRsp::Swap(QuestDestroyNpcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyNpcRsp::InternalSwap(QuestDestroyNpcRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(npc_id_, other->npc_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyNpcRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyNpcRsp

// int32 retcode = 1;
void QuestDestroyNpcRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestDestroyNpcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcRsp.retcode)
  return retcode_;
}
void QuestDestroyNpcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcRsp.retcode)
}

// uint32 npc_id = 2;
void QuestDestroyNpcRsp::clear_npc_id() {
  npc_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcRsp::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcRsp.npc_id)
  return npc_id_;
}
void QuestDestroyNpcRsp::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcRsp.npc_id)
}

// uint32 parent_quest_id = 3;
void QuestDestroyNpcRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcRsp.parent_quest_id)
  return parent_quest_id_;
}
void QuestDestroyNpcRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcRsp.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainStartNotify::kBargainIdFieldNumber;
const int BargainStartNotify::kCurMoodFieldNumber;
const int BargainStartNotify::kExpectedPriceFieldNumber;
const int BargainStartNotify::kPriceLowLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainStartNotify::BargainStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainStartNotify)
}
BargainStartNotify::BargainStartNotify(const BargainStartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bargain_id_, &from.bargain_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_low_limit_) -
    reinterpret_cast<char*>(&bargain_id_)) + sizeof(price_low_limit_));
  // @@protoc_insertion_point(copy_constructor:proto.BargainStartNotify)
}

void BargainStartNotify::SharedCtor() {
  ::memset(&bargain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_low_limit_) -
      reinterpret_cast<char*>(&bargain_id_)) + sizeof(price_low_limit_));
  _cached_size_ = 0;
}

BargainStartNotify::~BargainStartNotify() {
  // @@protoc_insertion_point(destructor:proto.BargainStartNotify)
  SharedDtor();
}

void BargainStartNotify::SharedDtor() {
}

void BargainStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainStartNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainStartNotify& BargainStartNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainStartNotify* BargainStartNotify::New(::google::protobuf::Arena* arena) const {
  BargainStartNotify* n = new BargainStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bargain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_low_limit_) -
      reinterpret_cast<char*>(&bargain_id_)) + sizeof(price_low_limit_));
  _internal_metadata_.Clear();
}

bool BargainStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bargain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cur_mood = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_mood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expected_price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expected_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_low_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_low_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainStartNotify)
  return false;
#undef DO_
}

void BargainStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bargain_id(), output);
  }

  // int32 cur_mood = 2;
  if (this->cur_mood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_mood(), output);
  }

  // uint32 expected_price = 3;
  if (this->expected_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expected_price(), output);
  }

  // uint32 price_low_limit = 4;
  if (this->price_low_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->price_low_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainStartNotify)
}

::google::protobuf::uint8* BargainStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bargain_id(), target);
  }

  // int32 cur_mood = 2;
  if (this->cur_mood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_mood(), target);
  }

  // uint32 expected_price = 3;
  if (this->expected_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expected_price(), target);
  }

  // uint32 price_low_limit = 4;
  if (this->price_low_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->price_low_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainStartNotify)
  return target;
}

size_t BargainStartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainStartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  // int32 cur_mood = 2;
  if (this->cur_mood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cur_mood());
  }

  // uint32 expected_price = 3;
  if (this->expected_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expected_price());
  }

  // uint32 price_low_limit = 4;
  if (this->price_low_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_low_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainStartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainStartNotify)
    MergeFrom(*source);
  }
}

void BargainStartNotify::MergeFrom(const BargainStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
  if (from.cur_mood() != 0) {
    set_cur_mood(from.cur_mood());
  }
  if (from.expected_price() != 0) {
    set_expected_price(from.expected_price());
  }
  if (from.price_low_limit() != 0) {
    set_price_low_limit(from.price_low_limit());
  }
}

void BargainStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainStartNotify::CopyFrom(const BargainStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainStartNotify::IsInitialized() const {
  return true;
}

void BargainStartNotify::Swap(BargainStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainStartNotify::InternalSwap(BargainStartNotify* other) {
  using std::swap;
  swap(bargain_id_, other->bargain_id_);
  swap(cur_mood_, other->cur_mood_);
  swap(expected_price_, other->expected_price_);
  swap(price_low_limit_, other->price_low_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainStartNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainStartNotify

// uint32 bargain_id = 1;
void BargainStartNotify::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainStartNotify::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainStartNotify.bargain_id)
  return bargain_id_;
}
void BargainStartNotify::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainStartNotify.bargain_id)
}

// int32 cur_mood = 2;
void BargainStartNotify::clear_cur_mood() {
  cur_mood_ = 0;
}
::google::protobuf::int32 BargainStartNotify::cur_mood() const {
  // @@protoc_insertion_point(field_get:proto.BargainStartNotify.cur_mood)
  return cur_mood_;
}
void BargainStartNotify::set_cur_mood(::google::protobuf::int32 value) {
  
  cur_mood_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainStartNotify.cur_mood)
}

// uint32 expected_price = 3;
void BargainStartNotify::clear_expected_price() {
  expected_price_ = 0u;
}
::google::protobuf::uint32 BargainStartNotify::expected_price() const {
  // @@protoc_insertion_point(field_get:proto.BargainStartNotify.expected_price)
  return expected_price_;
}
void BargainStartNotify::set_expected_price(::google::protobuf::uint32 value) {
  
  expected_price_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainStartNotify.expected_price)
}

// uint32 price_low_limit = 4;
void BargainStartNotify::clear_price_low_limit() {
  price_low_limit_ = 0u;
}
::google::protobuf::uint32 BargainStartNotify::price_low_limit() const {
  // @@protoc_insertion_point(field_get:proto.BargainStartNotify.price_low_limit)
  return price_low_limit_;
}
void BargainStartNotify::set_price_low_limit(::google::protobuf::uint32 value) {
  
  price_low_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainStartNotify.price_low_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainOfferPriceReq::kBargainIdFieldNumber;
const int BargainOfferPriceReq::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainOfferPriceReq::BargainOfferPriceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainOfferPriceReq)
}
BargainOfferPriceReq::BargainOfferPriceReq(const BargainOfferPriceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bargain_id_, &from.bargain_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&bargain_id_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:proto.BargainOfferPriceReq)
}

void BargainOfferPriceReq::SharedCtor() {
  ::memset(&bargain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&bargain_id_)) + sizeof(price_));
  _cached_size_ = 0;
}

BargainOfferPriceReq::~BargainOfferPriceReq() {
  // @@protoc_insertion_point(destructor:proto.BargainOfferPriceReq)
  SharedDtor();
}

void BargainOfferPriceReq::SharedDtor() {
}

void BargainOfferPriceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainOfferPriceReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainOfferPriceReq& BargainOfferPriceReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainOfferPriceReq* BargainOfferPriceReq::New(::google::protobuf::Arena* arena) const {
  BargainOfferPriceReq* n = new BargainOfferPriceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainOfferPriceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainOfferPriceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bargain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&bargain_id_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool BargainOfferPriceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainOfferPriceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bargain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainOfferPriceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainOfferPriceReq)
  return false;
#undef DO_
}

void BargainOfferPriceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainOfferPriceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bargain_id(), output);
  }

  // uint32 price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainOfferPriceReq)
}

::google::protobuf::uint8* BargainOfferPriceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainOfferPriceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bargain_id(), target);
  }

  // uint32 price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainOfferPriceReq)
  return target;
}

size_t BargainOfferPriceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainOfferPriceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  // uint32 price = 2;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainOfferPriceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainOfferPriceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainOfferPriceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainOfferPriceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainOfferPriceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainOfferPriceReq)
    MergeFrom(*source);
  }
}

void BargainOfferPriceReq::MergeFrom(const BargainOfferPriceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainOfferPriceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void BargainOfferPriceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainOfferPriceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainOfferPriceReq::CopyFrom(const BargainOfferPriceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainOfferPriceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainOfferPriceReq::IsInitialized() const {
  return true;
}

void BargainOfferPriceReq::Swap(BargainOfferPriceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainOfferPriceReq::InternalSwap(BargainOfferPriceReq* other) {
  using std::swap;
  swap(bargain_id_, other->bargain_id_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainOfferPriceReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainOfferPriceReq

// uint32 bargain_id = 1;
void BargainOfferPriceReq::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainOfferPriceReq::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceReq.bargain_id)
  return bargain_id_;
}
void BargainOfferPriceReq::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceReq.bargain_id)
}

// uint32 price = 2;
void BargainOfferPriceReq::clear_price() {
  price_ = 0u;
}
::google::protobuf::uint32 BargainOfferPriceReq::price() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceReq.price)
  return price_;
}
void BargainOfferPriceReq::set_price(::google::protobuf::uint32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceReq.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainOfferPriceRsp::kRetcodeFieldNumber;
const int BargainOfferPriceRsp::kBargainResultFieldNumber;
const int BargainOfferPriceRsp::kResultParamFieldNumber;
const int BargainOfferPriceRsp::kCurMoodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainOfferPriceRsp::BargainOfferPriceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainOfferPriceRsp)
}
BargainOfferPriceRsp::BargainOfferPriceRsp(const BargainOfferPriceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_mood_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cur_mood_));
  // @@protoc_insertion_point(copy_constructor:proto.BargainOfferPriceRsp)
}

void BargainOfferPriceRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_mood_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_mood_));
  _cached_size_ = 0;
}

BargainOfferPriceRsp::~BargainOfferPriceRsp() {
  // @@protoc_insertion_point(destructor:proto.BargainOfferPriceRsp)
  SharedDtor();
}

void BargainOfferPriceRsp::SharedDtor() {
}

void BargainOfferPriceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainOfferPriceRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainOfferPriceRsp& BargainOfferPriceRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainOfferPriceRsp* BargainOfferPriceRsp::New(::google::protobuf::Arena* arena) const {
  BargainOfferPriceRsp* n = new BargainOfferPriceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainOfferPriceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainOfferPriceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_mood_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_mood_));
  _internal_metadata_.Clear();
}

bool BargainOfferPriceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainOfferPriceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BargainResultType bargain_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bargain_result(static_cast< ::proto::BargainResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cur_mood = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_mood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainOfferPriceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainOfferPriceRsp)
  return false;
#undef DO_
}

void BargainOfferPriceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainOfferPriceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.BargainResultType bargain_result = 2;
  if (this->bargain_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->bargain_result(), output);
  }

  // uint32 result_param = 3;
  if (this->result_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_param(), output);
  }

  // int32 cur_mood = 4;
  if (this->cur_mood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_mood(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainOfferPriceRsp)
}

::google::protobuf::uint8* BargainOfferPriceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainOfferPriceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.BargainResultType bargain_result = 2;
  if (this->bargain_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->bargain_result(), target);
  }

  // uint32 result_param = 3;
  if (this->result_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result_param(), target);
  }

  // int32 cur_mood = 4;
  if (this->cur_mood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_mood(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainOfferPriceRsp)
  return target;
}

size_t BargainOfferPriceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainOfferPriceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.BargainResultType bargain_result = 2;
  if (this->bargain_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bargain_result());
  }

  // uint32 result_param = 3;
  if (this->result_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_param());
  }

  // int32 cur_mood = 4;
  if (this->cur_mood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cur_mood());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainOfferPriceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainOfferPriceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainOfferPriceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainOfferPriceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainOfferPriceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainOfferPriceRsp)
    MergeFrom(*source);
  }
}

void BargainOfferPriceRsp::MergeFrom(const BargainOfferPriceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainOfferPriceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.bargain_result() != 0) {
    set_bargain_result(from.bargain_result());
  }
  if (from.result_param() != 0) {
    set_result_param(from.result_param());
  }
  if (from.cur_mood() != 0) {
    set_cur_mood(from.cur_mood());
  }
}

void BargainOfferPriceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainOfferPriceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainOfferPriceRsp::CopyFrom(const BargainOfferPriceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainOfferPriceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainOfferPriceRsp::IsInitialized() const {
  return true;
}

void BargainOfferPriceRsp::Swap(BargainOfferPriceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainOfferPriceRsp::InternalSwap(BargainOfferPriceRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(bargain_result_, other->bargain_result_);
  swap(result_param_, other->result_param_);
  swap(cur_mood_, other->cur_mood_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainOfferPriceRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainOfferPriceRsp

// int32 retcode = 1;
void BargainOfferPriceRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 BargainOfferPriceRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.retcode)
  return retcode_;
}
void BargainOfferPriceRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.retcode)
}

// .proto.BargainResultType bargain_result = 2;
void BargainOfferPriceRsp::clear_bargain_result() {
  bargain_result_ = 0;
}
::proto::BargainResultType BargainOfferPriceRsp::bargain_result() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.bargain_result)
  return static_cast< ::proto::BargainResultType >(bargain_result_);
}
void BargainOfferPriceRsp::set_bargain_result(::proto::BargainResultType value) {
  
  bargain_result_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.bargain_result)
}

// uint32 result_param = 3;
void BargainOfferPriceRsp::clear_result_param() {
  result_param_ = 0u;
}
::google::protobuf::uint32 BargainOfferPriceRsp::result_param() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.result_param)
  return result_param_;
}
void BargainOfferPriceRsp::set_result_param(::google::protobuf::uint32 value) {
  
  result_param_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.result_param)
}

// int32 cur_mood = 4;
void BargainOfferPriceRsp::clear_cur_mood() {
  cur_mood_ = 0;
}
::google::protobuf::int32 BargainOfferPriceRsp::cur_mood() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.cur_mood)
  return cur_mood_;
}
void BargainOfferPriceRsp::set_cur_mood(::google::protobuf::int32 value) {
  
  cur_mood_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.cur_mood)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainTerminateNotify::kBargainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainTerminateNotify::BargainTerminateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainTerminateNotify)
}
BargainTerminateNotify::BargainTerminateNotify(const BargainTerminateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bargain_id_ = from.bargain_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BargainTerminateNotify)
}

void BargainTerminateNotify::SharedCtor() {
  bargain_id_ = 0u;
  _cached_size_ = 0;
}

BargainTerminateNotify::~BargainTerminateNotify() {
  // @@protoc_insertion_point(destructor:proto.BargainTerminateNotify)
  SharedDtor();
}

void BargainTerminateNotify::SharedDtor() {
}

void BargainTerminateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainTerminateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainTerminateNotify& BargainTerminateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainTerminateNotify* BargainTerminateNotify::New(::google::protobuf::Arena* arena) const {
  BargainTerminateNotify* n = new BargainTerminateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainTerminateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainTerminateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bargain_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BargainTerminateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainTerminateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bargain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainTerminateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainTerminateNotify)
  return false;
#undef DO_
}

void BargainTerminateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainTerminateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bargain_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainTerminateNotify)
}

::google::protobuf::uint8* BargainTerminateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainTerminateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bargain_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainTerminateNotify)
  return target;
}

size_t BargainTerminateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainTerminateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bargain_id = 1;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainTerminateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainTerminateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainTerminateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainTerminateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainTerminateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainTerminateNotify)
    MergeFrom(*source);
  }
}

void BargainTerminateNotify::MergeFrom(const BargainTerminateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainTerminateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
}

void BargainTerminateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainTerminateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainTerminateNotify::CopyFrom(const BargainTerminateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainTerminateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainTerminateNotify::IsInitialized() const {
  return true;
}

void BargainTerminateNotify::Swap(BargainTerminateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainTerminateNotify::InternalSwap(BargainTerminateNotify* other) {
  using std::swap;
  swap(bargain_id_, other->bargain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainTerminateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainTerminateNotify

// uint32 bargain_id = 1;
void BargainTerminateNotify::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainTerminateNotify::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainTerminateNotify.bargain_id)
  return bargain_id_;
}
void BargainTerminateNotify::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainTerminateNotify.bargain_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
