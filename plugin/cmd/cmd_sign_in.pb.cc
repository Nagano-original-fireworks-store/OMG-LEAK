// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_sign_in.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_sign_in.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class SignInInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignInInfo>
     _instance;
} _SignInInfo_default_instance_;
class SignInAllDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignInAllDataNotify>
     _instance;
} _SignInAllDataNotify_default_instance_;
class SignInInfoOpenNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignInInfoOpenNotify>
     _instance;
} _SignInInfoOpenNotify_default_instance_;
class SignInInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignInInfoReq>
     _instance;
} _SignInInfoReq_default_instance_;
class SignInInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignInInfoRsp>
     _instance;
} _SignInInfoRsp_default_instance_;
class GetSignInRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetSignInRewardReq>
     _instance;
} _GetSignInRewardReq_default_instance_;
class GetSignInRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetSignInRewardRsp>
     _instance;
} _GetSignInRewardRsp_default_instance_;
class BonusActivityInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BonusActivityInfo>
     _instance;
} _BonusActivityInfo_default_instance_;
class BonusActivityAllDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BonusActivityAllDataNotify>
     _instance;
} _BonusActivityAllDataNotify_default_instance_;
class BonusActivityUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BonusActivityUpdateNotify>
     _instance;
} _BonusActivityUpdateNotify_default_instance_;
class BonusActivityInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BonusActivityInfoReq>
     _instance;
} _BonusActivityInfoReq_default_instance_;
class BonusActivityInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BonusActivityInfoRsp>
     _instance;
} _BonusActivityInfoRsp_default_instance_;
class GetBonusActivityRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBonusActivityRewardReq>
     _instance;
} _GetBonusActivityRewardReq_default_instance_;
class GetBonusActivityRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBonusActivityRewardRsp>
     _instance;
} _GetBonusActivityRewardRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fsign_5fin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, is_cond_satisfied_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, sign_in_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, last_sign_in_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfo, reward_day_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInAllDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInAllDataNotify, sign_in_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfoOpenNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfoOpenNotify, schedule_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInInfoRsp, sign_in_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignInRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignInRewardReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignInRewardReq, reward_day_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignInRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignInRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSignInRewardRsp, sign_in_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfo, bonus_activity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfo, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityAllDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityAllDataNotify, bonus_activity_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityUpdateNotify, bonus_activity_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BonusActivityInfoRsp, bonus_activity_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBonusActivityRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBonusActivityRewardReq, bonus_activity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBonusActivityRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBonusActivityRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBonusActivityRewardRsp, bonus_activity_info_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SignInInfo)},
  { 13, -1, sizeof(SignInAllDataNotify)},
  { 19, -1, sizeof(SignInInfoOpenNotify)},
  { 25, -1, sizeof(SignInInfoReq)},
  { 30, -1, sizeof(SignInInfoRsp)},
  { 37, -1, sizeof(GetSignInRewardReq)},
  { 44, -1, sizeof(GetSignInRewardRsp)},
  { 51, -1, sizeof(BonusActivityInfo)},
  { 58, -1, sizeof(BonusActivityAllDataNotify)},
  { 64, -1, sizeof(BonusActivityUpdateNotify)},
  { 70, -1, sizeof(BonusActivityInfoReq)},
  { 75, -1, sizeof(BonusActivityInfoRsp)},
  { 82, -1, sizeof(GetBonusActivityRewardReq)},
  { 88, -1, sizeof(GetBonusActivityRewardRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignInInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignInAllDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignInInfoOpenNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignInInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignInInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSignInRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSignInRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BonusActivityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BonusActivityAllDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BonusActivityUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BonusActivityInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BonusActivityInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBonusActivityRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBonusActivityRewardRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_sign_in.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SignInInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignInInfo_default_instance_);_SignInAllDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignInAllDataNotify_default_instance_);_SignInInfoOpenNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignInInfoOpenNotify_default_instance_);_SignInInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignInInfoReq_default_instance_);_SignInInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignInInfoRsp_default_instance_);_GetSignInRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetSignInRewardReq_default_instance_);_GetSignInRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetSignInRewardRsp_default_instance_);_BonusActivityInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BonusActivityInfo_default_instance_);_BonusActivityAllDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BonusActivityAllDataNotify_default_instance_);_BonusActivityUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BonusActivityUpdateNotify_default_instance_);_BonusActivityInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BonusActivityInfoReq_default_instance_);_BonusActivityInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BonusActivityInfoRsp_default_instance_);_GetBonusActivityRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBonusActivityRewardReq_default_instance_);_GetBonusActivityRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBonusActivityRewardRsp_default_instance_);_GetSignInRewardRsp_default_instance_._instance.get_mutable()->sign_in_info_ = const_cast< ::proto::SignInInfo*>(
      ::proto::SignInInfo::internal_default_instance());
  _GetBonusActivityRewardRsp_default_instance_._instance.get_mutable()->bonus_activity_info_list_ = const_cast< ::proto::BonusActivityInfo*>(
      ::proto::BonusActivityInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025cmd/cmd_sign_in.proto\022\005proto\"\300\001\n\nSignI"
      "nInfo\022\023\n\013schedule_id\030\001 \001(\r\022\021\n\tconfig_id\030"
      "\002 \001(\r\022\022\n\nbegin_time\030\003 \001(\r\022\020\n\010end_time\030\004 "
      "\001(\r\022\031\n\021is_cond_satisfied\030\n \001(\010\022\025\n\rsign_i"
      "n_count\030\013 \001(\r\022\031\n\021last_sign_in_time\030\014 \001(\r"
      "\022\027\n\017reward_day_list\030\r \003(\r\"\222\001\n\023SignInAllD"
      "ataNotify\022,\n\021sign_in_info_list\030\001 \003(\0132\021.p"
      "roto.SignInInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\305\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\177\n\024SignInInfoOpenNotify\022\030"
      "\n\020schedule_id_list\030\001 \003(\r\"M\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\306\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\032\002\020\001\"s\n\rSignInInfoReq"
      "\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\307\023\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"\235\001\n\rSignInInfoRsp\022\017"
      "\n\007retcode\030\001 \001(\005\022,\n\021sign_in_info_list\030\002 \003"
      "(\0132\021.proto.SignInInfo\"M\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\310\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\032\002\020\001\"\241\001\n\022GetSignInReward"
      "Req\022\023\n\013schedule_id\030\001 \001(\r\022\022\n\nreward_day\030\002"
      " \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\311\023\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022"
      "\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\235\001\n\022GetSignInRe"
      "wardRsp\022\017\n\007retcode\030\001 \001(\005\022\'\n\014sign_in_info"
      "\030\002 \001(\0132\021.proto.SignInInfo\"M\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\312\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"=\n\021BonusActivit"
      "yInfo\022\031\n\021bonus_activity_id\030\001 \001(\r\022\r\n\005stat"
      "e\030\002 \001(\r\"\247\001\n\032BonusActivityAllDataNotify\022:"
      "\n\030bonus_activity_info_list\030\001 \003(\0132\030.proto"
      ".BonusActivityInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n"
      "\006CMD_ID\020\317\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_"
      "IS_RELIABLE\020\001\032\002\020\001\"\246\001\n\031BonusActivityUpdat"
      "eNotify\022:\n\030bonus_activity_info_list\030\001 \003("
      "\0132\030.proto.BonusActivityInfo\"M\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\320\023\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"z\n\024BonusActiv"
      "ityInfoReq\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\321\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\262\001\n\024Bonus"
      "ActivityInfoRsp\022\017\n\007retcode\030\001 \001(\005\022:\n\030bonu"
      "s_activity_info_list\030\002 \003(\0132\030.proto.Bonus"
      "ActivityInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\322\023\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\032\002\020\001\"\232\001\n\031GetBonusActivityRewardRe"
      "q\022\031\n\021bonus_activity_id\030\001 \001(\r\"b\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\323\023\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIE"
      "NT\020\001\032\002\020\001\"\267\001\n\031GetBonusActivityRewardRsp\022\017"
      "\n\007retcode\030\001 \001(\005\022:\n\030bonus_activity_info_l"
      "ist\030\002 \001(\0132\030.proto.BonusActivityInfo\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\324\023\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2162);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_sign_in.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fsign_5fin_2eproto

const ::google::protobuf::EnumDescriptor* SignInAllDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[0];
}
bool SignInAllDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2501:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SignInAllDataNotify_CmdId SignInAllDataNotify::NONE;
const SignInAllDataNotify_CmdId SignInAllDataNotify::CMD_ID;
const SignInAllDataNotify_CmdId SignInAllDataNotify::ENET_CHANNEL_ID;
const SignInAllDataNotify_CmdId SignInAllDataNotify::ENET_IS_RELIABLE;
const SignInAllDataNotify_CmdId SignInAllDataNotify::CmdId_MIN;
const SignInAllDataNotify_CmdId SignInAllDataNotify::CmdId_MAX;
const int SignInAllDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SignInInfoOpenNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[1];
}
bool SignInInfoOpenNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2502:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify::NONE;
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify::CMD_ID;
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify::ENET_CHANNEL_ID;
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify::ENET_IS_RELIABLE;
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify::CmdId_MIN;
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify::CmdId_MAX;
const int SignInInfoOpenNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SignInInfoReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[2];
}
bool SignInInfoReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2503:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SignInInfoReq_CmdId SignInInfoReq::NONE;
const SignInInfoReq_CmdId SignInInfoReq::CMD_ID;
const SignInInfoReq_CmdId SignInInfoReq::ENET_CHANNEL_ID;
const SignInInfoReq_CmdId SignInInfoReq::ENET_IS_RELIABLE;
const SignInInfoReq_CmdId SignInInfoReq::IS_ALLOW_CLIENT;
const SignInInfoReq_CmdId SignInInfoReq::CmdId_MIN;
const SignInInfoReq_CmdId SignInInfoReq::CmdId_MAX;
const int SignInInfoReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SignInInfoRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[3];
}
bool SignInInfoRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2504:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SignInInfoRsp_CmdId SignInInfoRsp::NONE;
const SignInInfoRsp_CmdId SignInInfoRsp::CMD_ID;
const SignInInfoRsp_CmdId SignInInfoRsp::ENET_CHANNEL_ID;
const SignInInfoRsp_CmdId SignInInfoRsp::ENET_IS_RELIABLE;
const SignInInfoRsp_CmdId SignInInfoRsp::CmdId_MIN;
const SignInInfoRsp_CmdId SignInInfoRsp::CmdId_MAX;
const int SignInInfoRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetSignInRewardReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[4];
}
bool GetSignInRewardReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2505:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetSignInRewardReq_CmdId GetSignInRewardReq::NONE;
const GetSignInRewardReq_CmdId GetSignInRewardReq::CMD_ID;
const GetSignInRewardReq_CmdId GetSignInRewardReq::ENET_CHANNEL_ID;
const GetSignInRewardReq_CmdId GetSignInRewardReq::ENET_IS_RELIABLE;
const GetSignInRewardReq_CmdId GetSignInRewardReq::IS_ALLOW_CLIENT;
const GetSignInRewardReq_CmdId GetSignInRewardReq::CmdId_MIN;
const GetSignInRewardReq_CmdId GetSignInRewardReq::CmdId_MAX;
const int GetSignInRewardReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetSignInRewardRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[5];
}
bool GetSignInRewardRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2506:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetSignInRewardRsp_CmdId GetSignInRewardRsp::NONE;
const GetSignInRewardRsp_CmdId GetSignInRewardRsp::CMD_ID;
const GetSignInRewardRsp_CmdId GetSignInRewardRsp::ENET_CHANNEL_ID;
const GetSignInRewardRsp_CmdId GetSignInRewardRsp::ENET_IS_RELIABLE;
const GetSignInRewardRsp_CmdId GetSignInRewardRsp::CmdId_MIN;
const GetSignInRewardRsp_CmdId GetSignInRewardRsp::CmdId_MAX;
const int GetSignInRewardRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BonusActivityAllDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[6];
}
bool BonusActivityAllDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2511:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify::NONE;
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify::CMD_ID;
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify::ENET_CHANNEL_ID;
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify::ENET_IS_RELIABLE;
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify::CmdId_MIN;
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify::CmdId_MAX;
const int BonusActivityAllDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BonusActivityUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[7];
}
bool BonusActivityUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2512:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify::NONE;
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify::CMD_ID;
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify::ENET_CHANNEL_ID;
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify::ENET_IS_RELIABLE;
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify::CmdId_MIN;
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify::CmdId_MAX;
const int BonusActivityUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BonusActivityInfoReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[8];
}
bool BonusActivityInfoReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2513:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::NONE;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::CMD_ID;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::ENET_CHANNEL_ID;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::ENET_IS_RELIABLE;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::IS_ALLOW_CLIENT;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::CmdId_MIN;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq::CmdId_MAX;
const int BonusActivityInfoReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BonusActivityInfoRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[9];
}
bool BonusActivityInfoRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2514:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp::NONE;
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp::CMD_ID;
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp::ENET_CHANNEL_ID;
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp::ENET_IS_RELIABLE;
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp::CmdId_MIN;
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp::CmdId_MAX;
const int BonusActivityInfoRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetBonusActivityRewardReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[10];
}
bool GetBonusActivityRewardReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2515:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::NONE;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::CMD_ID;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::ENET_CHANNEL_ID;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::ENET_IS_RELIABLE;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::IS_ALLOW_CLIENT;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::CmdId_MIN;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq::CmdId_MAX;
const int GetBonusActivityRewardReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetBonusActivityRewardRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_enum_descriptors[11];
}
bool GetBonusActivityRewardRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2516:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp::NONE;
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp::CMD_ID;
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp::ENET_CHANNEL_ID;
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp::ENET_IS_RELIABLE;
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp::CmdId_MIN;
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp::CmdId_MAX;
const int GetBonusActivityRewardRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignInInfo::kScheduleIdFieldNumber;
const int SignInInfo::kConfigIdFieldNumber;
const int SignInInfo::kBeginTimeFieldNumber;
const int SignInInfo::kEndTimeFieldNumber;
const int SignInInfo::kIsCondSatisfiedFieldNumber;
const int SignInInfo::kSignInCountFieldNumber;
const int SignInInfo::kLastSignInTimeFieldNumber;
const int SignInInfo::kRewardDayListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInInfo::SignInInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignInInfo)
}
SignInInfo::SignInInfo(const SignInInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reward_day_list_(from.reward_day_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&schedule_id_, &from.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sign_in_count_) -
    reinterpret_cast<char*>(&schedule_id_)) + sizeof(sign_in_count_));
  // @@protoc_insertion_point(copy_constructor:proto.SignInInfo)
}

void SignInInfo::SharedCtor() {
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sign_in_count_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(sign_in_count_));
  _cached_size_ = 0;
}

SignInInfo::~SignInInfo() {
  // @@protoc_insertion_point(destructor:proto.SignInInfo)
  SharedDtor();
}

void SignInInfo::SharedDtor() {
}

void SignInInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInInfo::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignInInfo& SignInInfo::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignInInfo* SignInInfo::New(::google::protobuf::Arena* arena) const {
  SignInInfo* n = new SignInInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignInInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignInInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_day_list_.Clear();
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sign_in_count_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(sign_in_count_));
  _internal_metadata_.Clear();
}

bool SignInInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignInInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 begin_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_cond_satisfied = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cond_satisfied_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sign_in_count = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sign_in_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_sign_in_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_sign_in_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 reward_day_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_reward_day_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_reward_day_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignInInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignInInfo)
  return false;
#undef DO_
}

void SignInInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignInInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // uint32 begin_time = 3;
  if (this->begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->begin_time(), output);
  }

  // uint32 end_time = 4;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->end_time(), output);
  }

  // bool is_cond_satisfied = 10;
  if (this->is_cond_satisfied() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_cond_satisfied(), output);
  }

  // uint32 sign_in_count = 11;
  if (this->sign_in_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->sign_in_count(), output);
  }

  // uint32 last_sign_in_time = 12;
  if (this->last_sign_in_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->last_sign_in_time(), output);
  }

  // repeated uint32 reward_day_list = 13;
  if (this->reward_day_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reward_day_list_cached_byte_size_));
  }
  for (int i = 0, n = this->reward_day_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->reward_day_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignInInfo)
}

::google::protobuf::uint8* SignInInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignInInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // uint32 begin_time = 3;
  if (this->begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->begin_time(), target);
  }

  // uint32 end_time = 4;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->end_time(), target);
  }

  // bool is_cond_satisfied = 10;
  if (this->is_cond_satisfied() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_cond_satisfied(), target);
  }

  // uint32 sign_in_count = 11;
  if (this->sign_in_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->sign_in_count(), target);
  }

  // uint32 last_sign_in_time = 12;
  if (this->last_sign_in_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->last_sign_in_time(), target);
  }

  // repeated uint32 reward_day_list = 13;
  if (this->reward_day_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _reward_day_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->reward_day_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignInInfo)
  return target;
}

size_t SignInInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignInInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 reward_day_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->reward_day_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reward_day_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 begin_time = 3;
  if (this->begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_time());
  }

  // uint32 end_time = 4;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  // uint32 last_sign_in_time = 12;
  if (this->last_sign_in_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_sign_in_time());
  }

  // bool is_cond_satisfied = 10;
  if (this->is_cond_satisfied() != 0) {
    total_size += 1 + 1;
  }

  // uint32 sign_in_count = 11;
  if (this->sign_in_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sign_in_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignInInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignInInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignInInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignInInfo)
    MergeFrom(*source);
  }
}

void SignInInfo::MergeFrom(const SignInInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignInInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reward_day_list_.MergeFrom(from.reward_day_list_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.begin_time() != 0) {
    set_begin_time(from.begin_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
  if (from.last_sign_in_time() != 0) {
    set_last_sign_in_time(from.last_sign_in_time());
  }
  if (from.is_cond_satisfied() != 0) {
    set_is_cond_satisfied(from.is_cond_satisfied());
  }
  if (from.sign_in_count() != 0) {
    set_sign_in_count(from.sign_in_count());
  }
}

void SignInInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignInInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInInfo::CopyFrom(const SignInInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignInInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInInfo::IsInitialized() const {
  return true;
}

void SignInInfo::Swap(SignInInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInInfo::InternalSwap(SignInInfo* other) {
  using std::swap;
  reward_day_list_.InternalSwap(&other->reward_day_list_);
  swap(schedule_id_, other->schedule_id_);
  swap(config_id_, other->config_id_);
  swap(begin_time_, other->begin_time_);
  swap(end_time_, other->end_time_);
  swap(last_sign_in_time_, other->last_sign_in_time_);
  swap(is_cond_satisfied_, other->is_cond_satisfied_);
  swap(sign_in_count_, other->sign_in_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignInInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignInInfo

// uint32 schedule_id = 1;
void SignInInfo::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 SignInInfo::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.schedule_id)
  return schedule_id_;
}
void SignInInfo::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.schedule_id)
}

// uint32 config_id = 2;
void SignInInfo::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SignInInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.config_id)
  return config_id_;
}
void SignInInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.config_id)
}

// uint32 begin_time = 3;
void SignInInfo::clear_begin_time() {
  begin_time_ = 0u;
}
::google::protobuf::uint32 SignInInfo::begin_time() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.begin_time)
  return begin_time_;
}
void SignInInfo::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.begin_time)
}

// uint32 end_time = 4;
void SignInInfo::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 SignInInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.end_time)
  return end_time_;
}
void SignInInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.end_time)
}

// bool is_cond_satisfied = 10;
void SignInInfo::clear_is_cond_satisfied() {
  is_cond_satisfied_ = false;
}
bool SignInInfo::is_cond_satisfied() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.is_cond_satisfied)
  return is_cond_satisfied_;
}
void SignInInfo::set_is_cond_satisfied(bool value) {
  
  is_cond_satisfied_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.is_cond_satisfied)
}

// uint32 sign_in_count = 11;
void SignInInfo::clear_sign_in_count() {
  sign_in_count_ = 0u;
}
::google::protobuf::uint32 SignInInfo::sign_in_count() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.sign_in_count)
  return sign_in_count_;
}
void SignInInfo::set_sign_in_count(::google::protobuf::uint32 value) {
  
  sign_in_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.sign_in_count)
}

// uint32 last_sign_in_time = 12;
void SignInInfo::clear_last_sign_in_time() {
  last_sign_in_time_ = 0u;
}
::google::protobuf::uint32 SignInInfo::last_sign_in_time() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.last_sign_in_time)
  return last_sign_in_time_;
}
void SignInInfo::set_last_sign_in_time(::google::protobuf::uint32 value) {
  
  last_sign_in_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.last_sign_in_time)
}

// repeated uint32 reward_day_list = 13;
int SignInInfo::reward_day_list_size() const {
  return reward_day_list_.size();
}
void SignInInfo::clear_reward_day_list() {
  reward_day_list_.Clear();
}
::google::protobuf::uint32 SignInInfo::reward_day_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.reward_day_list)
  return reward_day_list_.Get(index);
}
void SignInInfo::set_reward_day_list(int index, ::google::protobuf::uint32 value) {
  reward_day_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SignInInfo.reward_day_list)
}
void SignInInfo::add_reward_day_list(::google::protobuf::uint32 value) {
  reward_day_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SignInInfo.reward_day_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SignInInfo::reward_day_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInInfo.reward_day_list)
  return reward_day_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SignInInfo::mutable_reward_day_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInInfo.reward_day_list)
  return &reward_day_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignInAllDataNotify::kSignInInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInAllDataNotify::SignInAllDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignInAllDataNotify)
}
SignInAllDataNotify::SignInAllDataNotify(const SignInAllDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sign_in_info_list_(from.sign_in_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SignInAllDataNotify)
}

void SignInAllDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

SignInAllDataNotify::~SignInAllDataNotify() {
  // @@protoc_insertion_point(destructor:proto.SignInAllDataNotify)
  SharedDtor();
}

void SignInAllDataNotify::SharedDtor() {
}

void SignInAllDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInAllDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignInAllDataNotify& SignInAllDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignInAllDataNotify* SignInAllDataNotify::New(::google::protobuf::Arena* arena) const {
  SignInAllDataNotify* n = new SignInAllDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignInAllDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignInAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sign_in_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool SignInAllDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignInAllDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.SignInInfo sign_in_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sign_in_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignInAllDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignInAllDataNotify)
  return false;
#undef DO_
}

void SignInAllDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignInAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SignInInfo sign_in_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sign_in_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sign_in_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignInAllDataNotify)
}

::google::protobuf::uint8* SignInAllDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignInAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SignInInfo sign_in_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sign_in_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sign_in_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignInAllDataNotify)
  return target;
}

size_t SignInAllDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignInAllDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SignInInfo sign_in_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sign_in_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sign_in_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInAllDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignInAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInAllDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignInAllDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignInAllDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignInAllDataNotify)
    MergeFrom(*source);
  }
}

void SignInAllDataNotify::MergeFrom(const SignInAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignInAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sign_in_info_list_.MergeFrom(from.sign_in_info_list_);
}

void SignInAllDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignInAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInAllDataNotify::CopyFrom(const SignInAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignInAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInAllDataNotify::IsInitialized() const {
  return true;
}

void SignInAllDataNotify::Swap(SignInAllDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInAllDataNotify::InternalSwap(SignInAllDataNotify* other) {
  using std::swap;
  sign_in_info_list_.InternalSwap(&other->sign_in_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignInAllDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignInAllDataNotify

// repeated .proto.SignInInfo sign_in_info_list = 1;
int SignInAllDataNotify::sign_in_info_list_size() const {
  return sign_in_info_list_.size();
}
void SignInAllDataNotify::clear_sign_in_info_list() {
  sign_in_info_list_.Clear();
}
const ::proto::SignInInfo& SignInAllDataNotify::sign_in_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_.Get(index);
}
::proto::SignInInfo* SignInAllDataNotify::mutable_sign_in_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_.Mutable(index);
}
::proto::SignInInfo* SignInAllDataNotify::add_sign_in_info_list() {
  // @@protoc_insertion_point(field_add:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >*
SignInAllDataNotify::mutable_sign_in_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInAllDataNotify.sign_in_info_list)
  return &sign_in_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >&
SignInAllDataNotify::sign_in_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignInInfoOpenNotify::kScheduleIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInInfoOpenNotify::SignInInfoOpenNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignInInfoOpenNotify)
}
SignInInfoOpenNotify::SignInInfoOpenNotify(const SignInInfoOpenNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      schedule_id_list_(from.schedule_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SignInInfoOpenNotify)
}

void SignInInfoOpenNotify::SharedCtor() {
  _cached_size_ = 0;
}

SignInInfoOpenNotify::~SignInInfoOpenNotify() {
  // @@protoc_insertion_point(destructor:proto.SignInInfoOpenNotify)
  SharedDtor();
}

void SignInInfoOpenNotify::SharedDtor() {
}

void SignInInfoOpenNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInInfoOpenNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignInInfoOpenNotify& SignInInfoOpenNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignInInfoOpenNotify* SignInInfoOpenNotify::New(::google::protobuf::Arena* arena) const {
  SignInInfoOpenNotify* n = new SignInInfoOpenNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignInInfoOpenNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignInInfoOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schedule_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool SignInInfoOpenNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignInInfoOpenNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 schedule_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_schedule_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_schedule_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignInInfoOpenNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignInInfoOpenNotify)
  return false;
#undef DO_
}

void SignInInfoOpenNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignInInfoOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 schedule_id_list = 1;
  if (this->schedule_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _schedule_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->schedule_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->schedule_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignInInfoOpenNotify)
}

::google::protobuf::uint8* SignInInfoOpenNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignInInfoOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 schedule_id_list = 1;
  if (this->schedule_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _schedule_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->schedule_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignInInfoOpenNotify)
  return target;
}

size_t SignInInfoOpenNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignInInfoOpenNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 schedule_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->schedule_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _schedule_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInInfoOpenNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignInInfoOpenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInInfoOpenNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignInInfoOpenNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignInInfoOpenNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignInInfoOpenNotify)
    MergeFrom(*source);
  }
}

void SignInInfoOpenNotify::MergeFrom(const SignInInfoOpenNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignInInfoOpenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schedule_id_list_.MergeFrom(from.schedule_id_list_);
}

void SignInInfoOpenNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignInInfoOpenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInInfoOpenNotify::CopyFrom(const SignInInfoOpenNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignInInfoOpenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInInfoOpenNotify::IsInitialized() const {
  return true;
}

void SignInInfoOpenNotify::Swap(SignInInfoOpenNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInInfoOpenNotify::InternalSwap(SignInInfoOpenNotify* other) {
  using std::swap;
  schedule_id_list_.InternalSwap(&other->schedule_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignInInfoOpenNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignInInfoOpenNotify

// repeated uint32 schedule_id_list = 1;
int SignInInfoOpenNotify::schedule_id_list_size() const {
  return schedule_id_list_.size();
}
void SignInInfoOpenNotify::clear_schedule_id_list() {
  schedule_id_list_.Clear();
}
::google::protobuf::uint32 SignInInfoOpenNotify::schedule_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInInfoOpenNotify.schedule_id_list)
  return schedule_id_list_.Get(index);
}
void SignInInfoOpenNotify::set_schedule_id_list(int index, ::google::protobuf::uint32 value) {
  schedule_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SignInInfoOpenNotify.schedule_id_list)
}
void SignInInfoOpenNotify::add_schedule_id_list(::google::protobuf::uint32 value) {
  schedule_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SignInInfoOpenNotify.schedule_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SignInInfoOpenNotify::schedule_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInInfoOpenNotify.schedule_id_list)
  return schedule_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SignInInfoOpenNotify::mutable_schedule_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInInfoOpenNotify.schedule_id_list)
  return &schedule_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInInfoReq::SignInInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignInInfoReq)
}
SignInInfoReq::SignInInfoReq(const SignInInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SignInInfoReq)
}

void SignInInfoReq::SharedCtor() {
  _cached_size_ = 0;
}

SignInInfoReq::~SignInInfoReq() {
  // @@protoc_insertion_point(destructor:proto.SignInInfoReq)
  SharedDtor();
}

void SignInInfoReq::SharedDtor() {
}

void SignInInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignInInfoReq& SignInInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignInInfoReq* SignInInfoReq::New(::google::protobuf::Arena* arena) const {
  SignInInfoReq* n = new SignInInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignInInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignInInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SignInInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignInInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignInInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignInInfoReq)
  return false;
#undef DO_
}

void SignInInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignInInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignInInfoReq)
}

::google::protobuf::uint8* SignInInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignInInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignInInfoReq)
  return target;
}

size_t SignInInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignInInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignInInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignInInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignInInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignInInfoReq)
    MergeFrom(*source);
  }
}

void SignInInfoReq::MergeFrom(const SignInInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignInInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SignInInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignInInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInInfoReq::CopyFrom(const SignInInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignInInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInInfoReq::IsInitialized() const {
  return true;
}

void SignInInfoReq::Swap(SignInInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInInfoReq::InternalSwap(SignInInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignInInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignInInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignInInfoRsp::kRetcodeFieldNumber;
const int SignInInfoRsp::kSignInInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInInfoRsp::SignInInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignInInfoRsp)
}
SignInInfoRsp::SignInInfoRsp(const SignInInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sign_in_info_list_(from.sign_in_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SignInInfoRsp)
}

void SignInInfoRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SignInInfoRsp::~SignInInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.SignInInfoRsp)
  SharedDtor();
}

void SignInInfoRsp::SharedDtor() {
}

void SignInInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignInInfoRsp& SignInInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignInInfoRsp* SignInInfoRsp::New(::google::protobuf::Arena* arena) const {
  SignInInfoRsp* n = new SignInInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignInInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignInInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sign_in_info_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SignInInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignInInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SignInInfo sign_in_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sign_in_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignInInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignInInfoRsp)
  return false;
#undef DO_
}

void SignInInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignInInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.SignInInfo sign_in_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sign_in_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sign_in_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignInInfoRsp)
}

::google::protobuf::uint8* SignInInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignInInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.SignInInfo sign_in_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sign_in_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->sign_in_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignInInfoRsp)
  return target;
}

size_t SignInInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignInInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SignInInfo sign_in_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sign_in_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sign_in_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignInInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignInInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignInInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignInInfoRsp)
    MergeFrom(*source);
  }
}

void SignInInfoRsp::MergeFrom(const SignInInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignInInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sign_in_info_list_.MergeFrom(from.sign_in_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SignInInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignInInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInInfoRsp::CopyFrom(const SignInInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignInInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInInfoRsp::IsInitialized() const {
  return true;
}

void SignInInfoRsp::Swap(SignInInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInInfoRsp::InternalSwap(SignInInfoRsp* other) {
  using std::swap;
  sign_in_info_list_.InternalSwap(&other->sign_in_info_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignInInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignInInfoRsp

// int32 retcode = 1;
void SignInInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SignInInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfoRsp.retcode)
  return retcode_;
}
void SignInInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfoRsp.retcode)
}

// repeated .proto.SignInInfo sign_in_info_list = 2;
int SignInInfoRsp::sign_in_info_list_size() const {
  return sign_in_info_list_.size();
}
void SignInInfoRsp::clear_sign_in_info_list() {
  sign_in_info_list_.Clear();
}
const ::proto::SignInInfo& SignInInfoRsp::sign_in_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_.Get(index);
}
::proto::SignInInfo* SignInInfoRsp::mutable_sign_in_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_.Mutable(index);
}
::proto::SignInInfo* SignInInfoRsp::add_sign_in_info_list() {
  // @@protoc_insertion_point(field_add:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >*
SignInInfoRsp::mutable_sign_in_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInInfoRsp.sign_in_info_list)
  return &sign_in_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >&
SignInInfoRsp::sign_in_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSignInRewardReq::kScheduleIdFieldNumber;
const int GetSignInRewardReq::kRewardDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSignInRewardReq::GetSignInRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetSignInRewardReq)
}
GetSignInRewardReq::GetSignInRewardReq(const GetSignInRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&schedule_id_, &from.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_day_) -
    reinterpret_cast<char*>(&schedule_id_)) + sizeof(reward_day_));
  // @@protoc_insertion_point(copy_constructor:proto.GetSignInRewardReq)
}

void GetSignInRewardReq::SharedCtor() {
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_day_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(reward_day_));
  _cached_size_ = 0;
}

GetSignInRewardReq::~GetSignInRewardReq() {
  // @@protoc_insertion_point(destructor:proto.GetSignInRewardReq)
  SharedDtor();
}

void GetSignInRewardReq::SharedDtor() {
}

void GetSignInRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSignInRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSignInRewardReq& GetSignInRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSignInRewardReq* GetSignInRewardReq::New(::google::protobuf::Arena* arena) const {
  GetSignInRewardReq* n = new GetSignInRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSignInRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSignInRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_day_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(reward_day_));
  _internal_metadata_.Clear();
}

bool GetSignInRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetSignInRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetSignInRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetSignInRewardReq)
  return false;
#undef DO_
}

void GetSignInRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetSignInRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // uint32 reward_day = 2;
  if (this->reward_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reward_day(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetSignInRewardReq)
}

::google::protobuf::uint8* GetSignInRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSignInRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // uint32 reward_day = 2;
  if (this->reward_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reward_day(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSignInRewardReq)
  return target;
}

size_t GetSignInRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSignInRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 reward_day = 2;
  if (this->reward_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_day());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSignInRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetSignInRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSignInRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSignInRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetSignInRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetSignInRewardReq)
    MergeFrom(*source);
  }
}

void GetSignInRewardReq::MergeFrom(const GetSignInRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSignInRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.reward_day() != 0) {
    set_reward_day(from.reward_day());
  }
}

void GetSignInRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetSignInRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSignInRewardReq::CopyFrom(const GetSignInRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSignInRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSignInRewardReq::IsInitialized() const {
  return true;
}

void GetSignInRewardReq::Swap(GetSignInRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSignInRewardReq::InternalSwap(GetSignInRewardReq* other) {
  using std::swap;
  swap(schedule_id_, other->schedule_id_);
  swap(reward_day_, other->reward_day_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSignInRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSignInRewardReq

// uint32 schedule_id = 1;
void GetSignInRewardReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 GetSignInRewardReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardReq.schedule_id)
  return schedule_id_;
}
void GetSignInRewardReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSignInRewardReq.schedule_id)
}

// uint32 reward_day = 2;
void GetSignInRewardReq::clear_reward_day() {
  reward_day_ = 0u;
}
::google::protobuf::uint32 GetSignInRewardReq::reward_day() const {
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardReq.reward_day)
  return reward_day_;
}
void GetSignInRewardReq::set_reward_day(::google::protobuf::uint32 value) {
  
  reward_day_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSignInRewardReq.reward_day)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSignInRewardRsp::kRetcodeFieldNumber;
const int GetSignInRewardRsp::kSignInInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSignInRewardRsp::GetSignInRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetSignInRewardRsp)
}
GetSignInRewardRsp::GetSignInRewardRsp(const GetSignInRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sign_in_info()) {
    sign_in_info_ = new ::proto::SignInInfo(*from.sign_in_info_);
  } else {
    sign_in_info_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSignInRewardRsp)
}

void GetSignInRewardRsp::SharedCtor() {
  ::memset(&sign_in_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&sign_in_info_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetSignInRewardRsp::~GetSignInRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.GetSignInRewardRsp)
  SharedDtor();
}

void GetSignInRewardRsp::SharedDtor() {
  if (this != internal_default_instance()) delete sign_in_info_;
}

void GetSignInRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSignInRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSignInRewardRsp& GetSignInRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSignInRewardRsp* GetSignInRewardRsp::New(::google::protobuf::Arena* arena) const {
  GetSignInRewardRsp* n = new GetSignInRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSignInRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSignInRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sign_in_info_ != NULL) {
    delete sign_in_info_;
  }
  sign_in_info_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetSignInRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetSignInRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SignInInfo sign_in_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sign_in_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetSignInRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetSignInRewardRsp)
  return false;
#undef DO_
}

void GetSignInRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetSignInRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.SignInInfo sign_in_info = 2;
  if (this->has_sign_in_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sign_in_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetSignInRewardRsp)
}

::google::protobuf::uint8* GetSignInRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSignInRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.SignInInfo sign_in_info = 2;
  if (this->has_sign_in_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->sign_in_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSignInRewardRsp)
  return target;
}

size_t GetSignInRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSignInRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SignInInfo sign_in_info = 2;
  if (this->has_sign_in_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sign_in_info_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSignInRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetSignInRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSignInRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSignInRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetSignInRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetSignInRewardRsp)
    MergeFrom(*source);
  }
}

void GetSignInRewardRsp::MergeFrom(const GetSignInRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSignInRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sign_in_info()) {
    mutable_sign_in_info()->::proto::SignInInfo::MergeFrom(from.sign_in_info());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetSignInRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetSignInRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSignInRewardRsp::CopyFrom(const GetSignInRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSignInRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSignInRewardRsp::IsInitialized() const {
  return true;
}

void GetSignInRewardRsp::Swap(GetSignInRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSignInRewardRsp::InternalSwap(GetSignInRewardRsp* other) {
  using std::swap;
  swap(sign_in_info_, other->sign_in_info_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSignInRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSignInRewardRsp

// int32 retcode = 1;
void GetSignInRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetSignInRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardRsp.retcode)
  return retcode_;
}
void GetSignInRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSignInRewardRsp.retcode)
}

// .proto.SignInInfo sign_in_info = 2;
bool GetSignInRewardRsp::has_sign_in_info() const {
  return this != internal_default_instance() && sign_in_info_ != NULL;
}
void GetSignInRewardRsp::clear_sign_in_info() {
  if (GetArenaNoVirtual() == NULL && sign_in_info_ != NULL) delete sign_in_info_;
  sign_in_info_ = NULL;
}
const ::proto::SignInInfo& GetSignInRewardRsp::sign_in_info() const {
  const ::proto::SignInInfo* p = sign_in_info_;
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardRsp.sign_in_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SignInInfo*>(
      &::proto::_SignInInfo_default_instance_);
}
::proto::SignInInfo* GetSignInRewardRsp::mutable_sign_in_info() {
  
  if (sign_in_info_ == NULL) {
    sign_in_info_ = new ::proto::SignInInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetSignInRewardRsp.sign_in_info)
  return sign_in_info_;
}
::proto::SignInInfo* GetSignInRewardRsp::release_sign_in_info() {
  // @@protoc_insertion_point(field_release:proto.GetSignInRewardRsp.sign_in_info)
  
  ::proto::SignInInfo* temp = sign_in_info_;
  sign_in_info_ = NULL;
  return temp;
}
void GetSignInRewardRsp::set_allocated_sign_in_info(::proto::SignInInfo* sign_in_info) {
  delete sign_in_info_;
  sign_in_info_ = sign_in_info;
  if (sign_in_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetSignInRewardRsp.sign_in_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BonusActivityInfo::kBonusActivityIdFieldNumber;
const int BonusActivityInfo::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BonusActivityInfo::BonusActivityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BonusActivityInfo)
}
BonusActivityInfo::BonusActivityInfo(const BonusActivityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bonus_activity_id_, &from.bonus_activity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&bonus_activity_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:proto.BonusActivityInfo)
}

void BonusActivityInfo::SharedCtor() {
  ::memset(&bonus_activity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&bonus_activity_id_)) + sizeof(state_));
  _cached_size_ = 0;
}

BonusActivityInfo::~BonusActivityInfo() {
  // @@protoc_insertion_point(destructor:proto.BonusActivityInfo)
  SharedDtor();
}

void BonusActivityInfo::SharedDtor() {
}

void BonusActivityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BonusActivityInfo::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BonusActivityInfo& BonusActivityInfo::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

BonusActivityInfo* BonusActivityInfo::New(::google::protobuf::Arena* arena) const {
  BonusActivityInfo* n = new BonusActivityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BonusActivityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BonusActivityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bonus_activity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&bonus_activity_id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool BonusActivityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BonusActivityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bonus_activity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_activity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BonusActivityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BonusActivityInfo)
  return false;
#undef DO_
}

void BonusActivityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BonusActivityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bonus_activity_id = 1;
  if (this->bonus_activity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bonus_activity_id(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BonusActivityInfo)
}

::google::protobuf::uint8* BonusActivityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BonusActivityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bonus_activity_id = 1;
  if (this->bonus_activity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bonus_activity_id(), target);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BonusActivityInfo)
  return target;
}

size_t BonusActivityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BonusActivityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bonus_activity_id = 1;
  if (this->bonus_activity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bonus_activity_id());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BonusActivityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BonusActivityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BonusActivityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BonusActivityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BonusActivityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BonusActivityInfo)
    MergeFrom(*source);
  }
}

void BonusActivityInfo::MergeFrom(const BonusActivityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BonusActivityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bonus_activity_id() != 0) {
    set_bonus_activity_id(from.bonus_activity_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void BonusActivityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BonusActivityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BonusActivityInfo::CopyFrom(const BonusActivityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BonusActivityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BonusActivityInfo::IsInitialized() const {
  return true;
}

void BonusActivityInfo::Swap(BonusActivityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BonusActivityInfo::InternalSwap(BonusActivityInfo* other) {
  using std::swap;
  swap(bonus_activity_id_, other->bonus_activity_id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BonusActivityInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BonusActivityInfo

// uint32 bonus_activity_id = 1;
void BonusActivityInfo::clear_bonus_activity_id() {
  bonus_activity_id_ = 0u;
}
::google::protobuf::uint32 BonusActivityInfo::bonus_activity_id() const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfo.bonus_activity_id)
  return bonus_activity_id_;
}
void BonusActivityInfo::set_bonus_activity_id(::google::protobuf::uint32 value) {
  
  bonus_activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BonusActivityInfo.bonus_activity_id)
}

// uint32 state = 2;
void BonusActivityInfo::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 BonusActivityInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfo.state)
  return state_;
}
void BonusActivityInfo::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.BonusActivityInfo.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BonusActivityAllDataNotify::kBonusActivityInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BonusActivityAllDataNotify::BonusActivityAllDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BonusActivityAllDataNotify)
}
BonusActivityAllDataNotify::BonusActivityAllDataNotify(const BonusActivityAllDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bonus_activity_info_list_(from.bonus_activity_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.BonusActivityAllDataNotify)
}

void BonusActivityAllDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

BonusActivityAllDataNotify::~BonusActivityAllDataNotify() {
  // @@protoc_insertion_point(destructor:proto.BonusActivityAllDataNotify)
  SharedDtor();
}

void BonusActivityAllDataNotify::SharedDtor() {
}

void BonusActivityAllDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BonusActivityAllDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BonusActivityAllDataNotify& BonusActivityAllDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

BonusActivityAllDataNotify* BonusActivityAllDataNotify::New(::google::protobuf::Arena* arena) const {
  BonusActivityAllDataNotify* n = new BonusActivityAllDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BonusActivityAllDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BonusActivityAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bonus_activity_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool BonusActivityAllDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BonusActivityAllDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bonus_activity_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BonusActivityAllDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BonusActivityAllDataNotify)
  return false;
#undef DO_
}

void BonusActivityAllDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BonusActivityAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonus_activity_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bonus_activity_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BonusActivityAllDataNotify)
}

::google::protobuf::uint8* BonusActivityAllDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BonusActivityAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonus_activity_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bonus_activity_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BonusActivityAllDataNotify)
  return target;
}

size_t BonusActivityAllDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BonusActivityAllDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bonus_activity_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bonus_activity_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BonusActivityAllDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BonusActivityAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BonusActivityAllDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BonusActivityAllDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BonusActivityAllDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BonusActivityAllDataNotify)
    MergeFrom(*source);
  }
}

void BonusActivityAllDataNotify::MergeFrom(const BonusActivityAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BonusActivityAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bonus_activity_info_list_.MergeFrom(from.bonus_activity_info_list_);
}

void BonusActivityAllDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BonusActivityAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BonusActivityAllDataNotify::CopyFrom(const BonusActivityAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BonusActivityAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BonusActivityAllDataNotify::IsInitialized() const {
  return true;
}

void BonusActivityAllDataNotify::Swap(BonusActivityAllDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BonusActivityAllDataNotify::InternalSwap(BonusActivityAllDataNotify* other) {
  using std::swap;
  bonus_activity_info_list_.InternalSwap(&other->bonus_activity_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BonusActivityAllDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BonusActivityAllDataNotify

// repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
int BonusActivityAllDataNotify::bonus_activity_info_list_size() const {
  return bonus_activity_info_list_.size();
}
void BonusActivityAllDataNotify::clear_bonus_activity_info_list() {
  bonus_activity_info_list_.Clear();
}
const ::proto::BonusActivityInfo& BonusActivityAllDataNotify::bonus_activity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Get(index);
}
::proto::BonusActivityInfo* BonusActivityAllDataNotify::mutable_bonus_activity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Mutable(index);
}
::proto::BonusActivityInfo* BonusActivityAllDataNotify::add_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_add:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
BonusActivityAllDataNotify::mutable_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return &bonus_activity_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
BonusActivityAllDataNotify::bonus_activity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BonusActivityUpdateNotify::kBonusActivityInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BonusActivityUpdateNotify::BonusActivityUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BonusActivityUpdateNotify)
}
BonusActivityUpdateNotify::BonusActivityUpdateNotify(const BonusActivityUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bonus_activity_info_list_(from.bonus_activity_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.BonusActivityUpdateNotify)
}

void BonusActivityUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

BonusActivityUpdateNotify::~BonusActivityUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.BonusActivityUpdateNotify)
  SharedDtor();
}

void BonusActivityUpdateNotify::SharedDtor() {
}

void BonusActivityUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BonusActivityUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BonusActivityUpdateNotify& BonusActivityUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

BonusActivityUpdateNotify* BonusActivityUpdateNotify::New(::google::protobuf::Arena* arena) const {
  BonusActivityUpdateNotify* n = new BonusActivityUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BonusActivityUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BonusActivityUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bonus_activity_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool BonusActivityUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BonusActivityUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bonus_activity_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BonusActivityUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BonusActivityUpdateNotify)
  return false;
#undef DO_
}

void BonusActivityUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BonusActivityUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonus_activity_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bonus_activity_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BonusActivityUpdateNotify)
}

::google::protobuf::uint8* BonusActivityUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BonusActivityUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonus_activity_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bonus_activity_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BonusActivityUpdateNotify)
  return target;
}

size_t BonusActivityUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BonusActivityUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bonus_activity_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bonus_activity_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BonusActivityUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BonusActivityUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BonusActivityUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BonusActivityUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BonusActivityUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BonusActivityUpdateNotify)
    MergeFrom(*source);
  }
}

void BonusActivityUpdateNotify::MergeFrom(const BonusActivityUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BonusActivityUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bonus_activity_info_list_.MergeFrom(from.bonus_activity_info_list_);
}

void BonusActivityUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BonusActivityUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BonusActivityUpdateNotify::CopyFrom(const BonusActivityUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BonusActivityUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BonusActivityUpdateNotify::IsInitialized() const {
  return true;
}

void BonusActivityUpdateNotify::Swap(BonusActivityUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BonusActivityUpdateNotify::InternalSwap(BonusActivityUpdateNotify* other) {
  using std::swap;
  bonus_activity_info_list_.InternalSwap(&other->bonus_activity_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BonusActivityUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BonusActivityUpdateNotify

// repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
int BonusActivityUpdateNotify::bonus_activity_info_list_size() const {
  return bonus_activity_info_list_.size();
}
void BonusActivityUpdateNotify::clear_bonus_activity_info_list() {
  bonus_activity_info_list_.Clear();
}
const ::proto::BonusActivityInfo& BonusActivityUpdateNotify::bonus_activity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Get(index);
}
::proto::BonusActivityInfo* BonusActivityUpdateNotify::mutable_bonus_activity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Mutable(index);
}
::proto::BonusActivityInfo* BonusActivityUpdateNotify::add_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_add:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
BonusActivityUpdateNotify::mutable_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return &bonus_activity_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
BonusActivityUpdateNotify::bonus_activity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BonusActivityInfoReq::BonusActivityInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BonusActivityInfoReq)
}
BonusActivityInfoReq::BonusActivityInfoReq(const BonusActivityInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.BonusActivityInfoReq)
}

void BonusActivityInfoReq::SharedCtor() {
  _cached_size_ = 0;
}

BonusActivityInfoReq::~BonusActivityInfoReq() {
  // @@protoc_insertion_point(destructor:proto.BonusActivityInfoReq)
  SharedDtor();
}

void BonusActivityInfoReq::SharedDtor() {
}

void BonusActivityInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BonusActivityInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BonusActivityInfoReq& BonusActivityInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

BonusActivityInfoReq* BonusActivityInfoReq::New(::google::protobuf::Arena* arena) const {
  BonusActivityInfoReq* n = new BonusActivityInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BonusActivityInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BonusActivityInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BonusActivityInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BonusActivityInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BonusActivityInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BonusActivityInfoReq)
  return false;
#undef DO_
}

void BonusActivityInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BonusActivityInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BonusActivityInfoReq)
}

::google::protobuf::uint8* BonusActivityInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BonusActivityInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BonusActivityInfoReq)
  return target;
}

size_t BonusActivityInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BonusActivityInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BonusActivityInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BonusActivityInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BonusActivityInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BonusActivityInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BonusActivityInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BonusActivityInfoReq)
    MergeFrom(*source);
  }
}

void BonusActivityInfoReq::MergeFrom(const BonusActivityInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BonusActivityInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BonusActivityInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BonusActivityInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BonusActivityInfoReq::CopyFrom(const BonusActivityInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BonusActivityInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BonusActivityInfoReq::IsInitialized() const {
  return true;
}

void BonusActivityInfoReq::Swap(BonusActivityInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BonusActivityInfoReq::InternalSwap(BonusActivityInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BonusActivityInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BonusActivityInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BonusActivityInfoRsp::kRetcodeFieldNumber;
const int BonusActivityInfoRsp::kBonusActivityInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BonusActivityInfoRsp::BonusActivityInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BonusActivityInfoRsp)
}
BonusActivityInfoRsp::BonusActivityInfoRsp(const BonusActivityInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bonus_activity_info_list_(from.bonus_activity_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.BonusActivityInfoRsp)
}

void BonusActivityInfoRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

BonusActivityInfoRsp::~BonusActivityInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.BonusActivityInfoRsp)
  SharedDtor();
}

void BonusActivityInfoRsp::SharedDtor() {
}

void BonusActivityInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BonusActivityInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BonusActivityInfoRsp& BonusActivityInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

BonusActivityInfoRsp* BonusActivityInfoRsp::New(::google::protobuf::Arena* arena) const {
  BonusActivityInfoRsp* n = new BonusActivityInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BonusActivityInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BonusActivityInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bonus_activity_info_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool BonusActivityInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BonusActivityInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bonus_activity_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BonusActivityInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BonusActivityInfoRsp)
  return false;
#undef DO_
}

void BonusActivityInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BonusActivityInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonus_activity_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bonus_activity_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BonusActivityInfoRsp)
}

::google::protobuf::uint8* BonusActivityInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BonusActivityInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonus_activity_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->bonus_activity_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BonusActivityInfoRsp)
  return target;
}

size_t BonusActivityInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BonusActivityInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->bonus_activity_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bonus_activity_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BonusActivityInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BonusActivityInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BonusActivityInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BonusActivityInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BonusActivityInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BonusActivityInfoRsp)
    MergeFrom(*source);
  }
}

void BonusActivityInfoRsp::MergeFrom(const BonusActivityInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BonusActivityInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bonus_activity_info_list_.MergeFrom(from.bonus_activity_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void BonusActivityInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BonusActivityInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BonusActivityInfoRsp::CopyFrom(const BonusActivityInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BonusActivityInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BonusActivityInfoRsp::IsInitialized() const {
  return true;
}

void BonusActivityInfoRsp::Swap(BonusActivityInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BonusActivityInfoRsp::InternalSwap(BonusActivityInfoRsp* other) {
  using std::swap;
  bonus_activity_info_list_.InternalSwap(&other->bonus_activity_info_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BonusActivityInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BonusActivityInfoRsp

// int32 retcode = 1;
void BonusActivityInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 BonusActivityInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfoRsp.retcode)
  return retcode_;
}
void BonusActivityInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BonusActivityInfoRsp.retcode)
}

// repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
int BonusActivityInfoRsp::bonus_activity_info_list_size() const {
  return bonus_activity_info_list_.size();
}
void BonusActivityInfoRsp::clear_bonus_activity_info_list() {
  bonus_activity_info_list_.Clear();
}
const ::proto::BonusActivityInfo& BonusActivityInfoRsp::bonus_activity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_.Get(index);
}
::proto::BonusActivityInfo* BonusActivityInfoRsp::mutable_bonus_activity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_.Mutable(index);
}
::proto::BonusActivityInfo* BonusActivityInfoRsp::add_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_add:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
BonusActivityInfoRsp::mutable_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return &bonus_activity_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
BonusActivityInfoRsp::bonus_activity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBonusActivityRewardReq::kBonusActivityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBonusActivityRewardReq::GetBonusActivityRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBonusActivityRewardReq)
}
GetBonusActivityRewardReq::GetBonusActivityRewardReq(const GetBonusActivityRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bonus_activity_id_ = from.bonus_activity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetBonusActivityRewardReq)
}

void GetBonusActivityRewardReq::SharedCtor() {
  bonus_activity_id_ = 0u;
  _cached_size_ = 0;
}

GetBonusActivityRewardReq::~GetBonusActivityRewardReq() {
  // @@protoc_insertion_point(destructor:proto.GetBonusActivityRewardReq)
  SharedDtor();
}

void GetBonusActivityRewardReq::SharedDtor() {
}

void GetBonusActivityRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBonusActivityRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBonusActivityRewardReq& GetBonusActivityRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBonusActivityRewardReq* GetBonusActivityRewardReq::New(::google::protobuf::Arena* arena) const {
  GetBonusActivityRewardReq* n = new GetBonusActivityRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBonusActivityRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBonusActivityRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bonus_activity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetBonusActivityRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBonusActivityRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bonus_activity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_activity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBonusActivityRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBonusActivityRewardReq)
  return false;
#undef DO_
}

void GetBonusActivityRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBonusActivityRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bonus_activity_id = 1;
  if (this->bonus_activity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bonus_activity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBonusActivityRewardReq)
}

::google::protobuf::uint8* GetBonusActivityRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBonusActivityRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bonus_activity_id = 1;
  if (this->bonus_activity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bonus_activity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBonusActivityRewardReq)
  return target;
}

size_t GetBonusActivityRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBonusActivityRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bonus_activity_id = 1;
  if (this->bonus_activity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bonus_activity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBonusActivityRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBonusActivityRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBonusActivityRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBonusActivityRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBonusActivityRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBonusActivityRewardReq)
    MergeFrom(*source);
  }
}

void GetBonusActivityRewardReq::MergeFrom(const GetBonusActivityRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBonusActivityRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bonus_activity_id() != 0) {
    set_bonus_activity_id(from.bonus_activity_id());
  }
}

void GetBonusActivityRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBonusActivityRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBonusActivityRewardReq::CopyFrom(const GetBonusActivityRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBonusActivityRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBonusActivityRewardReq::IsInitialized() const {
  return true;
}

void GetBonusActivityRewardReq::Swap(GetBonusActivityRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBonusActivityRewardReq::InternalSwap(GetBonusActivityRewardReq* other) {
  using std::swap;
  swap(bonus_activity_id_, other->bonus_activity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBonusActivityRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBonusActivityRewardReq

// uint32 bonus_activity_id = 1;
void GetBonusActivityRewardReq::clear_bonus_activity_id() {
  bonus_activity_id_ = 0u;
}
::google::protobuf::uint32 GetBonusActivityRewardReq::bonus_activity_id() const {
  // @@protoc_insertion_point(field_get:proto.GetBonusActivityRewardReq.bonus_activity_id)
  return bonus_activity_id_;
}
void GetBonusActivityRewardReq::set_bonus_activity_id(::google::protobuf::uint32 value) {
  
  bonus_activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBonusActivityRewardReq.bonus_activity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBonusActivityRewardRsp::kRetcodeFieldNumber;
const int GetBonusActivityRewardRsp::kBonusActivityInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBonusActivityRewardRsp::GetBonusActivityRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBonusActivityRewardRsp)
}
GetBonusActivityRewardRsp::GetBonusActivityRewardRsp(const GetBonusActivityRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bonus_activity_info_list()) {
    bonus_activity_info_list_ = new ::proto::BonusActivityInfo(*from.bonus_activity_info_list_);
  } else {
    bonus_activity_info_list_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetBonusActivityRewardRsp)
}

void GetBonusActivityRewardRsp::SharedCtor() {
  ::memset(&bonus_activity_info_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&bonus_activity_info_list_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetBonusActivityRewardRsp::~GetBonusActivityRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.GetBonusActivityRewardRsp)
  SharedDtor();
}

void GetBonusActivityRewardRsp::SharedDtor() {
  if (this != internal_default_instance()) delete bonus_activity_info_list_;
}

void GetBonusActivityRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBonusActivityRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBonusActivityRewardRsp& GetBonusActivityRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBonusActivityRewardRsp* GetBonusActivityRewardRsp::New(::google::protobuf::Arena* arena) const {
  GetBonusActivityRewardRsp* n = new GetBonusActivityRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBonusActivityRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBonusActivityRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bonus_activity_info_list_ != NULL) {
    delete bonus_activity_info_list_;
  }
  bonus_activity_info_list_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetBonusActivityRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBonusActivityRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BonusActivityInfo bonus_activity_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bonus_activity_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBonusActivityRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBonusActivityRewardRsp)
  return false;
#undef DO_
}

void GetBonusActivityRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBonusActivityRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.BonusActivityInfo bonus_activity_info_list = 2;
  if (this->has_bonus_activity_info_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bonus_activity_info_list_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBonusActivityRewardRsp)
}

::google::protobuf::uint8* GetBonusActivityRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBonusActivityRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.BonusActivityInfo bonus_activity_info_list = 2;
  if (this->has_bonus_activity_info_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bonus_activity_info_list_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBonusActivityRewardRsp)
  return target;
}

size_t GetBonusActivityRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBonusActivityRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BonusActivityInfo bonus_activity_info_list = 2;
  if (this->has_bonus_activity_info_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bonus_activity_info_list_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBonusActivityRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBonusActivityRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBonusActivityRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBonusActivityRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBonusActivityRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBonusActivityRewardRsp)
    MergeFrom(*source);
  }
}

void GetBonusActivityRewardRsp::MergeFrom(const GetBonusActivityRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBonusActivityRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bonus_activity_info_list()) {
    mutable_bonus_activity_info_list()->::proto::BonusActivityInfo::MergeFrom(from.bonus_activity_info_list());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetBonusActivityRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBonusActivityRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBonusActivityRewardRsp::CopyFrom(const GetBonusActivityRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBonusActivityRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBonusActivityRewardRsp::IsInitialized() const {
  return true;
}

void GetBonusActivityRewardRsp::Swap(GetBonusActivityRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBonusActivityRewardRsp::InternalSwap(GetBonusActivityRewardRsp* other) {
  using std::swap;
  swap(bonus_activity_info_list_, other->bonus_activity_info_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBonusActivityRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsign_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsign_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBonusActivityRewardRsp

// int32 retcode = 1;
void GetBonusActivityRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetBonusActivityRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBonusActivityRewardRsp.retcode)
  return retcode_;
}
void GetBonusActivityRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBonusActivityRewardRsp.retcode)
}

// .proto.BonusActivityInfo bonus_activity_info_list = 2;
bool GetBonusActivityRewardRsp::has_bonus_activity_info_list() const {
  return this != internal_default_instance() && bonus_activity_info_list_ != NULL;
}
void GetBonusActivityRewardRsp::clear_bonus_activity_info_list() {
  if (GetArenaNoVirtual() == NULL && bonus_activity_info_list_ != NULL) delete bonus_activity_info_list_;
  bonus_activity_info_list_ = NULL;
}
const ::proto::BonusActivityInfo& GetBonusActivityRewardRsp::bonus_activity_info_list() const {
  const ::proto::BonusActivityInfo* p = bonus_activity_info_list_;
  // @@protoc_insertion_point(field_get:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BonusActivityInfo*>(
      &::proto::_BonusActivityInfo_default_instance_);
}
::proto::BonusActivityInfo* GetBonusActivityRewardRsp::mutable_bonus_activity_info_list() {
  
  if (bonus_activity_info_list_ == NULL) {
    bonus_activity_info_list_ = new ::proto::BonusActivityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
  return bonus_activity_info_list_;
}
::proto::BonusActivityInfo* GetBonusActivityRewardRsp::release_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_release:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
  
  ::proto::BonusActivityInfo* temp = bonus_activity_info_list_;
  bonus_activity_info_list_ = NULL;
  return temp;
}
void GetBonusActivityRewardRsp::set_allocated_bonus_activity_info_list(::proto::BonusActivityInfo* bonus_activity_info_list) {
  delete bonus_activity_info_list_;
  bonus_activity_info_list_ = bonus_activity_info_list;
  if (bonus_activity_info_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
