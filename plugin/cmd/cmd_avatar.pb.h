// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_avatar.proto

#ifndef PROTOBUF_cmd_2fcmd_5favatar_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5favatar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AvatarAddNotify;
class AvatarAddNotifyDefaultTypeInternal;
extern AvatarAddNotifyDefaultTypeInternal _AvatarAddNotify_default_instance_;
class AvatarChangeElementTypeReq;
class AvatarChangeElementTypeReqDefaultTypeInternal;
extern AvatarChangeElementTypeReqDefaultTypeInternal _AvatarChangeElementTypeReq_default_instance_;
class AvatarChangeElementTypeRsp;
class AvatarChangeElementTypeRspDefaultTypeInternal;
extern AvatarChangeElementTypeRspDefaultTypeInternal _AvatarChangeElementTypeRsp_default_instance_;
class AvatarDataNotify;
class AvatarDataNotifyDefaultTypeInternal;
extern AvatarDataNotifyDefaultTypeInternal _AvatarDataNotify_default_instance_;
class AvatarDataNotify_AvatarTeamMapEntry;
class AvatarDataNotify_AvatarTeamMapEntryDefaultTypeInternal;
extern AvatarDataNotify_AvatarTeamMapEntryDefaultTypeInternal _AvatarDataNotify_AvatarTeamMapEntry_default_instance_;
class AvatarDelNotify;
class AvatarDelNotifyDefaultTypeInternal;
extern AvatarDelNotifyDefaultTypeInternal _AvatarDelNotify_default_instance_;
class AvatarDieAnimationEndReq;
class AvatarDieAnimationEndReqDefaultTypeInternal;
extern AvatarDieAnimationEndReqDefaultTypeInternal _AvatarDieAnimationEndReq_default_instance_;
class AvatarDieAnimationEndRsp;
class AvatarDieAnimationEndRspDefaultTypeInternal;
extern AvatarDieAnimationEndRspDefaultTypeInternal _AvatarDieAnimationEndRsp_default_instance_;
class AvatarExpeditionAllDataReq;
class AvatarExpeditionAllDataReqDefaultTypeInternal;
extern AvatarExpeditionAllDataReqDefaultTypeInternal _AvatarExpeditionAllDataReq_default_instance_;
class AvatarExpeditionAllDataRsp;
class AvatarExpeditionAllDataRspDefaultTypeInternal;
extern AvatarExpeditionAllDataRspDefaultTypeInternal _AvatarExpeditionAllDataRsp_default_instance_;
class AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry;
class AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntryDefaultTypeInternal;
extern AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntryDefaultTypeInternal _AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionCallBackReq;
class AvatarExpeditionCallBackReqDefaultTypeInternal;
extern AvatarExpeditionCallBackReqDefaultTypeInternal _AvatarExpeditionCallBackReq_default_instance_;
class AvatarExpeditionCallBackRsp;
class AvatarExpeditionCallBackRspDefaultTypeInternal;
extern AvatarExpeditionCallBackRspDefaultTypeInternal _AvatarExpeditionCallBackRsp_default_instance_;
class AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry;
class AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntryDefaultTypeInternal;
extern AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntryDefaultTypeInternal _AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionDataNotify;
class AvatarExpeditionDataNotifyDefaultTypeInternal;
extern AvatarExpeditionDataNotifyDefaultTypeInternal _AvatarExpeditionDataNotify_default_instance_;
class AvatarExpeditionDataNotify_ExpeditionInfoMapEntry;
class AvatarExpeditionDataNotify_ExpeditionInfoMapEntryDefaultTypeInternal;
extern AvatarExpeditionDataNotify_ExpeditionInfoMapEntryDefaultTypeInternal _AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionGetRewardReq;
class AvatarExpeditionGetRewardReqDefaultTypeInternal;
extern AvatarExpeditionGetRewardReqDefaultTypeInternal _AvatarExpeditionGetRewardReq_default_instance_;
class AvatarExpeditionGetRewardRsp;
class AvatarExpeditionGetRewardRspDefaultTypeInternal;
extern AvatarExpeditionGetRewardRspDefaultTypeInternal _AvatarExpeditionGetRewardRsp_default_instance_;
class AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry;
class AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntryDefaultTypeInternal;
extern AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntryDefaultTypeInternal _AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionStartReq;
class AvatarExpeditionStartReqDefaultTypeInternal;
extern AvatarExpeditionStartReqDefaultTypeInternal _AvatarExpeditionStartReq_default_instance_;
class AvatarExpeditionStartRsp;
class AvatarExpeditionStartRspDefaultTypeInternal;
extern AvatarExpeditionStartRspDefaultTypeInternal _AvatarExpeditionStartRsp_default_instance_;
class AvatarExpeditionStartRsp_ExpeditionInfoMapEntry;
class AvatarExpeditionStartRsp_ExpeditionInfoMapEntryDefaultTypeInternal;
extern AvatarExpeditionStartRsp_ExpeditionInfoMapEntryDefaultTypeInternal _AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarFetterDataNotify;
class AvatarFetterDataNotifyDefaultTypeInternal;
extern AvatarFetterDataNotifyDefaultTypeInternal _AvatarFetterDataNotify_default_instance_;
class AvatarFetterDataNotify_FetterInfoMapEntry;
class AvatarFetterDataNotify_FetterInfoMapEntryDefaultTypeInternal;
extern AvatarFetterDataNotify_FetterInfoMapEntryDefaultTypeInternal _AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_;
class AvatarPromoteReq;
class AvatarPromoteReqDefaultTypeInternal;
extern AvatarPromoteReqDefaultTypeInternal _AvatarPromoteReq_default_instance_;
class AvatarPromoteRsp;
class AvatarPromoteRspDefaultTypeInternal;
extern AvatarPromoteRspDefaultTypeInternal _AvatarPromoteRsp_default_instance_;
class AvatarTeam;
class AvatarTeamDefaultTypeInternal;
extern AvatarTeamDefaultTypeInternal _AvatarTeam_default_instance_;
class AvatarTeamUpdateNotify;
class AvatarTeamUpdateNotifyDefaultTypeInternal;
extern AvatarTeamUpdateNotifyDefaultTypeInternal _AvatarTeamUpdateNotify_default_instance_;
class AvatarTeamUpdateNotify_AvatarTeamMapEntry;
class AvatarTeamUpdateNotify_AvatarTeamMapEntryDefaultTypeInternal;
extern AvatarTeamUpdateNotify_AvatarTeamMapEntryDefaultTypeInternal _AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_;
class AvatarUpgradeReq;
class AvatarUpgradeReqDefaultTypeInternal;
extern AvatarUpgradeReqDefaultTypeInternal _AvatarUpgradeReq_default_instance_;
class AvatarUpgradeRsp;
class AvatarUpgradeRspDefaultTypeInternal;
extern AvatarUpgradeRspDefaultTypeInternal _AvatarUpgradeRsp_default_instance_;
class AvatarUpgradeRsp_CurFightPropMapEntry;
class AvatarUpgradeRsp_CurFightPropMapEntryDefaultTypeInternal;
extern AvatarUpgradeRsp_CurFightPropMapEntryDefaultTypeInternal _AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_;
class AvatarUpgradeRsp_OldFightPropMapEntry;
class AvatarUpgradeRsp_OldFightPropMapEntryDefaultTypeInternal;
extern AvatarUpgradeRsp_OldFightPropMapEntryDefaultTypeInternal _AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_;
class ChangeAvatarReq;
class ChangeAvatarReqDefaultTypeInternal;
extern ChangeAvatarReqDefaultTypeInternal _ChangeAvatarReq_default_instance_;
class ChangeAvatarRsp;
class ChangeAvatarRspDefaultTypeInternal;
extern ChangeAvatarRspDefaultTypeInternal _ChangeAvatarRsp_default_instance_;
class ChangeMpTeamAvatarReq;
class ChangeMpTeamAvatarReqDefaultTypeInternal;
extern ChangeMpTeamAvatarReqDefaultTypeInternal _ChangeMpTeamAvatarReq_default_instance_;
class ChangeMpTeamAvatarRsp;
class ChangeMpTeamAvatarRspDefaultTypeInternal;
extern ChangeMpTeamAvatarRspDefaultTypeInternal _ChangeMpTeamAvatarRsp_default_instance_;
class ChangeTeamNameReq;
class ChangeTeamNameReqDefaultTypeInternal;
extern ChangeTeamNameReqDefaultTypeInternal _ChangeTeamNameReq_default_instance_;
class ChangeTeamNameRsp;
class ChangeTeamNameRspDefaultTypeInternal;
extern ChangeTeamNameRspDefaultTypeInternal _ChangeTeamNameRsp_default_instance_;
class ChooseCurAvatarTeamReq;
class ChooseCurAvatarTeamReqDefaultTypeInternal;
extern ChooseCurAvatarTeamReqDefaultTypeInternal _ChooseCurAvatarTeamReq_default_instance_;
class ChooseCurAvatarTeamRsp;
class ChooseCurAvatarTeamRspDefaultTypeInternal;
extern ChooseCurAvatarTeamRspDefaultTypeInternal _ChooseCurAvatarTeamRsp_default_instance_;
class FocusAvatarReq;
class FocusAvatarReqDefaultTypeInternal;
extern FocusAvatarReqDefaultTypeInternal _FocusAvatarReq_default_instance_;
class FocusAvatarRsp;
class FocusAvatarRspDefaultTypeInternal;
extern FocusAvatarRspDefaultTypeInternal _FocusAvatarRsp_default_instance_;
class MPDisplayCurAvatar;
class MPDisplayCurAvatarDefaultTypeInternal;
extern MPDisplayCurAvatarDefaultTypeInternal _MPDisplayCurAvatar_default_instance_;
class MPDisplayCurAvatar_FightPropMapEntry;
class MPDisplayCurAvatar_FightPropMapEntryDefaultTypeInternal;
extern MPDisplayCurAvatar_FightPropMapEntryDefaultTypeInternal _MPDisplayCurAvatar_FightPropMapEntry_default_instance_;
class RefreshBackgroundAvatarReq;
class RefreshBackgroundAvatarReqDefaultTypeInternal;
extern RefreshBackgroundAvatarReqDefaultTypeInternal _RefreshBackgroundAvatarReq_default_instance_;
class RefreshBackgroundAvatarRsp;
class RefreshBackgroundAvatarRspDefaultTypeInternal;
extern RefreshBackgroundAvatarRspDefaultTypeInternal _RefreshBackgroundAvatarRsp_default_instance_;
class RefreshBackgroundAvatarRsp_HpFullTimeMapEntry;
class RefreshBackgroundAvatarRsp_HpFullTimeMapEntryDefaultTypeInternal;
extern RefreshBackgroundAvatarRsp_HpFullTimeMapEntryDefaultTypeInternal _RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_;
class SceneTeamAvatar;
class SceneTeamAvatarDefaultTypeInternal;
extern SceneTeamAvatarDefaultTypeInternal _SceneTeamAvatar_default_instance_;
class SceneTeamMPDisplayCurAvatarNotify;
class SceneTeamMPDisplayCurAvatarNotifyDefaultTypeInternal;
extern SceneTeamMPDisplayCurAvatarNotifyDefaultTypeInternal _SceneTeamMPDisplayCurAvatarNotify_default_instance_;
class SceneTeamUpdateNotify;
class SceneTeamUpdateNotifyDefaultTypeInternal;
extern SceneTeamUpdateNotifyDefaultTypeInternal _SceneTeamUpdateNotify_default_instance_;
class SetUpAvatarTeamReq;
class SetUpAvatarTeamReqDefaultTypeInternal;
extern SetUpAvatarTeamReqDefaultTypeInternal _SetUpAvatarTeamReq_default_instance_;
class SetUpAvatarTeamRsp;
class SetUpAvatarTeamRspDefaultTypeInternal;
extern SetUpAvatarTeamRspDefaultTypeInternal _SetUpAvatarTeamRsp_default_instance_;
class SpringUseReq;
class SpringUseReqDefaultTypeInternal;
extern SpringUseReqDefaultTypeInternal _SpringUseReq_default_instance_;
class SpringUseRsp;
class SpringUseRspDefaultTypeInternal;
extern SpringUseRspDefaultTypeInternal _SpringUseRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5favatar_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5favatar_2eproto

enum AvatarAddNotify_CmdId {
  AvatarAddNotify_CmdId_NONE = 0,
  AvatarAddNotify_CmdId_CMD_ID = 1701,
  AvatarAddNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarAddNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarAddNotify_CmdId_AvatarAddNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarAddNotify_CmdId_AvatarAddNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarAddNotify_CmdId_IsValid(int value);
const AvatarAddNotify_CmdId AvatarAddNotify_CmdId_CmdId_MIN = AvatarAddNotify_CmdId_NONE;
const AvatarAddNotify_CmdId AvatarAddNotify_CmdId_CmdId_MAX = AvatarAddNotify_CmdId_CMD_ID;
const int AvatarAddNotify_CmdId_CmdId_ARRAYSIZE = AvatarAddNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarAddNotify_CmdId_descriptor();
inline const ::std::string& AvatarAddNotify_CmdId_Name(AvatarAddNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarAddNotify_CmdId_descriptor(), value);
}
inline bool AvatarAddNotify_CmdId_Parse(
    const ::std::string& name, AvatarAddNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarAddNotify_CmdId>(
    AvatarAddNotify_CmdId_descriptor(), name, value);
}
enum AvatarDelNotify_CmdId {
  AvatarDelNotify_CmdId_NONE = 0,
  AvatarDelNotify_CmdId_CMD_ID = 1702,
  AvatarDelNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarDelNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarDelNotify_CmdId_AvatarDelNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarDelNotify_CmdId_AvatarDelNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarDelNotify_CmdId_IsValid(int value);
const AvatarDelNotify_CmdId AvatarDelNotify_CmdId_CmdId_MIN = AvatarDelNotify_CmdId_NONE;
const AvatarDelNotify_CmdId AvatarDelNotify_CmdId_CmdId_MAX = AvatarDelNotify_CmdId_CMD_ID;
const int AvatarDelNotify_CmdId_CmdId_ARRAYSIZE = AvatarDelNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarDelNotify_CmdId_descriptor();
inline const ::std::string& AvatarDelNotify_CmdId_Name(AvatarDelNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarDelNotify_CmdId_descriptor(), value);
}
inline bool AvatarDelNotify_CmdId_Parse(
    const ::std::string& name, AvatarDelNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarDelNotify_CmdId>(
    AvatarDelNotify_CmdId_descriptor(), name, value);
}
enum SetUpAvatarTeamReq_CmdId {
  SetUpAvatarTeamReq_CmdId_NONE = 0,
  SetUpAvatarTeamReq_CmdId_CMD_ID = 1703,
  SetUpAvatarTeamReq_CmdId_ENET_CHANNEL_ID = 0,
  SetUpAvatarTeamReq_CmdId_ENET_IS_RELIABLE = 1,
  SetUpAvatarTeamReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetUpAvatarTeamReq_CmdId_SetUpAvatarTeamReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetUpAvatarTeamReq_CmdId_SetUpAvatarTeamReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetUpAvatarTeamReq_CmdId_IsValid(int value);
const SetUpAvatarTeamReq_CmdId SetUpAvatarTeamReq_CmdId_CmdId_MIN = SetUpAvatarTeamReq_CmdId_NONE;
const SetUpAvatarTeamReq_CmdId SetUpAvatarTeamReq_CmdId_CmdId_MAX = SetUpAvatarTeamReq_CmdId_CMD_ID;
const int SetUpAvatarTeamReq_CmdId_CmdId_ARRAYSIZE = SetUpAvatarTeamReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetUpAvatarTeamReq_CmdId_descriptor();
inline const ::std::string& SetUpAvatarTeamReq_CmdId_Name(SetUpAvatarTeamReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetUpAvatarTeamReq_CmdId_descriptor(), value);
}
inline bool SetUpAvatarTeamReq_CmdId_Parse(
    const ::std::string& name, SetUpAvatarTeamReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetUpAvatarTeamReq_CmdId>(
    SetUpAvatarTeamReq_CmdId_descriptor(), name, value);
}
enum SetUpAvatarTeamRsp_CmdId {
  SetUpAvatarTeamRsp_CmdId_NONE = 0,
  SetUpAvatarTeamRsp_CmdId_CMD_ID = 1704,
  SetUpAvatarTeamRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetUpAvatarTeamRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetUpAvatarTeamRsp_CmdId_SetUpAvatarTeamRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetUpAvatarTeamRsp_CmdId_SetUpAvatarTeamRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetUpAvatarTeamRsp_CmdId_IsValid(int value);
const SetUpAvatarTeamRsp_CmdId SetUpAvatarTeamRsp_CmdId_CmdId_MIN = SetUpAvatarTeamRsp_CmdId_NONE;
const SetUpAvatarTeamRsp_CmdId SetUpAvatarTeamRsp_CmdId_CmdId_MAX = SetUpAvatarTeamRsp_CmdId_CMD_ID;
const int SetUpAvatarTeamRsp_CmdId_CmdId_ARRAYSIZE = SetUpAvatarTeamRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetUpAvatarTeamRsp_CmdId_descriptor();
inline const ::std::string& SetUpAvatarTeamRsp_CmdId_Name(SetUpAvatarTeamRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetUpAvatarTeamRsp_CmdId_descriptor(), value);
}
inline bool SetUpAvatarTeamRsp_CmdId_Parse(
    const ::std::string& name, SetUpAvatarTeamRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetUpAvatarTeamRsp_CmdId>(
    SetUpAvatarTeamRsp_CmdId_descriptor(), name, value);
}
enum ChooseCurAvatarTeamReq_CmdId {
  ChooseCurAvatarTeamReq_CmdId_NONE = 0,
  ChooseCurAvatarTeamReq_CmdId_CMD_ID = 1705,
  ChooseCurAvatarTeamReq_CmdId_ENET_CHANNEL_ID = 0,
  ChooseCurAvatarTeamReq_CmdId_ENET_IS_RELIABLE = 1,
  ChooseCurAvatarTeamReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChooseCurAvatarTeamReq_CmdId_ChooseCurAvatarTeamReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChooseCurAvatarTeamReq_CmdId_ChooseCurAvatarTeamReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChooseCurAvatarTeamReq_CmdId_IsValid(int value);
const ChooseCurAvatarTeamReq_CmdId ChooseCurAvatarTeamReq_CmdId_CmdId_MIN = ChooseCurAvatarTeamReq_CmdId_NONE;
const ChooseCurAvatarTeamReq_CmdId ChooseCurAvatarTeamReq_CmdId_CmdId_MAX = ChooseCurAvatarTeamReq_CmdId_CMD_ID;
const int ChooseCurAvatarTeamReq_CmdId_CmdId_ARRAYSIZE = ChooseCurAvatarTeamReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChooseCurAvatarTeamReq_CmdId_descriptor();
inline const ::std::string& ChooseCurAvatarTeamReq_CmdId_Name(ChooseCurAvatarTeamReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChooseCurAvatarTeamReq_CmdId_descriptor(), value);
}
inline bool ChooseCurAvatarTeamReq_CmdId_Parse(
    const ::std::string& name, ChooseCurAvatarTeamReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChooseCurAvatarTeamReq_CmdId>(
    ChooseCurAvatarTeamReq_CmdId_descriptor(), name, value);
}
enum ChooseCurAvatarTeamRsp_CmdId {
  ChooseCurAvatarTeamRsp_CmdId_NONE = 0,
  ChooseCurAvatarTeamRsp_CmdId_CMD_ID = 1706,
  ChooseCurAvatarTeamRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChooseCurAvatarTeamRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChooseCurAvatarTeamRsp_CmdId_ChooseCurAvatarTeamRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChooseCurAvatarTeamRsp_CmdId_ChooseCurAvatarTeamRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChooseCurAvatarTeamRsp_CmdId_IsValid(int value);
const ChooseCurAvatarTeamRsp_CmdId ChooseCurAvatarTeamRsp_CmdId_CmdId_MIN = ChooseCurAvatarTeamRsp_CmdId_NONE;
const ChooseCurAvatarTeamRsp_CmdId ChooseCurAvatarTeamRsp_CmdId_CmdId_MAX = ChooseCurAvatarTeamRsp_CmdId_CMD_ID;
const int ChooseCurAvatarTeamRsp_CmdId_CmdId_ARRAYSIZE = ChooseCurAvatarTeamRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChooseCurAvatarTeamRsp_CmdId_descriptor();
inline const ::std::string& ChooseCurAvatarTeamRsp_CmdId_Name(ChooseCurAvatarTeamRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChooseCurAvatarTeamRsp_CmdId_descriptor(), value);
}
inline bool ChooseCurAvatarTeamRsp_CmdId_Parse(
    const ::std::string& name, ChooseCurAvatarTeamRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChooseCurAvatarTeamRsp_CmdId>(
    ChooseCurAvatarTeamRsp_CmdId_descriptor(), name, value);
}
enum ChangeAvatarReq_CmdId {
  ChangeAvatarReq_CmdId_NONE = 0,
  ChangeAvatarReq_CmdId_CMD_ID = 1707,
  ChangeAvatarReq_CmdId_ENET_CHANNEL_ID = 0,
  ChangeAvatarReq_CmdId_ENET_IS_RELIABLE = 1,
  ChangeAvatarReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChangeAvatarReq_CmdId_ChangeAvatarReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeAvatarReq_CmdId_ChangeAvatarReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeAvatarReq_CmdId_IsValid(int value);
const ChangeAvatarReq_CmdId ChangeAvatarReq_CmdId_CmdId_MIN = ChangeAvatarReq_CmdId_NONE;
const ChangeAvatarReq_CmdId ChangeAvatarReq_CmdId_CmdId_MAX = ChangeAvatarReq_CmdId_CMD_ID;
const int ChangeAvatarReq_CmdId_CmdId_ARRAYSIZE = ChangeAvatarReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeAvatarReq_CmdId_descriptor();
inline const ::std::string& ChangeAvatarReq_CmdId_Name(ChangeAvatarReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeAvatarReq_CmdId_descriptor(), value);
}
inline bool ChangeAvatarReq_CmdId_Parse(
    const ::std::string& name, ChangeAvatarReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeAvatarReq_CmdId>(
    ChangeAvatarReq_CmdId_descriptor(), name, value);
}
enum ChangeAvatarRsp_CmdId {
  ChangeAvatarRsp_CmdId_NONE = 0,
  ChangeAvatarRsp_CmdId_CMD_ID = 1708,
  ChangeAvatarRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChangeAvatarRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChangeAvatarRsp_CmdId_ChangeAvatarRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeAvatarRsp_CmdId_ChangeAvatarRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeAvatarRsp_CmdId_IsValid(int value);
const ChangeAvatarRsp_CmdId ChangeAvatarRsp_CmdId_CmdId_MIN = ChangeAvatarRsp_CmdId_NONE;
const ChangeAvatarRsp_CmdId ChangeAvatarRsp_CmdId_CmdId_MAX = ChangeAvatarRsp_CmdId_CMD_ID;
const int ChangeAvatarRsp_CmdId_CmdId_ARRAYSIZE = ChangeAvatarRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeAvatarRsp_CmdId_descriptor();
inline const ::std::string& ChangeAvatarRsp_CmdId_Name(ChangeAvatarRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeAvatarRsp_CmdId_descriptor(), value);
}
inline bool ChangeAvatarRsp_CmdId_Parse(
    const ::std::string& name, ChangeAvatarRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeAvatarRsp_CmdId>(
    ChangeAvatarRsp_CmdId_descriptor(), name, value);
}
enum AvatarPromoteReq_CmdId {
  AvatarPromoteReq_CmdId_NONE = 0,
  AvatarPromoteReq_CmdId_CMD_ID = 1709,
  AvatarPromoteReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarPromoteReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarPromoteReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarPromoteReq_CmdId_AvatarPromoteReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarPromoteReq_CmdId_AvatarPromoteReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarPromoteReq_CmdId_IsValid(int value);
const AvatarPromoteReq_CmdId AvatarPromoteReq_CmdId_CmdId_MIN = AvatarPromoteReq_CmdId_NONE;
const AvatarPromoteReq_CmdId AvatarPromoteReq_CmdId_CmdId_MAX = AvatarPromoteReq_CmdId_CMD_ID;
const int AvatarPromoteReq_CmdId_CmdId_ARRAYSIZE = AvatarPromoteReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarPromoteReq_CmdId_descriptor();
inline const ::std::string& AvatarPromoteReq_CmdId_Name(AvatarPromoteReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarPromoteReq_CmdId_descriptor(), value);
}
inline bool AvatarPromoteReq_CmdId_Parse(
    const ::std::string& name, AvatarPromoteReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarPromoteReq_CmdId>(
    AvatarPromoteReq_CmdId_descriptor(), name, value);
}
enum AvatarPromoteRsp_CmdId {
  AvatarPromoteRsp_CmdId_NONE = 0,
  AvatarPromoteRsp_CmdId_CMD_ID = 1710,
  AvatarPromoteRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarPromoteRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarPromoteRsp_CmdId_AvatarPromoteRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarPromoteRsp_CmdId_AvatarPromoteRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarPromoteRsp_CmdId_IsValid(int value);
const AvatarPromoteRsp_CmdId AvatarPromoteRsp_CmdId_CmdId_MIN = AvatarPromoteRsp_CmdId_NONE;
const AvatarPromoteRsp_CmdId AvatarPromoteRsp_CmdId_CmdId_MAX = AvatarPromoteRsp_CmdId_CMD_ID;
const int AvatarPromoteRsp_CmdId_CmdId_ARRAYSIZE = AvatarPromoteRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarPromoteRsp_CmdId_descriptor();
inline const ::std::string& AvatarPromoteRsp_CmdId_Name(AvatarPromoteRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarPromoteRsp_CmdId_descriptor(), value);
}
inline bool AvatarPromoteRsp_CmdId_Parse(
    const ::std::string& name, AvatarPromoteRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarPromoteRsp_CmdId>(
    AvatarPromoteRsp_CmdId_descriptor(), name, value);
}
enum SpringUseReq_CmdId {
  SpringUseReq_CmdId_NONE = 0,
  SpringUseReq_CmdId_CMD_ID = 1711,
  SpringUseReq_CmdId_ENET_CHANNEL_ID = 0,
  SpringUseReq_CmdId_ENET_IS_RELIABLE = 1,
  SpringUseReq_CmdId_IS_ALLOW_CLIENT = 1,
  SpringUseReq_CmdId_SpringUseReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SpringUseReq_CmdId_SpringUseReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SpringUseReq_CmdId_IsValid(int value);
const SpringUseReq_CmdId SpringUseReq_CmdId_CmdId_MIN = SpringUseReq_CmdId_NONE;
const SpringUseReq_CmdId SpringUseReq_CmdId_CmdId_MAX = SpringUseReq_CmdId_CMD_ID;
const int SpringUseReq_CmdId_CmdId_ARRAYSIZE = SpringUseReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpringUseReq_CmdId_descriptor();
inline const ::std::string& SpringUseReq_CmdId_Name(SpringUseReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpringUseReq_CmdId_descriptor(), value);
}
inline bool SpringUseReq_CmdId_Parse(
    const ::std::string& name, SpringUseReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpringUseReq_CmdId>(
    SpringUseReq_CmdId_descriptor(), name, value);
}
enum SpringUseRsp_CmdId {
  SpringUseRsp_CmdId_NONE = 0,
  SpringUseRsp_CmdId_CMD_ID = 1712,
  SpringUseRsp_CmdId_ENET_CHANNEL_ID = 0,
  SpringUseRsp_CmdId_ENET_IS_RELIABLE = 1,
  SpringUseRsp_CmdId_SpringUseRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SpringUseRsp_CmdId_SpringUseRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SpringUseRsp_CmdId_IsValid(int value);
const SpringUseRsp_CmdId SpringUseRsp_CmdId_CmdId_MIN = SpringUseRsp_CmdId_NONE;
const SpringUseRsp_CmdId SpringUseRsp_CmdId_CmdId_MAX = SpringUseRsp_CmdId_CMD_ID;
const int SpringUseRsp_CmdId_CmdId_ARRAYSIZE = SpringUseRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpringUseRsp_CmdId_descriptor();
inline const ::std::string& SpringUseRsp_CmdId_Name(SpringUseRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpringUseRsp_CmdId_descriptor(), value);
}
inline bool SpringUseRsp_CmdId_Parse(
    const ::std::string& name, SpringUseRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpringUseRsp_CmdId>(
    SpringUseRsp_CmdId_descriptor(), name, value);
}
enum RefreshBackgroundAvatarReq_CmdId {
  RefreshBackgroundAvatarReq_CmdId_NONE = 0,
  RefreshBackgroundAvatarReq_CmdId_CMD_ID = 1713,
  RefreshBackgroundAvatarReq_CmdId_ENET_CHANNEL_ID = 0,
  RefreshBackgroundAvatarReq_CmdId_ENET_IS_RELIABLE = 1,
  RefreshBackgroundAvatarReq_CmdId_IS_ALLOW_CLIENT = 1,
  RefreshBackgroundAvatarReq_CmdId_RefreshBackgroundAvatarReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RefreshBackgroundAvatarReq_CmdId_RefreshBackgroundAvatarReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RefreshBackgroundAvatarReq_CmdId_IsValid(int value);
const RefreshBackgroundAvatarReq_CmdId RefreshBackgroundAvatarReq_CmdId_CmdId_MIN = RefreshBackgroundAvatarReq_CmdId_NONE;
const RefreshBackgroundAvatarReq_CmdId RefreshBackgroundAvatarReq_CmdId_CmdId_MAX = RefreshBackgroundAvatarReq_CmdId_CMD_ID;
const int RefreshBackgroundAvatarReq_CmdId_CmdId_ARRAYSIZE = RefreshBackgroundAvatarReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RefreshBackgroundAvatarReq_CmdId_descriptor();
inline const ::std::string& RefreshBackgroundAvatarReq_CmdId_Name(RefreshBackgroundAvatarReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RefreshBackgroundAvatarReq_CmdId_descriptor(), value);
}
inline bool RefreshBackgroundAvatarReq_CmdId_Parse(
    const ::std::string& name, RefreshBackgroundAvatarReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RefreshBackgroundAvatarReq_CmdId>(
    RefreshBackgroundAvatarReq_CmdId_descriptor(), name, value);
}
enum RefreshBackgroundAvatarRsp_CmdId {
  RefreshBackgroundAvatarRsp_CmdId_NONE = 0,
  RefreshBackgroundAvatarRsp_CmdId_CMD_ID = 1714,
  RefreshBackgroundAvatarRsp_CmdId_ENET_CHANNEL_ID = 0,
  RefreshBackgroundAvatarRsp_CmdId_ENET_IS_RELIABLE = 1,
  RefreshBackgroundAvatarRsp_CmdId_RefreshBackgroundAvatarRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RefreshBackgroundAvatarRsp_CmdId_RefreshBackgroundAvatarRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RefreshBackgroundAvatarRsp_CmdId_IsValid(int value);
const RefreshBackgroundAvatarRsp_CmdId RefreshBackgroundAvatarRsp_CmdId_CmdId_MIN = RefreshBackgroundAvatarRsp_CmdId_NONE;
const RefreshBackgroundAvatarRsp_CmdId RefreshBackgroundAvatarRsp_CmdId_CmdId_MAX = RefreshBackgroundAvatarRsp_CmdId_CMD_ID;
const int RefreshBackgroundAvatarRsp_CmdId_CmdId_ARRAYSIZE = RefreshBackgroundAvatarRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RefreshBackgroundAvatarRsp_CmdId_descriptor();
inline const ::std::string& RefreshBackgroundAvatarRsp_CmdId_Name(RefreshBackgroundAvatarRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RefreshBackgroundAvatarRsp_CmdId_descriptor(), value);
}
inline bool RefreshBackgroundAvatarRsp_CmdId_Parse(
    const ::std::string& name, RefreshBackgroundAvatarRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RefreshBackgroundAvatarRsp_CmdId>(
    RefreshBackgroundAvatarRsp_CmdId_descriptor(), name, value);
}
enum AvatarTeamUpdateNotify_CmdId {
  AvatarTeamUpdateNotify_CmdId_NONE = 0,
  AvatarTeamUpdateNotify_CmdId_CMD_ID = 1715,
  AvatarTeamUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarTeamUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarTeamUpdateNotify_CmdId_AvatarTeamUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarTeamUpdateNotify_CmdId_AvatarTeamUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarTeamUpdateNotify_CmdId_IsValid(int value);
const AvatarTeamUpdateNotify_CmdId AvatarTeamUpdateNotify_CmdId_CmdId_MIN = AvatarTeamUpdateNotify_CmdId_NONE;
const AvatarTeamUpdateNotify_CmdId AvatarTeamUpdateNotify_CmdId_CmdId_MAX = AvatarTeamUpdateNotify_CmdId_CMD_ID;
const int AvatarTeamUpdateNotify_CmdId_CmdId_ARRAYSIZE = AvatarTeamUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarTeamUpdateNotify_CmdId_descriptor();
inline const ::std::string& AvatarTeamUpdateNotify_CmdId_Name(AvatarTeamUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarTeamUpdateNotify_CmdId_descriptor(), value);
}
inline bool AvatarTeamUpdateNotify_CmdId_Parse(
    const ::std::string& name, AvatarTeamUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarTeamUpdateNotify_CmdId>(
    AvatarTeamUpdateNotify_CmdId_descriptor(), name, value);
}
enum AvatarDataNotify_CmdId {
  AvatarDataNotify_CmdId_NONE = 0,
  AvatarDataNotify_CmdId_CMD_ID = 1716,
  AvatarDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarDataNotify_CmdId_AvatarDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarDataNotify_CmdId_AvatarDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarDataNotify_CmdId_IsValid(int value);
const AvatarDataNotify_CmdId AvatarDataNotify_CmdId_CmdId_MIN = AvatarDataNotify_CmdId_NONE;
const AvatarDataNotify_CmdId AvatarDataNotify_CmdId_CmdId_MAX = AvatarDataNotify_CmdId_CMD_ID;
const int AvatarDataNotify_CmdId_CmdId_ARRAYSIZE = AvatarDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarDataNotify_CmdId_descriptor();
inline const ::std::string& AvatarDataNotify_CmdId_Name(AvatarDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarDataNotify_CmdId_descriptor(), value);
}
inline bool AvatarDataNotify_CmdId_Parse(
    const ::std::string& name, AvatarDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarDataNotify_CmdId>(
    AvatarDataNotify_CmdId_descriptor(), name, value);
}
enum AvatarUpgradeReq_CmdId {
  AvatarUpgradeReq_CmdId_NONE = 0,
  AvatarUpgradeReq_CmdId_CMD_ID = 1717,
  AvatarUpgradeReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarUpgradeReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarUpgradeReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarUpgradeReq_CmdId_AvatarUpgradeReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarUpgradeReq_CmdId_AvatarUpgradeReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarUpgradeReq_CmdId_IsValid(int value);
const AvatarUpgradeReq_CmdId AvatarUpgradeReq_CmdId_CmdId_MIN = AvatarUpgradeReq_CmdId_NONE;
const AvatarUpgradeReq_CmdId AvatarUpgradeReq_CmdId_CmdId_MAX = AvatarUpgradeReq_CmdId_CMD_ID;
const int AvatarUpgradeReq_CmdId_CmdId_ARRAYSIZE = AvatarUpgradeReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarUpgradeReq_CmdId_descriptor();
inline const ::std::string& AvatarUpgradeReq_CmdId_Name(AvatarUpgradeReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarUpgradeReq_CmdId_descriptor(), value);
}
inline bool AvatarUpgradeReq_CmdId_Parse(
    const ::std::string& name, AvatarUpgradeReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarUpgradeReq_CmdId>(
    AvatarUpgradeReq_CmdId_descriptor(), name, value);
}
enum AvatarUpgradeRsp_CmdId {
  AvatarUpgradeRsp_CmdId_NONE = 0,
  AvatarUpgradeRsp_CmdId_CMD_ID = 1718,
  AvatarUpgradeRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarUpgradeRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarUpgradeRsp_CmdId_AvatarUpgradeRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarUpgradeRsp_CmdId_AvatarUpgradeRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarUpgradeRsp_CmdId_IsValid(int value);
const AvatarUpgradeRsp_CmdId AvatarUpgradeRsp_CmdId_CmdId_MIN = AvatarUpgradeRsp_CmdId_NONE;
const AvatarUpgradeRsp_CmdId AvatarUpgradeRsp_CmdId_CmdId_MAX = AvatarUpgradeRsp_CmdId_CMD_ID;
const int AvatarUpgradeRsp_CmdId_CmdId_ARRAYSIZE = AvatarUpgradeRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarUpgradeRsp_CmdId_descriptor();
inline const ::std::string& AvatarUpgradeRsp_CmdId_Name(AvatarUpgradeRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarUpgradeRsp_CmdId_descriptor(), value);
}
inline bool AvatarUpgradeRsp_CmdId_Parse(
    const ::std::string& name, AvatarUpgradeRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarUpgradeRsp_CmdId>(
    AvatarUpgradeRsp_CmdId_descriptor(), name, value);
}
enum AvatarDieAnimationEndReq_CmdId {
  AvatarDieAnimationEndReq_CmdId_NONE = 0,
  AvatarDieAnimationEndReq_CmdId_CMD_ID = 1719,
  AvatarDieAnimationEndReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarDieAnimationEndReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarDieAnimationEndReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarDieAnimationEndReq_CmdId_AvatarDieAnimationEndReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarDieAnimationEndReq_CmdId_AvatarDieAnimationEndReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarDieAnimationEndReq_CmdId_IsValid(int value);
const AvatarDieAnimationEndReq_CmdId AvatarDieAnimationEndReq_CmdId_CmdId_MIN = AvatarDieAnimationEndReq_CmdId_NONE;
const AvatarDieAnimationEndReq_CmdId AvatarDieAnimationEndReq_CmdId_CmdId_MAX = AvatarDieAnimationEndReq_CmdId_CMD_ID;
const int AvatarDieAnimationEndReq_CmdId_CmdId_ARRAYSIZE = AvatarDieAnimationEndReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarDieAnimationEndReq_CmdId_descriptor();
inline const ::std::string& AvatarDieAnimationEndReq_CmdId_Name(AvatarDieAnimationEndReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarDieAnimationEndReq_CmdId_descriptor(), value);
}
inline bool AvatarDieAnimationEndReq_CmdId_Parse(
    const ::std::string& name, AvatarDieAnimationEndReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarDieAnimationEndReq_CmdId>(
    AvatarDieAnimationEndReq_CmdId_descriptor(), name, value);
}
enum AvatarDieAnimationEndRsp_CmdId {
  AvatarDieAnimationEndRsp_CmdId_NONE = 0,
  AvatarDieAnimationEndRsp_CmdId_CMD_ID = 1720,
  AvatarDieAnimationEndRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarDieAnimationEndRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarDieAnimationEndRsp_CmdId_AvatarDieAnimationEndRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarDieAnimationEndRsp_CmdId_AvatarDieAnimationEndRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarDieAnimationEndRsp_CmdId_IsValid(int value);
const AvatarDieAnimationEndRsp_CmdId AvatarDieAnimationEndRsp_CmdId_CmdId_MIN = AvatarDieAnimationEndRsp_CmdId_NONE;
const AvatarDieAnimationEndRsp_CmdId AvatarDieAnimationEndRsp_CmdId_CmdId_MAX = AvatarDieAnimationEndRsp_CmdId_CMD_ID;
const int AvatarDieAnimationEndRsp_CmdId_CmdId_ARRAYSIZE = AvatarDieAnimationEndRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarDieAnimationEndRsp_CmdId_descriptor();
inline const ::std::string& AvatarDieAnimationEndRsp_CmdId_Name(AvatarDieAnimationEndRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarDieAnimationEndRsp_CmdId_descriptor(), value);
}
inline bool AvatarDieAnimationEndRsp_CmdId_Parse(
    const ::std::string& name, AvatarDieAnimationEndRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarDieAnimationEndRsp_CmdId>(
    AvatarDieAnimationEndRsp_CmdId_descriptor(), name, value);
}
enum AvatarChangeElementTypeReq_CmdId {
  AvatarChangeElementTypeReq_CmdId_NONE = 0,
  AvatarChangeElementTypeReq_CmdId_CMD_ID = 1721,
  AvatarChangeElementTypeReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarChangeElementTypeReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarChangeElementTypeReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarChangeElementTypeReq_CmdId_AvatarChangeElementTypeReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarChangeElementTypeReq_CmdId_AvatarChangeElementTypeReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarChangeElementTypeReq_CmdId_IsValid(int value);
const AvatarChangeElementTypeReq_CmdId AvatarChangeElementTypeReq_CmdId_CmdId_MIN = AvatarChangeElementTypeReq_CmdId_NONE;
const AvatarChangeElementTypeReq_CmdId AvatarChangeElementTypeReq_CmdId_CmdId_MAX = AvatarChangeElementTypeReq_CmdId_CMD_ID;
const int AvatarChangeElementTypeReq_CmdId_CmdId_ARRAYSIZE = AvatarChangeElementTypeReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarChangeElementTypeReq_CmdId_descriptor();
inline const ::std::string& AvatarChangeElementTypeReq_CmdId_Name(AvatarChangeElementTypeReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarChangeElementTypeReq_CmdId_descriptor(), value);
}
inline bool AvatarChangeElementTypeReq_CmdId_Parse(
    const ::std::string& name, AvatarChangeElementTypeReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarChangeElementTypeReq_CmdId>(
    AvatarChangeElementTypeReq_CmdId_descriptor(), name, value);
}
enum AvatarChangeElementTypeRsp_CmdId {
  AvatarChangeElementTypeRsp_CmdId_NONE = 0,
  AvatarChangeElementTypeRsp_CmdId_CMD_ID = 1722,
  AvatarChangeElementTypeRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarChangeElementTypeRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarChangeElementTypeRsp_CmdId_AvatarChangeElementTypeRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarChangeElementTypeRsp_CmdId_AvatarChangeElementTypeRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarChangeElementTypeRsp_CmdId_IsValid(int value);
const AvatarChangeElementTypeRsp_CmdId AvatarChangeElementTypeRsp_CmdId_CmdId_MIN = AvatarChangeElementTypeRsp_CmdId_NONE;
const AvatarChangeElementTypeRsp_CmdId AvatarChangeElementTypeRsp_CmdId_CmdId_MAX = AvatarChangeElementTypeRsp_CmdId_CMD_ID;
const int AvatarChangeElementTypeRsp_CmdId_CmdId_ARRAYSIZE = AvatarChangeElementTypeRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarChangeElementTypeRsp_CmdId_descriptor();
inline const ::std::string& AvatarChangeElementTypeRsp_CmdId_Name(AvatarChangeElementTypeRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarChangeElementTypeRsp_CmdId_descriptor(), value);
}
inline bool AvatarChangeElementTypeRsp_CmdId_Parse(
    const ::std::string& name, AvatarChangeElementTypeRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarChangeElementTypeRsp_CmdId>(
    AvatarChangeElementTypeRsp_CmdId_descriptor(), name, value);
}
enum AvatarFetterDataNotify_CmdId {
  AvatarFetterDataNotify_CmdId_NONE = 0,
  AvatarFetterDataNotify_CmdId_CMD_ID = 1723,
  AvatarFetterDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarFetterDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarFetterDataNotify_CmdId_AvatarFetterDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarFetterDataNotify_CmdId_AvatarFetterDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarFetterDataNotify_CmdId_IsValid(int value);
const AvatarFetterDataNotify_CmdId AvatarFetterDataNotify_CmdId_CmdId_MIN = AvatarFetterDataNotify_CmdId_NONE;
const AvatarFetterDataNotify_CmdId AvatarFetterDataNotify_CmdId_CmdId_MAX = AvatarFetterDataNotify_CmdId_CMD_ID;
const int AvatarFetterDataNotify_CmdId_CmdId_ARRAYSIZE = AvatarFetterDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarFetterDataNotify_CmdId_descriptor();
inline const ::std::string& AvatarFetterDataNotify_CmdId_Name(AvatarFetterDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarFetterDataNotify_CmdId_descriptor(), value);
}
inline bool AvatarFetterDataNotify_CmdId_Parse(
    const ::std::string& name, AvatarFetterDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarFetterDataNotify_CmdId>(
    AvatarFetterDataNotify_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionDataNotify_CmdId {
  AvatarExpeditionDataNotify_CmdId_NONE = 0,
  AvatarExpeditionDataNotify_CmdId_CMD_ID = 1724,
  AvatarExpeditionDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionDataNotify_CmdId_AvatarExpeditionDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionDataNotify_CmdId_AvatarExpeditionDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionDataNotify_CmdId_IsValid(int value);
const AvatarExpeditionDataNotify_CmdId AvatarExpeditionDataNotify_CmdId_CmdId_MIN = AvatarExpeditionDataNotify_CmdId_NONE;
const AvatarExpeditionDataNotify_CmdId AvatarExpeditionDataNotify_CmdId_CmdId_MAX = AvatarExpeditionDataNotify_CmdId_CMD_ID;
const int AvatarExpeditionDataNotify_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionDataNotify_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionDataNotify_CmdId_Name(AvatarExpeditionDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionDataNotify_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionDataNotify_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionDataNotify_CmdId>(
    AvatarExpeditionDataNotify_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionAllDataReq_CmdId {
  AvatarExpeditionAllDataReq_CmdId_NONE = 0,
  AvatarExpeditionAllDataReq_CmdId_CMD_ID = 1725,
  AvatarExpeditionAllDataReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionAllDataReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionAllDataReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarExpeditionAllDataReq_CmdId_AvatarExpeditionAllDataReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionAllDataReq_CmdId_AvatarExpeditionAllDataReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionAllDataReq_CmdId_IsValid(int value);
const AvatarExpeditionAllDataReq_CmdId AvatarExpeditionAllDataReq_CmdId_CmdId_MIN = AvatarExpeditionAllDataReq_CmdId_NONE;
const AvatarExpeditionAllDataReq_CmdId AvatarExpeditionAllDataReq_CmdId_CmdId_MAX = AvatarExpeditionAllDataReq_CmdId_CMD_ID;
const int AvatarExpeditionAllDataReq_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionAllDataReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionAllDataReq_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionAllDataReq_CmdId_Name(AvatarExpeditionAllDataReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionAllDataReq_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionAllDataReq_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionAllDataReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionAllDataReq_CmdId>(
    AvatarExpeditionAllDataReq_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionAllDataRsp_CmdId {
  AvatarExpeditionAllDataRsp_CmdId_NONE = 0,
  AvatarExpeditionAllDataRsp_CmdId_CMD_ID = 1726,
  AvatarExpeditionAllDataRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionAllDataRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionAllDataRsp_CmdId_AvatarExpeditionAllDataRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionAllDataRsp_CmdId_AvatarExpeditionAllDataRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionAllDataRsp_CmdId_IsValid(int value);
const AvatarExpeditionAllDataRsp_CmdId AvatarExpeditionAllDataRsp_CmdId_CmdId_MIN = AvatarExpeditionAllDataRsp_CmdId_NONE;
const AvatarExpeditionAllDataRsp_CmdId AvatarExpeditionAllDataRsp_CmdId_CmdId_MAX = AvatarExpeditionAllDataRsp_CmdId_CMD_ID;
const int AvatarExpeditionAllDataRsp_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionAllDataRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionAllDataRsp_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionAllDataRsp_CmdId_Name(AvatarExpeditionAllDataRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionAllDataRsp_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionAllDataRsp_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionAllDataRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionAllDataRsp_CmdId>(
    AvatarExpeditionAllDataRsp_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionStartReq_CmdId {
  AvatarExpeditionStartReq_CmdId_NONE = 0,
  AvatarExpeditionStartReq_CmdId_CMD_ID = 1727,
  AvatarExpeditionStartReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionStartReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionStartReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarExpeditionStartReq_CmdId_AvatarExpeditionStartReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionStartReq_CmdId_AvatarExpeditionStartReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionStartReq_CmdId_IsValid(int value);
const AvatarExpeditionStartReq_CmdId AvatarExpeditionStartReq_CmdId_CmdId_MIN = AvatarExpeditionStartReq_CmdId_NONE;
const AvatarExpeditionStartReq_CmdId AvatarExpeditionStartReq_CmdId_CmdId_MAX = AvatarExpeditionStartReq_CmdId_CMD_ID;
const int AvatarExpeditionStartReq_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionStartReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionStartReq_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionStartReq_CmdId_Name(AvatarExpeditionStartReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionStartReq_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionStartReq_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionStartReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionStartReq_CmdId>(
    AvatarExpeditionStartReq_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionStartRsp_CmdId {
  AvatarExpeditionStartRsp_CmdId_NONE = 0,
  AvatarExpeditionStartRsp_CmdId_CMD_ID = 1728,
  AvatarExpeditionStartRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionStartRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionStartRsp_CmdId_AvatarExpeditionStartRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionStartRsp_CmdId_AvatarExpeditionStartRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionStartRsp_CmdId_IsValid(int value);
const AvatarExpeditionStartRsp_CmdId AvatarExpeditionStartRsp_CmdId_CmdId_MIN = AvatarExpeditionStartRsp_CmdId_NONE;
const AvatarExpeditionStartRsp_CmdId AvatarExpeditionStartRsp_CmdId_CmdId_MAX = AvatarExpeditionStartRsp_CmdId_CMD_ID;
const int AvatarExpeditionStartRsp_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionStartRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionStartRsp_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionStartRsp_CmdId_Name(AvatarExpeditionStartRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionStartRsp_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionStartRsp_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionStartRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionStartRsp_CmdId>(
    AvatarExpeditionStartRsp_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionCallBackReq_CmdId {
  AvatarExpeditionCallBackReq_CmdId_NONE = 0,
  AvatarExpeditionCallBackReq_CmdId_CMD_ID = 1729,
  AvatarExpeditionCallBackReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionCallBackReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionCallBackReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarExpeditionCallBackReq_CmdId_AvatarExpeditionCallBackReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionCallBackReq_CmdId_AvatarExpeditionCallBackReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionCallBackReq_CmdId_IsValid(int value);
const AvatarExpeditionCallBackReq_CmdId AvatarExpeditionCallBackReq_CmdId_CmdId_MIN = AvatarExpeditionCallBackReq_CmdId_NONE;
const AvatarExpeditionCallBackReq_CmdId AvatarExpeditionCallBackReq_CmdId_CmdId_MAX = AvatarExpeditionCallBackReq_CmdId_CMD_ID;
const int AvatarExpeditionCallBackReq_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionCallBackReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionCallBackReq_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionCallBackReq_CmdId_Name(AvatarExpeditionCallBackReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionCallBackReq_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionCallBackReq_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionCallBackReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionCallBackReq_CmdId>(
    AvatarExpeditionCallBackReq_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionCallBackRsp_CmdId {
  AvatarExpeditionCallBackRsp_CmdId_NONE = 0,
  AvatarExpeditionCallBackRsp_CmdId_CMD_ID = 1730,
  AvatarExpeditionCallBackRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionCallBackRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionCallBackRsp_CmdId_AvatarExpeditionCallBackRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionCallBackRsp_CmdId_AvatarExpeditionCallBackRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionCallBackRsp_CmdId_IsValid(int value);
const AvatarExpeditionCallBackRsp_CmdId AvatarExpeditionCallBackRsp_CmdId_CmdId_MIN = AvatarExpeditionCallBackRsp_CmdId_NONE;
const AvatarExpeditionCallBackRsp_CmdId AvatarExpeditionCallBackRsp_CmdId_CmdId_MAX = AvatarExpeditionCallBackRsp_CmdId_CMD_ID;
const int AvatarExpeditionCallBackRsp_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionCallBackRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionCallBackRsp_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionCallBackRsp_CmdId_Name(AvatarExpeditionCallBackRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionCallBackRsp_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionCallBackRsp_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionCallBackRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionCallBackRsp_CmdId>(
    AvatarExpeditionCallBackRsp_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionGetRewardReq_CmdId {
  AvatarExpeditionGetRewardReq_CmdId_NONE = 0,
  AvatarExpeditionGetRewardReq_CmdId_CMD_ID = 1731,
  AvatarExpeditionGetRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionGetRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionGetRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarExpeditionGetRewardReq_CmdId_AvatarExpeditionGetRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionGetRewardReq_CmdId_AvatarExpeditionGetRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionGetRewardReq_CmdId_IsValid(int value);
const AvatarExpeditionGetRewardReq_CmdId AvatarExpeditionGetRewardReq_CmdId_CmdId_MIN = AvatarExpeditionGetRewardReq_CmdId_NONE;
const AvatarExpeditionGetRewardReq_CmdId AvatarExpeditionGetRewardReq_CmdId_CmdId_MAX = AvatarExpeditionGetRewardReq_CmdId_CMD_ID;
const int AvatarExpeditionGetRewardReq_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionGetRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionGetRewardReq_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionGetRewardReq_CmdId_Name(AvatarExpeditionGetRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionGetRewardReq_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionGetRewardReq_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionGetRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionGetRewardReq_CmdId>(
    AvatarExpeditionGetRewardReq_CmdId_descriptor(), name, value);
}
enum AvatarExpeditionGetRewardRsp_CmdId {
  AvatarExpeditionGetRewardRsp_CmdId_NONE = 0,
  AvatarExpeditionGetRewardRsp_CmdId_CMD_ID = 1732,
  AvatarExpeditionGetRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  AvatarExpeditionGetRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  AvatarExpeditionGetRewardRsp_CmdId_AvatarExpeditionGetRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionGetRewardRsp_CmdId_AvatarExpeditionGetRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionGetRewardRsp_CmdId_IsValid(int value);
const AvatarExpeditionGetRewardRsp_CmdId AvatarExpeditionGetRewardRsp_CmdId_CmdId_MIN = AvatarExpeditionGetRewardRsp_CmdId_NONE;
const AvatarExpeditionGetRewardRsp_CmdId AvatarExpeditionGetRewardRsp_CmdId_CmdId_MAX = AvatarExpeditionGetRewardRsp_CmdId_CMD_ID;
const int AvatarExpeditionGetRewardRsp_CmdId_CmdId_ARRAYSIZE = AvatarExpeditionGetRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionGetRewardRsp_CmdId_descriptor();
inline const ::std::string& AvatarExpeditionGetRewardRsp_CmdId_Name(AvatarExpeditionGetRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionGetRewardRsp_CmdId_descriptor(), value);
}
inline bool AvatarExpeditionGetRewardRsp_CmdId_Parse(
    const ::std::string& name, AvatarExpeditionGetRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionGetRewardRsp_CmdId>(
    AvatarExpeditionGetRewardRsp_CmdId_descriptor(), name, value);
}
enum ChangeMpTeamAvatarReq_CmdId {
  ChangeMpTeamAvatarReq_CmdId_NONE = 0,
  ChangeMpTeamAvatarReq_CmdId_CMD_ID = 1734,
  ChangeMpTeamAvatarReq_CmdId_ENET_CHANNEL_ID = 0,
  ChangeMpTeamAvatarReq_CmdId_ENET_IS_RELIABLE = 1,
  ChangeMpTeamAvatarReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChangeMpTeamAvatarReq_CmdId_ChangeMpTeamAvatarReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeMpTeamAvatarReq_CmdId_ChangeMpTeamAvatarReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeMpTeamAvatarReq_CmdId_IsValid(int value);
const ChangeMpTeamAvatarReq_CmdId ChangeMpTeamAvatarReq_CmdId_CmdId_MIN = ChangeMpTeamAvatarReq_CmdId_NONE;
const ChangeMpTeamAvatarReq_CmdId ChangeMpTeamAvatarReq_CmdId_CmdId_MAX = ChangeMpTeamAvatarReq_CmdId_CMD_ID;
const int ChangeMpTeamAvatarReq_CmdId_CmdId_ARRAYSIZE = ChangeMpTeamAvatarReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeMpTeamAvatarReq_CmdId_descriptor();
inline const ::std::string& ChangeMpTeamAvatarReq_CmdId_Name(ChangeMpTeamAvatarReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeMpTeamAvatarReq_CmdId_descriptor(), value);
}
inline bool ChangeMpTeamAvatarReq_CmdId_Parse(
    const ::std::string& name, ChangeMpTeamAvatarReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeMpTeamAvatarReq_CmdId>(
    ChangeMpTeamAvatarReq_CmdId_descriptor(), name, value);
}
enum ChangeMpTeamAvatarRsp_CmdId {
  ChangeMpTeamAvatarRsp_CmdId_NONE = 0,
  ChangeMpTeamAvatarRsp_CmdId_CMD_ID = 1735,
  ChangeMpTeamAvatarRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChangeMpTeamAvatarRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChangeMpTeamAvatarRsp_CmdId_ChangeMpTeamAvatarRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeMpTeamAvatarRsp_CmdId_ChangeMpTeamAvatarRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeMpTeamAvatarRsp_CmdId_IsValid(int value);
const ChangeMpTeamAvatarRsp_CmdId ChangeMpTeamAvatarRsp_CmdId_CmdId_MIN = ChangeMpTeamAvatarRsp_CmdId_NONE;
const ChangeMpTeamAvatarRsp_CmdId ChangeMpTeamAvatarRsp_CmdId_CmdId_MAX = ChangeMpTeamAvatarRsp_CmdId_CMD_ID;
const int ChangeMpTeamAvatarRsp_CmdId_CmdId_ARRAYSIZE = ChangeMpTeamAvatarRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeMpTeamAvatarRsp_CmdId_descriptor();
inline const ::std::string& ChangeMpTeamAvatarRsp_CmdId_Name(ChangeMpTeamAvatarRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeMpTeamAvatarRsp_CmdId_descriptor(), value);
}
inline bool ChangeMpTeamAvatarRsp_CmdId_Parse(
    const ::std::string& name, ChangeMpTeamAvatarRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeMpTeamAvatarRsp_CmdId>(
    ChangeMpTeamAvatarRsp_CmdId_descriptor(), name, value);
}
enum ChangeTeamNameReq_CmdId {
  ChangeTeamNameReq_CmdId_NONE = 0,
  ChangeTeamNameReq_CmdId_CMD_ID = 1736,
  ChangeTeamNameReq_CmdId_ENET_CHANNEL_ID = 0,
  ChangeTeamNameReq_CmdId_ENET_IS_RELIABLE = 1,
  ChangeTeamNameReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChangeTeamNameReq_CmdId_ChangeTeamNameReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeTeamNameReq_CmdId_ChangeTeamNameReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeTeamNameReq_CmdId_IsValid(int value);
const ChangeTeamNameReq_CmdId ChangeTeamNameReq_CmdId_CmdId_MIN = ChangeTeamNameReq_CmdId_NONE;
const ChangeTeamNameReq_CmdId ChangeTeamNameReq_CmdId_CmdId_MAX = ChangeTeamNameReq_CmdId_CMD_ID;
const int ChangeTeamNameReq_CmdId_CmdId_ARRAYSIZE = ChangeTeamNameReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeTeamNameReq_CmdId_descriptor();
inline const ::std::string& ChangeTeamNameReq_CmdId_Name(ChangeTeamNameReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeTeamNameReq_CmdId_descriptor(), value);
}
inline bool ChangeTeamNameReq_CmdId_Parse(
    const ::std::string& name, ChangeTeamNameReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeTeamNameReq_CmdId>(
    ChangeTeamNameReq_CmdId_descriptor(), name, value);
}
enum ChangeTeamNameRsp_CmdId {
  ChangeTeamNameRsp_CmdId_NONE = 0,
  ChangeTeamNameRsp_CmdId_CMD_ID = 1737,
  ChangeTeamNameRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChangeTeamNameRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChangeTeamNameRsp_CmdId_ChangeTeamNameRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeTeamNameRsp_CmdId_ChangeTeamNameRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeTeamNameRsp_CmdId_IsValid(int value);
const ChangeTeamNameRsp_CmdId ChangeTeamNameRsp_CmdId_CmdId_MIN = ChangeTeamNameRsp_CmdId_NONE;
const ChangeTeamNameRsp_CmdId ChangeTeamNameRsp_CmdId_CmdId_MAX = ChangeTeamNameRsp_CmdId_CMD_ID;
const int ChangeTeamNameRsp_CmdId_CmdId_ARRAYSIZE = ChangeTeamNameRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeTeamNameRsp_CmdId_descriptor();
inline const ::std::string& ChangeTeamNameRsp_CmdId_Name(ChangeTeamNameRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeTeamNameRsp_CmdId_descriptor(), value);
}
inline bool ChangeTeamNameRsp_CmdId_Parse(
    const ::std::string& name, ChangeTeamNameRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeTeamNameRsp_CmdId>(
    ChangeTeamNameRsp_CmdId_descriptor(), name, value);
}
enum SceneTeamUpdateNotify_CmdId {
  SceneTeamUpdateNotify_CmdId_NONE = 0,
  SceneTeamUpdateNotify_CmdId_CMD_ID = 1738,
  SceneTeamUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneTeamUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneTeamUpdateNotify_CmdId_SceneTeamUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneTeamUpdateNotify_CmdId_SceneTeamUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneTeamUpdateNotify_CmdId_IsValid(int value);
const SceneTeamUpdateNotify_CmdId SceneTeamUpdateNotify_CmdId_CmdId_MIN = SceneTeamUpdateNotify_CmdId_NONE;
const SceneTeamUpdateNotify_CmdId SceneTeamUpdateNotify_CmdId_CmdId_MAX = SceneTeamUpdateNotify_CmdId_CMD_ID;
const int SceneTeamUpdateNotify_CmdId_CmdId_ARRAYSIZE = SceneTeamUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneTeamUpdateNotify_CmdId_descriptor();
inline const ::std::string& SceneTeamUpdateNotify_CmdId_Name(SceneTeamUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneTeamUpdateNotify_CmdId_descriptor(), value);
}
inline bool SceneTeamUpdateNotify_CmdId_Parse(
    const ::std::string& name, SceneTeamUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneTeamUpdateNotify_CmdId>(
    SceneTeamUpdateNotify_CmdId_descriptor(), name, value);
}
enum SceneTeamMPDisplayCurAvatarNotify_CmdId {
  SceneTeamMPDisplayCurAvatarNotify_CmdId_NONE = 0,
  SceneTeamMPDisplayCurAvatarNotify_CmdId_CMD_ID = 1739,
  SceneTeamMPDisplayCurAvatarNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneTeamMPDisplayCurAvatarNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneTeamMPDisplayCurAvatarNotify_CmdId_SceneTeamMPDisplayCurAvatarNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneTeamMPDisplayCurAvatarNotify_CmdId_SceneTeamMPDisplayCurAvatarNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneTeamMPDisplayCurAvatarNotify_CmdId_IsValid(int value);
const SceneTeamMPDisplayCurAvatarNotify_CmdId SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_MIN = SceneTeamMPDisplayCurAvatarNotify_CmdId_NONE;
const SceneTeamMPDisplayCurAvatarNotify_CmdId SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_MAX = SceneTeamMPDisplayCurAvatarNotify_CmdId_CMD_ID;
const int SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_ARRAYSIZE = SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneTeamMPDisplayCurAvatarNotify_CmdId_descriptor();
inline const ::std::string& SceneTeamMPDisplayCurAvatarNotify_CmdId_Name(SceneTeamMPDisplayCurAvatarNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneTeamMPDisplayCurAvatarNotify_CmdId_descriptor(), value);
}
inline bool SceneTeamMPDisplayCurAvatarNotify_CmdId_Parse(
    const ::std::string& name, SceneTeamMPDisplayCurAvatarNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneTeamMPDisplayCurAvatarNotify_CmdId>(
    SceneTeamMPDisplayCurAvatarNotify_CmdId_descriptor(), name, value);
}
enum FocusAvatarReq_CmdId {
  FocusAvatarReq_CmdId_NONE = 0,
  FocusAvatarReq_CmdId_CMD_ID = 1740,
  FocusAvatarReq_CmdId_ENET_CHANNEL_ID = 0,
  FocusAvatarReq_CmdId_ENET_IS_RELIABLE = 1,
  FocusAvatarReq_CmdId_IS_ALLOW_CLIENT = 1,
  FocusAvatarReq_CmdId_FocusAvatarReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FocusAvatarReq_CmdId_FocusAvatarReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FocusAvatarReq_CmdId_IsValid(int value);
const FocusAvatarReq_CmdId FocusAvatarReq_CmdId_CmdId_MIN = FocusAvatarReq_CmdId_NONE;
const FocusAvatarReq_CmdId FocusAvatarReq_CmdId_CmdId_MAX = FocusAvatarReq_CmdId_CMD_ID;
const int FocusAvatarReq_CmdId_CmdId_ARRAYSIZE = FocusAvatarReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FocusAvatarReq_CmdId_descriptor();
inline const ::std::string& FocusAvatarReq_CmdId_Name(FocusAvatarReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FocusAvatarReq_CmdId_descriptor(), value);
}
inline bool FocusAvatarReq_CmdId_Parse(
    const ::std::string& name, FocusAvatarReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FocusAvatarReq_CmdId>(
    FocusAvatarReq_CmdId_descriptor(), name, value);
}
enum FocusAvatarRsp_CmdId {
  FocusAvatarRsp_CmdId_NONE = 0,
  FocusAvatarRsp_CmdId_CMD_ID = 1741,
  FocusAvatarRsp_CmdId_ENET_CHANNEL_ID = 0,
  FocusAvatarRsp_CmdId_ENET_IS_RELIABLE = 1,
  FocusAvatarRsp_CmdId_FocusAvatarRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FocusAvatarRsp_CmdId_FocusAvatarRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FocusAvatarRsp_CmdId_IsValid(int value);
const FocusAvatarRsp_CmdId FocusAvatarRsp_CmdId_CmdId_MIN = FocusAvatarRsp_CmdId_NONE;
const FocusAvatarRsp_CmdId FocusAvatarRsp_CmdId_CmdId_MAX = FocusAvatarRsp_CmdId_CMD_ID;
const int FocusAvatarRsp_CmdId_CmdId_ARRAYSIZE = FocusAvatarRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FocusAvatarRsp_CmdId_descriptor();
inline const ::std::string& FocusAvatarRsp_CmdId_Name(FocusAvatarRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FocusAvatarRsp_CmdId_descriptor(), value);
}
inline bool FocusAvatarRsp_CmdId_Parse(
    const ::std::string& name, FocusAvatarRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FocusAvatarRsp_CmdId>(
    FocusAvatarRsp_CmdId_descriptor(), name, value);
}
// ===================================================================

class AvatarAddNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarAddNotify) */ {
 public:
  AvatarAddNotify();
  virtual ~AvatarAddNotify();

  AvatarAddNotify(const AvatarAddNotify& from);

  inline AvatarAddNotify& operator=(const AvatarAddNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarAddNotify(AvatarAddNotify&& from) noexcept
    : AvatarAddNotify() {
    *this = ::std::move(from);
  }

  inline AvatarAddNotify& operator=(AvatarAddNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarAddNotify& default_instance();

  static inline const AvatarAddNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarAddNotify*>(
               &_AvatarAddNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AvatarAddNotify* other);
  friend void swap(AvatarAddNotify& a, AvatarAddNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarAddNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarAddNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarAddNotify& from);
  void MergeFrom(const AvatarAddNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarAddNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarAddNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarAddNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarAddNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarAddNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarAddNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarAddNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarAddNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarAddNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarAddNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarAddNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarAddNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarAddNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.AvatarInfo avatar = 1;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 1;
  const ::proto::AvatarInfo& avatar() const;
  ::proto::AvatarInfo* mutable_avatar();
  ::proto::AvatarInfo* release_avatar();
  void set_allocated_avatar(::proto::AvatarInfo* avatar);

  // bool is_in_team = 2;
  void clear_is_in_team();
  static const int kIsInTeamFieldNumber = 2;
  bool is_in_team() const;
  void set_is_in_team(bool value);

  // @@protoc_insertion_point(class_scope:proto.AvatarAddNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AvatarInfo* avatar_;
  bool is_in_team_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarDelNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarDelNotify) */ {
 public:
  AvatarDelNotify();
  virtual ~AvatarDelNotify();

  AvatarDelNotify(const AvatarDelNotify& from);

  inline AvatarDelNotify& operator=(const AvatarDelNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarDelNotify(AvatarDelNotify&& from) noexcept
    : AvatarDelNotify() {
    *this = ::std::move(from);
  }

  inline AvatarDelNotify& operator=(AvatarDelNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarDelNotify& default_instance();

  static inline const AvatarDelNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarDelNotify*>(
               &_AvatarDelNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AvatarDelNotify* other);
  friend void swap(AvatarDelNotify& a, AvatarDelNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarDelNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarDelNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarDelNotify& from);
  void MergeFrom(const AvatarDelNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarDelNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarDelNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarDelNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarDelNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarDelNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarDelNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarDelNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarDelNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarDelNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarDelNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarDelNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarDelNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarDelNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid_list = 1;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // @@protoc_insertion_point(class_scope:proto.AvatarDelNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarTeam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarTeam) */ {
 public:
  AvatarTeam();
  virtual ~AvatarTeam();

  AvatarTeam(const AvatarTeam& from);

  inline AvatarTeam& operator=(const AvatarTeam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarTeam(AvatarTeam&& from) noexcept
    : AvatarTeam() {
    *this = ::std::move(from);
  }

  inline AvatarTeam& operator=(AvatarTeam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarTeam& default_instance();

  static inline const AvatarTeam* internal_default_instance() {
    return reinterpret_cast<const AvatarTeam*>(
               &_AvatarTeam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AvatarTeam* other);
  friend void swap(AvatarTeam& a, AvatarTeam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarTeam* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarTeam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarTeam& from);
  void MergeFrom(const AvatarTeam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid_list = 1;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // string team_name = 2;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // @@protoc_insertion_point(class_scope:proto.AvatarTeam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetUpAvatarTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetUpAvatarTeamReq) */ {
 public:
  SetUpAvatarTeamReq();
  virtual ~SetUpAvatarTeamReq();

  SetUpAvatarTeamReq(const SetUpAvatarTeamReq& from);

  inline SetUpAvatarTeamReq& operator=(const SetUpAvatarTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetUpAvatarTeamReq(SetUpAvatarTeamReq&& from) noexcept
    : SetUpAvatarTeamReq() {
    *this = ::std::move(from);
  }

  inline SetUpAvatarTeamReq& operator=(SetUpAvatarTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUpAvatarTeamReq& default_instance();

  static inline const SetUpAvatarTeamReq* internal_default_instance() {
    return reinterpret_cast<const SetUpAvatarTeamReq*>(
               &_SetUpAvatarTeamReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SetUpAvatarTeamReq* other);
  friend void swap(SetUpAvatarTeamReq& a, SetUpAvatarTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetUpAvatarTeamReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetUpAvatarTeamReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetUpAvatarTeamReq& from);
  void MergeFrom(const SetUpAvatarTeamReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetUpAvatarTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetUpAvatarTeamReq_CmdId CmdId;
  static const CmdId NONE =
    SetUpAvatarTeamReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetUpAvatarTeamReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetUpAvatarTeamReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetUpAvatarTeamReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetUpAvatarTeamReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetUpAvatarTeamReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetUpAvatarTeamReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetUpAvatarTeamReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetUpAvatarTeamReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetUpAvatarTeamReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetUpAvatarTeamReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetUpAvatarTeamReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_team_guid_list = 2;
  int avatar_team_guid_list_size() const;
  void clear_avatar_team_guid_list();
  static const int kAvatarTeamGuidListFieldNumber = 2;
  ::google::protobuf::uint64 avatar_team_guid_list(int index) const;
  void set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_team_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_team_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_team_guid_list();

  // uint64 cur_avatar_guid = 3;
  void clear_cur_avatar_guid();
  static const int kCurAvatarGuidFieldNumber = 3;
  ::google::protobuf::uint64 cur_avatar_guid() const;
  void set_cur_avatar_guid(::google::protobuf::uint64 value);

  // uint32 team_id = 1;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetUpAvatarTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_team_guid_list_;
  mutable int _avatar_team_guid_list_cached_byte_size_;
  ::google::protobuf::uint64 cur_avatar_guid_;
  ::google::protobuf::uint32 team_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetUpAvatarTeamRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetUpAvatarTeamRsp) */ {
 public:
  SetUpAvatarTeamRsp();
  virtual ~SetUpAvatarTeamRsp();

  SetUpAvatarTeamRsp(const SetUpAvatarTeamRsp& from);

  inline SetUpAvatarTeamRsp& operator=(const SetUpAvatarTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetUpAvatarTeamRsp(SetUpAvatarTeamRsp&& from) noexcept
    : SetUpAvatarTeamRsp() {
    *this = ::std::move(from);
  }

  inline SetUpAvatarTeamRsp& operator=(SetUpAvatarTeamRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUpAvatarTeamRsp& default_instance();

  static inline const SetUpAvatarTeamRsp* internal_default_instance() {
    return reinterpret_cast<const SetUpAvatarTeamRsp*>(
               &_SetUpAvatarTeamRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SetUpAvatarTeamRsp* other);
  friend void swap(SetUpAvatarTeamRsp& a, SetUpAvatarTeamRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetUpAvatarTeamRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetUpAvatarTeamRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetUpAvatarTeamRsp& from);
  void MergeFrom(const SetUpAvatarTeamRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetUpAvatarTeamRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetUpAvatarTeamRsp_CmdId CmdId;
  static const CmdId NONE =
    SetUpAvatarTeamRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetUpAvatarTeamRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetUpAvatarTeamRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetUpAvatarTeamRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetUpAvatarTeamRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetUpAvatarTeamRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetUpAvatarTeamRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetUpAvatarTeamRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetUpAvatarTeamRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetUpAvatarTeamRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetUpAvatarTeamRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_team_guid_list = 3;
  int avatar_team_guid_list_size() const;
  void clear_avatar_team_guid_list();
  static const int kAvatarTeamGuidListFieldNumber = 3;
  ::google::protobuf::uint64 avatar_team_guid_list(int index) const;
  void set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_team_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_team_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_team_guid_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 team_id = 2;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // uint64 cur_avatar_guid = 4;
  void clear_cur_avatar_guid();
  static const int kCurAvatarGuidFieldNumber = 4;
  ::google::protobuf::uint64 cur_avatar_guid() const;
  void set_cur_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SetUpAvatarTeamRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_team_guid_list_;
  mutable int _avatar_team_guid_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 cur_avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChooseCurAvatarTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChooseCurAvatarTeamReq) */ {
 public:
  ChooseCurAvatarTeamReq();
  virtual ~ChooseCurAvatarTeamReq();

  ChooseCurAvatarTeamReq(const ChooseCurAvatarTeamReq& from);

  inline ChooseCurAvatarTeamReq& operator=(const ChooseCurAvatarTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChooseCurAvatarTeamReq(ChooseCurAvatarTeamReq&& from) noexcept
    : ChooseCurAvatarTeamReq() {
    *this = ::std::move(from);
  }

  inline ChooseCurAvatarTeamReq& operator=(ChooseCurAvatarTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChooseCurAvatarTeamReq& default_instance();

  static inline const ChooseCurAvatarTeamReq* internal_default_instance() {
    return reinterpret_cast<const ChooseCurAvatarTeamReq*>(
               &_ChooseCurAvatarTeamReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ChooseCurAvatarTeamReq* other);
  friend void swap(ChooseCurAvatarTeamReq& a, ChooseCurAvatarTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChooseCurAvatarTeamReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChooseCurAvatarTeamReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChooseCurAvatarTeamReq& from);
  void MergeFrom(const ChooseCurAvatarTeamReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChooseCurAvatarTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChooseCurAvatarTeamReq_CmdId CmdId;
  static const CmdId NONE =
    ChooseCurAvatarTeamReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChooseCurAvatarTeamReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChooseCurAvatarTeamReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChooseCurAvatarTeamReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChooseCurAvatarTeamReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChooseCurAvatarTeamReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChooseCurAvatarTeamReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChooseCurAvatarTeamReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChooseCurAvatarTeamReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChooseCurAvatarTeamReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChooseCurAvatarTeamReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChooseCurAvatarTeamReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 team_id = 1;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChooseCurAvatarTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 team_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChooseCurAvatarTeamRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChooseCurAvatarTeamRsp) */ {
 public:
  ChooseCurAvatarTeamRsp();
  virtual ~ChooseCurAvatarTeamRsp();

  ChooseCurAvatarTeamRsp(const ChooseCurAvatarTeamRsp& from);

  inline ChooseCurAvatarTeamRsp& operator=(const ChooseCurAvatarTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChooseCurAvatarTeamRsp(ChooseCurAvatarTeamRsp&& from) noexcept
    : ChooseCurAvatarTeamRsp() {
    *this = ::std::move(from);
  }

  inline ChooseCurAvatarTeamRsp& operator=(ChooseCurAvatarTeamRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChooseCurAvatarTeamRsp& default_instance();

  static inline const ChooseCurAvatarTeamRsp* internal_default_instance() {
    return reinterpret_cast<const ChooseCurAvatarTeamRsp*>(
               &_ChooseCurAvatarTeamRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ChooseCurAvatarTeamRsp* other);
  friend void swap(ChooseCurAvatarTeamRsp& a, ChooseCurAvatarTeamRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChooseCurAvatarTeamRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChooseCurAvatarTeamRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChooseCurAvatarTeamRsp& from);
  void MergeFrom(const ChooseCurAvatarTeamRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChooseCurAvatarTeamRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChooseCurAvatarTeamRsp_CmdId CmdId;
  static const CmdId NONE =
    ChooseCurAvatarTeamRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChooseCurAvatarTeamRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChooseCurAvatarTeamRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChooseCurAvatarTeamRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChooseCurAvatarTeamRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChooseCurAvatarTeamRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChooseCurAvatarTeamRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChooseCurAvatarTeamRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChooseCurAvatarTeamRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChooseCurAvatarTeamRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChooseCurAvatarTeamRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 cur_team_id = 2;
  void clear_cur_team_id();
  static const int kCurTeamIdFieldNumber = 2;
  ::google::protobuf::uint32 cur_team_id() const;
  void set_cur_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChooseCurAvatarTeamRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 cur_team_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeAvatarReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeAvatarReq) */ {
 public:
  ChangeAvatarReq();
  virtual ~ChangeAvatarReq();

  ChangeAvatarReq(const ChangeAvatarReq& from);

  inline ChangeAvatarReq& operator=(const ChangeAvatarReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeAvatarReq(ChangeAvatarReq&& from) noexcept
    : ChangeAvatarReq() {
    *this = ::std::move(from);
  }

  inline ChangeAvatarReq& operator=(ChangeAvatarReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeAvatarReq& default_instance();

  static inline const ChangeAvatarReq* internal_default_instance() {
    return reinterpret_cast<const ChangeAvatarReq*>(
               &_ChangeAvatarReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ChangeAvatarReq* other);
  friend void swap(ChangeAvatarReq& a, ChangeAvatarReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeAvatarReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeAvatarReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeAvatarReq& from);
  void MergeFrom(const ChangeAvatarReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeAvatarReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeAvatarReq_CmdId CmdId;
  static const CmdId NONE =
    ChangeAvatarReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeAvatarReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeAvatarReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeAvatarReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChangeAvatarReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChangeAvatarReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeAvatarReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeAvatarReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeAvatarReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeAvatarReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeAvatarReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeAvatarReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 skill_id = 2;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeAvatarReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeAvatarRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeAvatarRsp) */ {
 public:
  ChangeAvatarRsp();
  virtual ~ChangeAvatarRsp();

  ChangeAvatarRsp(const ChangeAvatarRsp& from);

  inline ChangeAvatarRsp& operator=(const ChangeAvatarRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeAvatarRsp(ChangeAvatarRsp&& from) noexcept
    : ChangeAvatarRsp() {
    *this = ::std::move(from);
  }

  inline ChangeAvatarRsp& operator=(ChangeAvatarRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeAvatarRsp& default_instance();

  static inline const ChangeAvatarRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeAvatarRsp*>(
               &_ChangeAvatarRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ChangeAvatarRsp* other);
  friend void swap(ChangeAvatarRsp& a, ChangeAvatarRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeAvatarRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeAvatarRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeAvatarRsp& from);
  void MergeFrom(const ChangeAvatarRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeAvatarRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeAvatarRsp_CmdId CmdId;
  static const CmdId NONE =
    ChangeAvatarRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeAvatarRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeAvatarRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeAvatarRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChangeAvatarRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeAvatarRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeAvatarRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeAvatarRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeAvatarRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeAvatarRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeAvatarRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 cur_guid = 2;
  void clear_cur_guid();
  static const int kCurGuidFieldNumber = 2;
  ::google::protobuf::uint64 cur_guid() const;
  void set_cur_guid(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 skill_id = 3;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeAvatarRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 cur_guid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarPromoteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarPromoteReq) */ {
 public:
  AvatarPromoteReq();
  virtual ~AvatarPromoteReq();

  AvatarPromoteReq(const AvatarPromoteReq& from);

  inline AvatarPromoteReq& operator=(const AvatarPromoteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarPromoteReq(AvatarPromoteReq&& from) noexcept
    : AvatarPromoteReq() {
    *this = ::std::move(from);
  }

  inline AvatarPromoteReq& operator=(AvatarPromoteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarPromoteReq& default_instance();

  static inline const AvatarPromoteReq* internal_default_instance() {
    return reinterpret_cast<const AvatarPromoteReq*>(
               &_AvatarPromoteReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(AvatarPromoteReq* other);
  friend void swap(AvatarPromoteReq& a, AvatarPromoteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarPromoteReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarPromoteReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarPromoteReq& from);
  void MergeFrom(const AvatarPromoteReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarPromoteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarPromoteReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarPromoteReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarPromoteReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarPromoteReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarPromoteReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarPromoteReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarPromoteReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarPromoteReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarPromoteReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarPromoteReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarPromoteReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarPromoteReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarPromoteReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarPromoteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarPromoteRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarPromoteRsp) */ {
 public:
  AvatarPromoteRsp();
  virtual ~AvatarPromoteRsp();

  AvatarPromoteRsp(const AvatarPromoteRsp& from);

  inline AvatarPromoteRsp& operator=(const AvatarPromoteRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarPromoteRsp(AvatarPromoteRsp&& from) noexcept
    : AvatarPromoteRsp() {
    *this = ::std::move(from);
  }

  inline AvatarPromoteRsp& operator=(AvatarPromoteRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarPromoteRsp& default_instance();

  static inline const AvatarPromoteRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarPromoteRsp*>(
               &_AvatarPromoteRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AvatarPromoteRsp* other);
  friend void swap(AvatarPromoteRsp& a, AvatarPromoteRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarPromoteRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarPromoteRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarPromoteRsp& from);
  void MergeFrom(const AvatarPromoteRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarPromoteRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarPromoteRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarPromoteRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarPromoteRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarPromoteRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarPromoteRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarPromoteRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarPromoteRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarPromoteRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarPromoteRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarPromoteRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarPromoteRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarPromoteRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarPromoteRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpringUseReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SpringUseReq) */ {
 public:
  SpringUseReq();
  virtual ~SpringUseReq();

  SpringUseReq(const SpringUseReq& from);

  inline SpringUseReq& operator=(const SpringUseReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpringUseReq(SpringUseReq&& from) noexcept
    : SpringUseReq() {
    *this = ::std::move(from);
  }

  inline SpringUseReq& operator=(SpringUseReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpringUseReq& default_instance();

  static inline const SpringUseReq* internal_default_instance() {
    return reinterpret_cast<const SpringUseReq*>(
               &_SpringUseReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SpringUseReq* other);
  friend void swap(SpringUseReq& a, SpringUseReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpringUseReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SpringUseReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpringUseReq& from);
  void MergeFrom(const SpringUseReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpringUseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SpringUseReq_CmdId CmdId;
  static const CmdId NONE =
    SpringUseReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SpringUseReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SpringUseReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SpringUseReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SpringUseReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SpringUseReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SpringUseReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SpringUseReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SpringUseReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SpringUseReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SpringUseReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SpringUseReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SpringUseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpringUseRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SpringUseRsp) */ {
 public:
  SpringUseRsp();
  virtual ~SpringUseRsp();

  SpringUseRsp(const SpringUseRsp& from);

  inline SpringUseRsp& operator=(const SpringUseRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpringUseRsp(SpringUseRsp&& from) noexcept
    : SpringUseRsp() {
    *this = ::std::move(from);
  }

  inline SpringUseRsp& operator=(SpringUseRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpringUseRsp& default_instance();

  static inline const SpringUseRsp* internal_default_instance() {
    return reinterpret_cast<const SpringUseRsp*>(
               &_SpringUseRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SpringUseRsp* other);
  friend void swap(SpringUseRsp& a, SpringUseRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpringUseRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SpringUseRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpringUseRsp& from);
  void MergeFrom(const SpringUseRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpringUseRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SpringUseRsp_CmdId CmdId;
  static const CmdId NONE =
    SpringUseRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SpringUseRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SpringUseRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SpringUseRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SpringUseRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SpringUseRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SpringUseRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SpringUseRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SpringUseRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SpringUseRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SpringUseRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SpringUseRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshBackgroundAvatarReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RefreshBackgroundAvatarReq) */ {
 public:
  RefreshBackgroundAvatarReq();
  virtual ~RefreshBackgroundAvatarReq();

  RefreshBackgroundAvatarReq(const RefreshBackgroundAvatarReq& from);

  inline RefreshBackgroundAvatarReq& operator=(const RefreshBackgroundAvatarReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshBackgroundAvatarReq(RefreshBackgroundAvatarReq&& from) noexcept
    : RefreshBackgroundAvatarReq() {
    *this = ::std::move(from);
  }

  inline RefreshBackgroundAvatarReq& operator=(RefreshBackgroundAvatarReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshBackgroundAvatarReq& default_instance();

  static inline const RefreshBackgroundAvatarReq* internal_default_instance() {
    return reinterpret_cast<const RefreshBackgroundAvatarReq*>(
               &_RefreshBackgroundAvatarReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RefreshBackgroundAvatarReq* other);
  friend void swap(RefreshBackgroundAvatarReq& a, RefreshBackgroundAvatarReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshBackgroundAvatarReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RefreshBackgroundAvatarReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefreshBackgroundAvatarReq& from);
  void MergeFrom(const RefreshBackgroundAvatarReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefreshBackgroundAvatarReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RefreshBackgroundAvatarReq_CmdId CmdId;
  static const CmdId NONE =
    RefreshBackgroundAvatarReq_CmdId_NONE;
  static const CmdId CMD_ID =
    RefreshBackgroundAvatarReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RefreshBackgroundAvatarReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RefreshBackgroundAvatarReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    RefreshBackgroundAvatarReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return RefreshBackgroundAvatarReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RefreshBackgroundAvatarReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RefreshBackgroundAvatarReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RefreshBackgroundAvatarReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RefreshBackgroundAvatarReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RefreshBackgroundAvatarReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RefreshBackgroundAvatarReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.RefreshBackgroundAvatarReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class RefreshBackgroundAvatarRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RefreshBackgroundAvatarRsp) */ {
 public:
  RefreshBackgroundAvatarRsp();
  virtual ~RefreshBackgroundAvatarRsp();

  RefreshBackgroundAvatarRsp(const RefreshBackgroundAvatarRsp& from);

  inline RefreshBackgroundAvatarRsp& operator=(const RefreshBackgroundAvatarRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshBackgroundAvatarRsp(RefreshBackgroundAvatarRsp&& from) noexcept
    : RefreshBackgroundAvatarRsp() {
    *this = ::std::move(from);
  }

  inline RefreshBackgroundAvatarRsp& operator=(RefreshBackgroundAvatarRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshBackgroundAvatarRsp& default_instance();

  static inline const RefreshBackgroundAvatarRsp* internal_default_instance() {
    return reinterpret_cast<const RefreshBackgroundAvatarRsp*>(
               &_RefreshBackgroundAvatarRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(RefreshBackgroundAvatarRsp* other);
  friend void swap(RefreshBackgroundAvatarRsp& a, RefreshBackgroundAvatarRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshBackgroundAvatarRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RefreshBackgroundAvatarRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefreshBackgroundAvatarRsp& from);
  void MergeFrom(const RefreshBackgroundAvatarRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefreshBackgroundAvatarRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef RefreshBackgroundAvatarRsp_CmdId CmdId;
  static const CmdId NONE =
    RefreshBackgroundAvatarRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    RefreshBackgroundAvatarRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RefreshBackgroundAvatarRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RefreshBackgroundAvatarRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return RefreshBackgroundAvatarRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RefreshBackgroundAvatarRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RefreshBackgroundAvatarRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RefreshBackgroundAvatarRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RefreshBackgroundAvatarRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RefreshBackgroundAvatarRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RefreshBackgroundAvatarRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, uint32> hp_full_time_map = 2;
  int hp_full_time_map_size() const;
  void clear_hp_full_time_map();
  static const int kHpFullTimeMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
      hp_full_time_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
      mutable_hp_full_time_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.RefreshBackgroundAvatarRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class RefreshBackgroundAvatarRsp_HpFullTimeMapEntry : public ::google::protobuf::internal::MapEntry<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry, 
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry, 
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    RefreshBackgroundAvatarRsp_HpFullTimeMapEntry();
    RefreshBackgroundAvatarRsp_HpFullTimeMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const RefreshBackgroundAvatarRsp_HpFullTimeMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      RefreshBackgroundAvatarRsp_HpFullTimeMapEntry,
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > hp_full_time_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarTeamUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarTeamUpdateNotify) */ {
 public:
  AvatarTeamUpdateNotify();
  virtual ~AvatarTeamUpdateNotify();

  AvatarTeamUpdateNotify(const AvatarTeamUpdateNotify& from);

  inline AvatarTeamUpdateNotify& operator=(const AvatarTeamUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarTeamUpdateNotify(AvatarTeamUpdateNotify&& from) noexcept
    : AvatarTeamUpdateNotify() {
    *this = ::std::move(from);
  }

  inline AvatarTeamUpdateNotify& operator=(AvatarTeamUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarTeamUpdateNotify& default_instance();

  static inline const AvatarTeamUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarTeamUpdateNotify*>(
               &_AvatarTeamUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(AvatarTeamUpdateNotify* other);
  friend void swap(AvatarTeamUpdateNotify& a, AvatarTeamUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarTeamUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarTeamUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarTeamUpdateNotify& from);
  void MergeFrom(const AvatarTeamUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarTeamUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarTeamUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarTeamUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarTeamUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarTeamUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarTeamUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarTeamUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarTeamUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarTeamUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarTeamUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarTeamUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarTeamUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarTeamUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 1;
  int avatar_team_map_size() const;
  void clear_avatar_team_map();
  static const int kAvatarTeamMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
      avatar_team_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
      mutable_avatar_team_map();

  // repeated uint64 temp_avatar_guid_list = 2;
  int temp_avatar_guid_list_size() const;
  void clear_temp_avatar_guid_list();
  static const int kTempAvatarGuidListFieldNumber = 2;
  ::google::protobuf::uint64 temp_avatar_guid_list(int index) const;
  void set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_temp_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      temp_avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_temp_avatar_guid_list();

  // @@protoc_insertion_point(class_scope:proto.AvatarTeamUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarTeamUpdateNotify_AvatarTeamMapEntry : public ::google::protobuf::internal::MapEntry<AvatarTeamUpdateNotify_AvatarTeamMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarTeam,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarTeamUpdateNotify_AvatarTeamMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarTeam,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarTeamUpdateNotify_AvatarTeamMapEntry();
    AvatarTeamUpdateNotify_AvatarTeamMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarTeamUpdateNotify_AvatarTeamMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarTeamUpdateNotify_AvatarTeamMapEntry,
      ::google::protobuf::uint32, ::proto::AvatarTeam,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > avatar_team_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > temp_avatar_guid_list_;
  mutable int _temp_avatar_guid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarDataNotify) */ {
 public:
  AvatarDataNotify();
  virtual ~AvatarDataNotify();

  AvatarDataNotify(const AvatarDataNotify& from);

  inline AvatarDataNotify& operator=(const AvatarDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarDataNotify(AvatarDataNotify&& from) noexcept
    : AvatarDataNotify() {
    *this = ::std::move(from);
  }

  inline AvatarDataNotify& operator=(AvatarDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarDataNotify& default_instance();

  static inline const AvatarDataNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarDataNotify*>(
               &_AvatarDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(AvatarDataNotify* other);
  friend void swap(AvatarDataNotify& a, AvatarDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarDataNotify& from);
  void MergeFrom(const AvatarDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarDataNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.AvatarInfo avatar_list = 1;
  int avatar_list_size() const;
  void clear_avatar_list();
  static const int kAvatarListFieldNumber = 1;
  const ::proto::AvatarInfo& avatar_list(int index) const;
  ::proto::AvatarInfo* mutable_avatar_list(int index);
  ::proto::AvatarInfo* add_avatar_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo >*
      mutable_avatar_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo >&
      avatar_list() const;

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
  int avatar_team_map_size() const;
  void clear_avatar_team_map();
  static const int kAvatarTeamMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
      avatar_team_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
      mutable_avatar_team_map();

  // repeated uint64 temp_avatar_guid_list = 5;
  int temp_avatar_guid_list_size() const;
  void clear_temp_avatar_guid_list();
  static const int kTempAvatarGuidListFieldNumber = 5;
  ::google::protobuf::uint64 temp_avatar_guid_list(int index) const;
  void set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_temp_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      temp_avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_temp_avatar_guid_list();

  // uint64 choose_avatar_guid = 4;
  void clear_choose_avatar_guid();
  static const int kChooseAvatarGuidFieldNumber = 4;
  ::google::protobuf::uint64 choose_avatar_guid() const;
  void set_choose_avatar_guid(::google::protobuf::uint64 value);

  // uint32 cur_avatar_team_id = 3;
  void clear_cur_avatar_team_id();
  static const int kCurAvatarTeamIdFieldNumber = 3;
  ::google::protobuf::uint32 cur_avatar_team_id() const;
  void set_cur_avatar_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo > avatar_list_;
  public:
  class AvatarDataNotify_AvatarTeamMapEntry : public ::google::protobuf::internal::MapEntry<AvatarDataNotify_AvatarTeamMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarTeam,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarDataNotify_AvatarTeamMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarTeam,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarDataNotify_AvatarTeamMapEntry();
    AvatarDataNotify_AvatarTeamMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarDataNotify_AvatarTeamMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarDataNotify_AvatarTeamMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarDataNotify_AvatarTeamMapEntry,
      ::google::protobuf::uint32, ::proto::AvatarTeam,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > avatar_team_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > temp_avatar_guid_list_;
  mutable int _temp_avatar_guid_list_cached_byte_size_;
  ::google::protobuf::uint64 choose_avatar_guid_;
  ::google::protobuf::uint32 cur_avatar_team_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarUpgradeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarUpgradeReq) */ {
 public:
  AvatarUpgradeReq();
  virtual ~AvatarUpgradeReq();

  AvatarUpgradeReq(const AvatarUpgradeReq& from);

  inline AvatarUpgradeReq& operator=(const AvatarUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarUpgradeReq(AvatarUpgradeReq&& from) noexcept
    : AvatarUpgradeReq() {
    *this = ::std::move(from);
  }

  inline AvatarUpgradeReq& operator=(AvatarUpgradeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarUpgradeReq& default_instance();

  static inline const AvatarUpgradeReq* internal_default_instance() {
    return reinterpret_cast<const AvatarUpgradeReq*>(
               &_AvatarUpgradeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AvatarUpgradeReq* other);
  friend void swap(AvatarUpgradeReq& a, AvatarUpgradeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarUpgradeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarUpgradeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarUpgradeReq& from);
  void MergeFrom(const AvatarUpgradeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarUpgradeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarUpgradeReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarUpgradeReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarUpgradeReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarUpgradeReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarUpgradeReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarUpgradeReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarUpgradeReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarUpgradeReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarUpgradeReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarUpgradeReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarUpgradeReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarUpgradeReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarUpgradeReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint64 avatar_guid = 3;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 3;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarUpgradeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarUpgradeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarUpgradeRsp) */ {
 public:
  AvatarUpgradeRsp();
  virtual ~AvatarUpgradeRsp();

  AvatarUpgradeRsp(const AvatarUpgradeRsp& from);

  inline AvatarUpgradeRsp& operator=(const AvatarUpgradeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarUpgradeRsp(AvatarUpgradeRsp&& from) noexcept
    : AvatarUpgradeRsp() {
    *this = ::std::move(from);
  }

  inline AvatarUpgradeRsp& operator=(AvatarUpgradeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarUpgradeRsp& default_instance();

  static inline const AvatarUpgradeRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarUpgradeRsp*>(
               &_AvatarUpgradeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(AvatarUpgradeRsp* other);
  friend void swap(AvatarUpgradeRsp& a, AvatarUpgradeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarUpgradeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarUpgradeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarUpgradeRsp& from);
  void MergeFrom(const AvatarUpgradeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarUpgradeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarUpgradeRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarUpgradeRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarUpgradeRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarUpgradeRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarUpgradeRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarUpgradeRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarUpgradeRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarUpgradeRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarUpgradeRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarUpgradeRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarUpgradeRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarUpgradeRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, float> old_fight_prop_map = 5;
  int old_fight_prop_map_size() const;
  void clear_old_fight_prop_map();
  static const int kOldFightPropMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      old_fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_old_fight_prop_map();

  // map<uint32, float> cur_fight_prop_map = 6;
  int cur_fight_prop_map_size() const;
  void clear_cur_fight_prop_map();
  static const int kCurFightPropMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      cur_fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_cur_fight_prop_map();

  // uint64 avatar_guid = 2;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 2;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 old_level = 3;
  void clear_old_level();
  static const int kOldLevelFieldNumber = 3;
  ::google::protobuf::uint32 old_level() const;
  void set_old_level(::google::protobuf::uint32 value);

  // uint32 cur_level = 4;
  void clear_cur_level();
  static const int kCurLevelFieldNumber = 4;
  ::google::protobuf::uint32 cur_level() const;
  void set_cur_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarUpgradeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarUpgradeRsp_OldFightPropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarUpgradeRsp_OldFightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarUpgradeRsp_OldFightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    AvatarUpgradeRsp_OldFightPropMapEntry();
    AvatarUpgradeRsp_OldFightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarUpgradeRsp_OldFightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarUpgradeRsp_OldFightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > old_fight_prop_map_;
  private:
  public:
  class AvatarUpgradeRsp_CurFightPropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarUpgradeRsp_CurFightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarUpgradeRsp_CurFightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    AvatarUpgradeRsp_CurFightPropMapEntry();
    AvatarUpgradeRsp_CurFightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarUpgradeRsp_CurFightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarUpgradeRsp_CurFightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > cur_fight_prop_map_;
  private:
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 old_level_;
  ::google::protobuf::uint32 cur_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarDieAnimationEndReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarDieAnimationEndReq) */ {
 public:
  AvatarDieAnimationEndReq();
  virtual ~AvatarDieAnimationEndReq();

  AvatarDieAnimationEndReq(const AvatarDieAnimationEndReq& from);

  inline AvatarDieAnimationEndReq& operator=(const AvatarDieAnimationEndReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarDieAnimationEndReq(AvatarDieAnimationEndReq&& from) noexcept
    : AvatarDieAnimationEndReq() {
    *this = ::std::move(from);
  }

  inline AvatarDieAnimationEndReq& operator=(AvatarDieAnimationEndReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarDieAnimationEndReq& default_instance();

  static inline const AvatarDieAnimationEndReq* internal_default_instance() {
    return reinterpret_cast<const AvatarDieAnimationEndReq*>(
               &_AvatarDieAnimationEndReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(AvatarDieAnimationEndReq* other);
  friend void swap(AvatarDieAnimationEndReq& a, AvatarDieAnimationEndReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarDieAnimationEndReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarDieAnimationEndReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarDieAnimationEndReq& from);
  void MergeFrom(const AvatarDieAnimationEndReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarDieAnimationEndReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarDieAnimationEndReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarDieAnimationEndReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarDieAnimationEndReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarDieAnimationEndReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarDieAnimationEndReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarDieAnimationEndReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarDieAnimationEndReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarDieAnimationEndReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarDieAnimationEndReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarDieAnimationEndReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarDieAnimationEndReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarDieAnimationEndReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarDieAnimationEndReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector reborn_pos = 3;
  bool has_reborn_pos() const;
  void clear_reborn_pos();
  static const int kRebornPosFieldNumber = 3;
  const ::proto::Vector& reborn_pos() const;
  ::proto::Vector* mutable_reborn_pos();
  ::proto::Vector* release_reborn_pos();
  void set_allocated_reborn_pos(::proto::Vector* reborn_pos);

  // uint64 die_guid = 1;
  void clear_die_guid();
  static const int kDieGuidFieldNumber = 1;
  ::google::protobuf::uint64 die_guid() const;
  void set_die_guid(::google::protobuf::uint64 value);

  // uint32 skill_id = 2;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarDieAnimationEndReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* reborn_pos_;
  ::google::protobuf::uint64 die_guid_;
  ::google::protobuf::uint32 skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarDieAnimationEndRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarDieAnimationEndRsp) */ {
 public:
  AvatarDieAnimationEndRsp();
  virtual ~AvatarDieAnimationEndRsp();

  AvatarDieAnimationEndRsp(const AvatarDieAnimationEndRsp& from);

  inline AvatarDieAnimationEndRsp& operator=(const AvatarDieAnimationEndRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarDieAnimationEndRsp(AvatarDieAnimationEndRsp&& from) noexcept
    : AvatarDieAnimationEndRsp() {
    *this = ::std::move(from);
  }

  inline AvatarDieAnimationEndRsp& operator=(AvatarDieAnimationEndRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarDieAnimationEndRsp& default_instance();

  static inline const AvatarDieAnimationEndRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarDieAnimationEndRsp*>(
               &_AvatarDieAnimationEndRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(AvatarDieAnimationEndRsp* other);
  friend void swap(AvatarDieAnimationEndRsp& a, AvatarDieAnimationEndRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarDieAnimationEndRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarDieAnimationEndRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarDieAnimationEndRsp& from);
  void MergeFrom(const AvatarDieAnimationEndRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarDieAnimationEndRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarDieAnimationEndRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarDieAnimationEndRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarDieAnimationEndRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarDieAnimationEndRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarDieAnimationEndRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarDieAnimationEndRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarDieAnimationEndRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarDieAnimationEndRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarDieAnimationEndRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarDieAnimationEndRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarDieAnimationEndRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarDieAnimationEndRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 die_guid = 2;
  void clear_die_guid();
  static const int kDieGuidFieldNumber = 2;
  ::google::protobuf::uint64 die_guid() const;
  void set_die_guid(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 skill_id = 3;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarDieAnimationEndRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 die_guid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarChangeElementTypeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarChangeElementTypeReq) */ {
 public:
  AvatarChangeElementTypeReq();
  virtual ~AvatarChangeElementTypeReq();

  AvatarChangeElementTypeReq(const AvatarChangeElementTypeReq& from);

  inline AvatarChangeElementTypeReq& operator=(const AvatarChangeElementTypeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarChangeElementTypeReq(AvatarChangeElementTypeReq&& from) noexcept
    : AvatarChangeElementTypeReq() {
    *this = ::std::move(from);
  }

  inline AvatarChangeElementTypeReq& operator=(AvatarChangeElementTypeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarChangeElementTypeReq& default_instance();

  static inline const AvatarChangeElementTypeReq* internal_default_instance() {
    return reinterpret_cast<const AvatarChangeElementTypeReq*>(
               &_AvatarChangeElementTypeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AvatarChangeElementTypeReq* other);
  friend void swap(AvatarChangeElementTypeReq& a, AvatarChangeElementTypeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarChangeElementTypeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarChangeElementTypeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarChangeElementTypeReq& from);
  void MergeFrom(const AvatarChangeElementTypeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarChangeElementTypeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarChangeElementTypeReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarChangeElementTypeReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarChangeElementTypeReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarChangeElementTypeReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarChangeElementTypeReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarChangeElementTypeReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarChangeElementTypeReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarChangeElementTypeReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarChangeElementTypeReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarChangeElementTypeReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarChangeElementTypeReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarChangeElementTypeReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarChangeElementTypeReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 area_id = 2;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 2;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarChangeElementTypeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarChangeElementTypeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarChangeElementTypeRsp) */ {
 public:
  AvatarChangeElementTypeRsp();
  virtual ~AvatarChangeElementTypeRsp();

  AvatarChangeElementTypeRsp(const AvatarChangeElementTypeRsp& from);

  inline AvatarChangeElementTypeRsp& operator=(const AvatarChangeElementTypeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarChangeElementTypeRsp(AvatarChangeElementTypeRsp&& from) noexcept
    : AvatarChangeElementTypeRsp() {
    *this = ::std::move(from);
  }

  inline AvatarChangeElementTypeRsp& operator=(AvatarChangeElementTypeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarChangeElementTypeRsp& default_instance();

  static inline const AvatarChangeElementTypeRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarChangeElementTypeRsp*>(
               &_AvatarChangeElementTypeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(AvatarChangeElementTypeRsp* other);
  friend void swap(AvatarChangeElementTypeRsp& a, AvatarChangeElementTypeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarChangeElementTypeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarChangeElementTypeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarChangeElementTypeRsp& from);
  void MergeFrom(const AvatarChangeElementTypeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarChangeElementTypeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarChangeElementTypeRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarChangeElementTypeRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarChangeElementTypeRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarChangeElementTypeRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarChangeElementTypeRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarChangeElementTypeRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarChangeElementTypeRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarChangeElementTypeRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarChangeElementTypeRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarChangeElementTypeRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarChangeElementTypeRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarChangeElementTypeRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarChangeElementTypeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarFetterDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarFetterDataNotify) */ {
 public:
  AvatarFetterDataNotify();
  virtual ~AvatarFetterDataNotify();

  AvatarFetterDataNotify(const AvatarFetterDataNotify& from);

  inline AvatarFetterDataNotify& operator=(const AvatarFetterDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarFetterDataNotify(AvatarFetterDataNotify&& from) noexcept
    : AvatarFetterDataNotify() {
    *this = ::std::move(from);
  }

  inline AvatarFetterDataNotify& operator=(AvatarFetterDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarFetterDataNotify& default_instance();

  static inline const AvatarFetterDataNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarFetterDataNotify*>(
               &_AvatarFetterDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AvatarFetterDataNotify* other);
  friend void swap(AvatarFetterDataNotify& a, AvatarFetterDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarFetterDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarFetterDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarFetterDataNotify& from);
  void MergeFrom(const AvatarFetterDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarFetterDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarFetterDataNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarFetterDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarFetterDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarFetterDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarFetterDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarFetterDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarFetterDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarFetterDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarFetterDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarFetterDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarFetterDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarFetterDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 1;
  int fetter_info_map_size() const;
  void clear_fetter_info_map();
  static const int kFetterInfoMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >&
      fetter_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >*
      mutable_fetter_info_map();

  // @@protoc_insertion_point(class_scope:proto.AvatarFetterDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarFetterDataNotify_FetterInfoMapEntry : public ::google::protobuf::internal::MapEntry<AvatarFetterDataNotify_FetterInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarFetterInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarFetterDataNotify_FetterInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarFetterInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarFetterDataNotify_FetterInfoMapEntry();
    AvatarFetterDataNotify_FetterInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarFetterDataNotify_FetterInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarFetterDataNotify_FetterInfoMapEntry,
      ::google::protobuf::uint64, ::proto::AvatarFetterInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > fetter_info_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarExpeditionDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionDataNotify) */ {
 public:
  AvatarExpeditionDataNotify();
  virtual ~AvatarExpeditionDataNotify();

  AvatarExpeditionDataNotify(const AvatarExpeditionDataNotify& from);

  inline AvatarExpeditionDataNotify& operator=(const AvatarExpeditionDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionDataNotify(AvatarExpeditionDataNotify&& from) noexcept
    : AvatarExpeditionDataNotify() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionDataNotify& operator=(AvatarExpeditionDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionDataNotify& default_instance();

  static inline const AvatarExpeditionDataNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionDataNotify*>(
               &_AvatarExpeditionDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(AvatarExpeditionDataNotify* other);
  friend void swap(AvatarExpeditionDataNotify& a, AvatarExpeditionDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionDataNotify& from);
  void MergeFrom(const AvatarExpeditionDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarExpeditionDataNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 1;
  int expedition_info_map_size() const;
  void clear_expedition_info_map();
  static const int kExpeditionInfoMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
      expedition_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
      mutable_expedition_info_map();

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarExpeditionDataNotify_ExpeditionInfoMapEntry : public ::google::protobuf::internal::MapEntry<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarExpeditionDataNotify_ExpeditionInfoMapEntry();
    AvatarExpeditionDataNotify_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarExpeditionDataNotify_ExpeditionInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarExpeditionDataNotify_ExpeditionInfoMapEntry,
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > expedition_info_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExpeditionAllDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionAllDataReq) */ {
 public:
  AvatarExpeditionAllDataReq();
  virtual ~AvatarExpeditionAllDataReq();

  AvatarExpeditionAllDataReq(const AvatarExpeditionAllDataReq& from);

  inline AvatarExpeditionAllDataReq& operator=(const AvatarExpeditionAllDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionAllDataReq(AvatarExpeditionAllDataReq&& from) noexcept
    : AvatarExpeditionAllDataReq() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionAllDataReq& operator=(AvatarExpeditionAllDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionAllDataReq& default_instance();

  static inline const AvatarExpeditionAllDataReq* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionAllDataReq*>(
               &_AvatarExpeditionAllDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AvatarExpeditionAllDataReq* other);
  friend void swap(AvatarExpeditionAllDataReq& a, AvatarExpeditionAllDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionAllDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionAllDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionAllDataReq& from);
  void MergeFrom(const AvatarExpeditionAllDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionAllDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarExpeditionAllDataReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionAllDataReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionAllDataReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionAllDataReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionAllDataReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarExpeditionAllDataReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionAllDataReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionAllDataReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionAllDataReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionAllDataReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionAllDataReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionAllDataReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionAllDataReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionAllDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarExpeditionAllDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionAllDataRsp) */ {
 public:
  AvatarExpeditionAllDataRsp();
  virtual ~AvatarExpeditionAllDataRsp();

  AvatarExpeditionAllDataRsp(const AvatarExpeditionAllDataRsp& from);

  inline AvatarExpeditionAllDataRsp& operator=(const AvatarExpeditionAllDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionAllDataRsp(AvatarExpeditionAllDataRsp&& from) noexcept
    : AvatarExpeditionAllDataRsp() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionAllDataRsp& operator=(AvatarExpeditionAllDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionAllDataRsp& default_instance();

  static inline const AvatarExpeditionAllDataRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionAllDataRsp*>(
               &_AvatarExpeditionAllDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(AvatarExpeditionAllDataRsp* other);
  friend void swap(AvatarExpeditionAllDataRsp& a, AvatarExpeditionAllDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionAllDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionAllDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionAllDataRsp& from);
  void MergeFrom(const AvatarExpeditionAllDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionAllDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarExpeditionAllDataRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionAllDataRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionAllDataRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionAllDataRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionAllDataRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionAllDataRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionAllDataRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionAllDataRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionAllDataRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionAllDataRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionAllDataRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionAllDataRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  int expedition_info_map_size() const;
  void clear_expedition_info_map();
  static const int kExpeditionInfoMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
      expedition_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
      mutable_expedition_info_map();

  // repeated uint32 open_expedition_list = 3;
  int open_expedition_list_size() const;
  void clear_open_expedition_list();
  static const int kOpenExpeditionListFieldNumber = 3;
  ::google::protobuf::uint32 open_expedition_list(int index) const;
  void set_open_expedition_list(int index, ::google::protobuf::uint32 value);
  void add_open_expedition_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      open_expedition_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_open_expedition_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 expedition_count_limit = 4;
  void clear_expedition_count_limit();
  static const int kExpeditionCountLimitFieldNumber = 4;
  ::google::protobuf::uint32 expedition_count_limit() const;
  void set_expedition_count_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionAllDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry : public ::google::protobuf::internal::MapEntry<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry();
    AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry,
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > expedition_info_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > open_expedition_list_;
  mutable int _open_expedition_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 expedition_count_limit_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExpeditionStartReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionStartReq) */ {
 public:
  AvatarExpeditionStartReq();
  virtual ~AvatarExpeditionStartReq();

  AvatarExpeditionStartReq(const AvatarExpeditionStartReq& from);

  inline AvatarExpeditionStartReq& operator=(const AvatarExpeditionStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionStartReq(AvatarExpeditionStartReq&& from) noexcept
    : AvatarExpeditionStartReq() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionStartReq& operator=(AvatarExpeditionStartReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionStartReq& default_instance();

  static inline const AvatarExpeditionStartReq* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionStartReq*>(
               &_AvatarExpeditionStartReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(AvatarExpeditionStartReq* other);
  friend void swap(AvatarExpeditionStartReq& a, AvatarExpeditionStartReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionStartReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionStartReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionStartReq& from);
  void MergeFrom(const AvatarExpeditionStartReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionStartReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarExpeditionStartReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionStartReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionStartReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionStartReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionStartReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarExpeditionStartReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionStartReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionStartReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionStartReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionStartReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionStartReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionStartReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionStartReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 avatar_guid = 1;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 exp_id = 2;
  void clear_exp_id();
  static const int kExpIdFieldNumber = 2;
  ::google::protobuf::uint32 exp_id() const;
  void set_exp_id(::google::protobuf::uint32 value);

  // uint32 hour_time = 3;
  void clear_hour_time();
  static const int kHourTimeFieldNumber = 3;
  ::google::protobuf::uint32 hour_time() const;
  void set_hour_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionStartReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 exp_id_;
  ::google::protobuf::uint32 hour_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarExpeditionStartRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionStartRsp) */ {
 public:
  AvatarExpeditionStartRsp();
  virtual ~AvatarExpeditionStartRsp();

  AvatarExpeditionStartRsp(const AvatarExpeditionStartRsp& from);

  inline AvatarExpeditionStartRsp& operator=(const AvatarExpeditionStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionStartRsp(AvatarExpeditionStartRsp&& from) noexcept
    : AvatarExpeditionStartRsp() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionStartRsp& operator=(AvatarExpeditionStartRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionStartRsp& default_instance();

  static inline const AvatarExpeditionStartRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionStartRsp*>(
               &_AvatarExpeditionStartRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(AvatarExpeditionStartRsp* other);
  friend void swap(AvatarExpeditionStartRsp& a, AvatarExpeditionStartRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionStartRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionStartRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionStartRsp& from);
  void MergeFrom(const AvatarExpeditionStartRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionStartRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarExpeditionStartRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionStartRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionStartRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionStartRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionStartRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionStartRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionStartRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionStartRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionStartRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionStartRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionStartRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionStartRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  int expedition_info_map_size() const;
  void clear_expedition_info_map();
  static const int kExpeditionInfoMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
      expedition_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
      mutable_expedition_info_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionStartRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarExpeditionStartRsp_ExpeditionInfoMapEntry : public ::google::protobuf::internal::MapEntry<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarExpeditionStartRsp_ExpeditionInfoMapEntry();
    AvatarExpeditionStartRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarExpeditionStartRsp_ExpeditionInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarExpeditionStartRsp_ExpeditionInfoMapEntry,
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > expedition_info_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExpeditionCallBackReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionCallBackReq) */ {
 public:
  AvatarExpeditionCallBackReq();
  virtual ~AvatarExpeditionCallBackReq();

  AvatarExpeditionCallBackReq(const AvatarExpeditionCallBackReq& from);

  inline AvatarExpeditionCallBackReq& operator=(const AvatarExpeditionCallBackReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionCallBackReq(AvatarExpeditionCallBackReq&& from) noexcept
    : AvatarExpeditionCallBackReq() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionCallBackReq& operator=(AvatarExpeditionCallBackReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionCallBackReq& default_instance();

  static inline const AvatarExpeditionCallBackReq* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionCallBackReq*>(
               &_AvatarExpeditionCallBackReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(AvatarExpeditionCallBackReq* other);
  friend void swap(AvatarExpeditionCallBackReq& a, AvatarExpeditionCallBackReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionCallBackReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionCallBackReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionCallBackReq& from);
  void MergeFrom(const AvatarExpeditionCallBackReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionCallBackReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarExpeditionCallBackReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionCallBackReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionCallBackReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionCallBackReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionCallBackReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarExpeditionCallBackReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionCallBackReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionCallBackReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionCallBackReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionCallBackReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionCallBackReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionCallBackReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionCallBackReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid = 1;
  int avatar_guid_size() const;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid(int index) const;
  void set_avatar_guid(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid();

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionCallBackReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_;
  mutable int _avatar_guid_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarExpeditionCallBackRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionCallBackRsp) */ {
 public:
  AvatarExpeditionCallBackRsp();
  virtual ~AvatarExpeditionCallBackRsp();

  AvatarExpeditionCallBackRsp(const AvatarExpeditionCallBackRsp& from);

  inline AvatarExpeditionCallBackRsp& operator=(const AvatarExpeditionCallBackRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionCallBackRsp(AvatarExpeditionCallBackRsp&& from) noexcept
    : AvatarExpeditionCallBackRsp() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionCallBackRsp& operator=(AvatarExpeditionCallBackRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionCallBackRsp& default_instance();

  static inline const AvatarExpeditionCallBackRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionCallBackRsp*>(
               &_AvatarExpeditionCallBackRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(AvatarExpeditionCallBackRsp* other);
  friend void swap(AvatarExpeditionCallBackRsp& a, AvatarExpeditionCallBackRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionCallBackRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionCallBackRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionCallBackRsp& from);
  void MergeFrom(const AvatarExpeditionCallBackRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionCallBackRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarExpeditionCallBackRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionCallBackRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionCallBackRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionCallBackRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionCallBackRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionCallBackRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionCallBackRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionCallBackRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionCallBackRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionCallBackRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionCallBackRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionCallBackRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  int expedition_info_map_size() const;
  void clear_expedition_info_map();
  static const int kExpeditionInfoMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
      expedition_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
      mutable_expedition_info_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionCallBackRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry : public ::google::protobuf::internal::MapEntry<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry();
    AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry,
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > expedition_info_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExpeditionGetRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionGetRewardReq) */ {
 public:
  AvatarExpeditionGetRewardReq();
  virtual ~AvatarExpeditionGetRewardReq();

  AvatarExpeditionGetRewardReq(const AvatarExpeditionGetRewardReq& from);

  inline AvatarExpeditionGetRewardReq& operator=(const AvatarExpeditionGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionGetRewardReq(AvatarExpeditionGetRewardReq&& from) noexcept
    : AvatarExpeditionGetRewardReq() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionGetRewardReq& operator=(AvatarExpeditionGetRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionGetRewardReq& default_instance();

  static inline const AvatarExpeditionGetRewardReq* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionGetRewardReq*>(
               &_AvatarExpeditionGetRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(AvatarExpeditionGetRewardReq* other);
  friend void swap(AvatarExpeditionGetRewardReq& a, AvatarExpeditionGetRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionGetRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionGetRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionGetRewardReq& from);
  void MergeFrom(const AvatarExpeditionGetRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionGetRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarExpeditionGetRewardReq_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionGetRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionGetRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionGetRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionGetRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarExpeditionGetRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionGetRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionGetRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionGetRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionGetRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionGetRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionGetRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionGetRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 avatar_guid = 1;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionGetRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarExpeditionGetRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionGetRewardRsp) */ {
 public:
  AvatarExpeditionGetRewardRsp();
  virtual ~AvatarExpeditionGetRewardRsp();

  AvatarExpeditionGetRewardRsp(const AvatarExpeditionGetRewardRsp& from);

  inline AvatarExpeditionGetRewardRsp& operator=(const AvatarExpeditionGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionGetRewardRsp(AvatarExpeditionGetRewardRsp&& from) noexcept
    : AvatarExpeditionGetRewardRsp() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionGetRewardRsp& operator=(AvatarExpeditionGetRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionGetRewardRsp& default_instance();

  static inline const AvatarExpeditionGetRewardRsp* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionGetRewardRsp*>(
               &_AvatarExpeditionGetRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(AvatarExpeditionGetRewardRsp* other);
  friend void swap(AvatarExpeditionGetRewardRsp& a, AvatarExpeditionGetRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionGetRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionGetRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionGetRewardRsp& from);
  void MergeFrom(const AvatarExpeditionGetRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionGetRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef AvatarExpeditionGetRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    AvatarExpeditionGetRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarExpeditionGetRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarExpeditionGetRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarExpeditionGetRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarExpeditionGetRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarExpeditionGetRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarExpeditionGetRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarExpeditionGetRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarExpeditionGetRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarExpeditionGetRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarExpeditionGetRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  int expedition_info_map_size() const;
  void clear_expedition_info_map();
  static const int kExpeditionInfoMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
      expedition_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
      mutable_expedition_info_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionGetRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry : public ::google::protobuf::internal::MapEntry<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry, 
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry();
    AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry,
      ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > expedition_info_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeMpTeamAvatarReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeMpTeamAvatarReq) */ {
 public:
  ChangeMpTeamAvatarReq();
  virtual ~ChangeMpTeamAvatarReq();

  ChangeMpTeamAvatarReq(const ChangeMpTeamAvatarReq& from);

  inline ChangeMpTeamAvatarReq& operator=(const ChangeMpTeamAvatarReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeMpTeamAvatarReq(ChangeMpTeamAvatarReq&& from) noexcept
    : ChangeMpTeamAvatarReq() {
    *this = ::std::move(from);
  }

  inline ChangeMpTeamAvatarReq& operator=(ChangeMpTeamAvatarReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeMpTeamAvatarReq& default_instance();

  static inline const ChangeMpTeamAvatarReq* internal_default_instance() {
    return reinterpret_cast<const ChangeMpTeamAvatarReq*>(
               &_ChangeMpTeamAvatarReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(ChangeMpTeamAvatarReq* other);
  friend void swap(ChangeMpTeamAvatarReq& a, ChangeMpTeamAvatarReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeMpTeamAvatarReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeMpTeamAvatarReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeMpTeamAvatarReq& from);
  void MergeFrom(const ChangeMpTeamAvatarReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeMpTeamAvatarReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeMpTeamAvatarReq_CmdId CmdId;
  static const CmdId NONE =
    ChangeMpTeamAvatarReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeMpTeamAvatarReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeMpTeamAvatarReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeMpTeamAvatarReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChangeMpTeamAvatarReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChangeMpTeamAvatarReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeMpTeamAvatarReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeMpTeamAvatarReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeMpTeamAvatarReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeMpTeamAvatarReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeMpTeamAvatarReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeMpTeamAvatarReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid_list = 1;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // uint64 cur_avatar_guid = 2;
  void clear_cur_avatar_guid();
  static const int kCurAvatarGuidFieldNumber = 2;
  ::google::protobuf::uint64 cur_avatar_guid() const;
  void set_cur_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeMpTeamAvatarReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  ::google::protobuf::uint64 cur_avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeMpTeamAvatarRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeMpTeamAvatarRsp) */ {
 public:
  ChangeMpTeamAvatarRsp();
  virtual ~ChangeMpTeamAvatarRsp();

  ChangeMpTeamAvatarRsp(const ChangeMpTeamAvatarRsp& from);

  inline ChangeMpTeamAvatarRsp& operator=(const ChangeMpTeamAvatarRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeMpTeamAvatarRsp(ChangeMpTeamAvatarRsp&& from) noexcept
    : ChangeMpTeamAvatarRsp() {
    *this = ::std::move(from);
  }

  inline ChangeMpTeamAvatarRsp& operator=(ChangeMpTeamAvatarRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeMpTeamAvatarRsp& default_instance();

  static inline const ChangeMpTeamAvatarRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeMpTeamAvatarRsp*>(
               &_ChangeMpTeamAvatarRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(ChangeMpTeamAvatarRsp* other);
  friend void swap(ChangeMpTeamAvatarRsp& a, ChangeMpTeamAvatarRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeMpTeamAvatarRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeMpTeamAvatarRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeMpTeamAvatarRsp& from);
  void MergeFrom(const ChangeMpTeamAvatarRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeMpTeamAvatarRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeMpTeamAvatarRsp_CmdId CmdId;
  static const CmdId NONE =
    ChangeMpTeamAvatarRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeMpTeamAvatarRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeMpTeamAvatarRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeMpTeamAvatarRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChangeMpTeamAvatarRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeMpTeamAvatarRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeMpTeamAvatarRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeMpTeamAvatarRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeMpTeamAvatarRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeMpTeamAvatarRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeMpTeamAvatarRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid_list = 2;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 2;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // uint64 cur_avatar_guid = 3;
  void clear_cur_avatar_guid();
  static const int kCurAvatarGuidFieldNumber = 3;
  ::google::protobuf::uint64 cur_avatar_guid() const;
  void set_cur_avatar_guid(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeMpTeamAvatarRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  ::google::protobuf::uint64 cur_avatar_guid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeTeamNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeTeamNameReq) */ {
 public:
  ChangeTeamNameReq();
  virtual ~ChangeTeamNameReq();

  ChangeTeamNameReq(const ChangeTeamNameReq& from);

  inline ChangeTeamNameReq& operator=(const ChangeTeamNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeTeamNameReq(ChangeTeamNameReq&& from) noexcept
    : ChangeTeamNameReq() {
    *this = ::std::move(from);
  }

  inline ChangeTeamNameReq& operator=(ChangeTeamNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeTeamNameReq& default_instance();

  static inline const ChangeTeamNameReq* internal_default_instance() {
    return reinterpret_cast<const ChangeTeamNameReq*>(
               &_ChangeTeamNameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(ChangeTeamNameReq* other);
  friend void swap(ChangeTeamNameReq& a, ChangeTeamNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeTeamNameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeTeamNameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeTeamNameReq& from);
  void MergeFrom(const ChangeTeamNameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeTeamNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeTeamNameReq_CmdId CmdId;
  static const CmdId NONE =
    ChangeTeamNameReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeTeamNameReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeTeamNameReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeTeamNameReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChangeTeamNameReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChangeTeamNameReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeTeamNameReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeTeamNameReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeTeamNameReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeTeamNameReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeTeamNameReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeTeamNameReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string team_name = 2;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // int32 team_id = 1;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::int32 team_id() const;
  void set_team_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeTeamNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::int32 team_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeTeamNameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeTeamNameRsp) */ {
 public:
  ChangeTeamNameRsp();
  virtual ~ChangeTeamNameRsp();

  ChangeTeamNameRsp(const ChangeTeamNameRsp& from);

  inline ChangeTeamNameRsp& operator=(const ChangeTeamNameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeTeamNameRsp(ChangeTeamNameRsp&& from) noexcept
    : ChangeTeamNameRsp() {
    *this = ::std::move(from);
  }

  inline ChangeTeamNameRsp& operator=(ChangeTeamNameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeTeamNameRsp& default_instance();

  static inline const ChangeTeamNameRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeTeamNameRsp*>(
               &_ChangeTeamNameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(ChangeTeamNameRsp* other);
  friend void swap(ChangeTeamNameRsp& a, ChangeTeamNameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeTeamNameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeTeamNameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeTeamNameRsp& from);
  void MergeFrom(const ChangeTeamNameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeTeamNameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeTeamNameRsp_CmdId CmdId;
  static const CmdId NONE =
    ChangeTeamNameRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeTeamNameRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeTeamNameRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeTeamNameRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChangeTeamNameRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeTeamNameRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeTeamNameRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeTeamNameRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeTeamNameRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeTeamNameRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeTeamNameRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string team_name = 2;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // int32 team_id = 1;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::int32 team_id() const;
  void set_team_id(::google::protobuf::int32 value);

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeTeamNameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::int32 team_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTeamAvatar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTeamAvatar) */ {
 public:
  SceneTeamAvatar();
  virtual ~SceneTeamAvatar();

  SceneTeamAvatar(const SceneTeamAvatar& from);

  inline SceneTeamAvatar& operator=(const SceneTeamAvatar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTeamAvatar(SceneTeamAvatar&& from) noexcept
    : SceneTeamAvatar() {
    *this = ::std::move(from);
  }

  inline SceneTeamAvatar& operator=(SceneTeamAvatar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTeamAvatar& default_instance();

  static inline const SceneTeamAvatar* internal_default_instance() {
    return reinterpret_cast<const SceneTeamAvatar*>(
               &_SceneTeamAvatar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SceneTeamAvatar* other);
  friend void swap(SceneTeamAvatar& a, SceneTeamAvatar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTeamAvatar* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTeamAvatar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTeamAvatar& from);
  void MergeFrom(const SceneTeamAvatar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTeamAvatar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AvatarInfo avatar_info = 5;
  bool has_avatar_info() const;
  void clear_avatar_info();
  static const int kAvatarInfoFieldNumber = 5;
  const ::proto::AvatarInfo& avatar_info() const;
  ::proto::AvatarInfo* mutable_avatar_info();
  ::proto::AvatarInfo* release_avatar_info();
  void set_allocated_avatar_info(::proto::AvatarInfo* avatar_info);

  // .proto.SceneAvatarInfo scene_avatar_info = 6;
  bool has_scene_avatar_info() const;
  void clear_scene_avatar_info();
  static const int kSceneAvatarInfoFieldNumber = 6;
  const ::proto::SceneAvatarInfo& scene_avatar_info() const;
  ::proto::SceneAvatarInfo* mutable_scene_avatar_info();
  ::proto::SceneAvatarInfo* release_scene_avatar_info();
  void set_allocated_scene_avatar_info(::proto::SceneAvatarInfo* scene_avatar_info);

  // uint64 avatar_guid = 2;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 2;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 player_uid = 1;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 1;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // uint32 scene_id = 3;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTeamAvatar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AvatarInfo* avatar_info_;
  ::proto::SceneAvatarInfo* scene_avatar_info_;
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 player_uid_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTeamUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTeamUpdateNotify) */ {
 public:
  SceneTeamUpdateNotify();
  virtual ~SceneTeamUpdateNotify();

  SceneTeamUpdateNotify(const SceneTeamUpdateNotify& from);

  inline SceneTeamUpdateNotify& operator=(const SceneTeamUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTeamUpdateNotify(SceneTeamUpdateNotify&& from) noexcept
    : SceneTeamUpdateNotify() {
    *this = ::std::move(from);
  }

  inline SceneTeamUpdateNotify& operator=(SceneTeamUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTeamUpdateNotify& default_instance();

  static inline const SceneTeamUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const SceneTeamUpdateNotify*>(
               &_SceneTeamUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SceneTeamUpdateNotify* other);
  friend void swap(SceneTeamUpdateNotify& a, SceneTeamUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTeamUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTeamUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTeamUpdateNotify& from);
  void MergeFrom(const SceneTeamUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTeamUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneTeamUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneTeamUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneTeamUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneTeamUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneTeamUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneTeamUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneTeamUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneTeamUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneTeamUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneTeamUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneTeamUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneTeamUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.SceneTeamAvatar scene_team_avatar_list = 1;
  int scene_team_avatar_list_size() const;
  void clear_scene_team_avatar_list();
  static const int kSceneTeamAvatarListFieldNumber = 1;
  const ::proto::SceneTeamAvatar& scene_team_avatar_list(int index) const;
  ::proto::SceneTeamAvatar* mutable_scene_team_avatar_list(int index);
  ::proto::SceneTeamAvatar* add_scene_team_avatar_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar >*
      mutable_scene_team_avatar_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar >&
      scene_team_avatar_list() const;

  // repeated .proto.MPDisplayCurAvatar display_cur_avatar_list = 2;
  int display_cur_avatar_list_size() const;
  void clear_display_cur_avatar_list();
  static const int kDisplayCurAvatarListFieldNumber = 2;
  const ::proto::MPDisplayCurAvatar& display_cur_avatar_list(int index) const;
  ::proto::MPDisplayCurAvatar* mutable_display_cur_avatar_list(int index);
  ::proto::MPDisplayCurAvatar* add_display_cur_avatar_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MPDisplayCurAvatar >*
      mutable_display_cur_avatar_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MPDisplayCurAvatar >&
      display_cur_avatar_list() const;

  // bool is_in_mp = 3;
  void clear_is_in_mp();
  static const int kIsInMpFieldNumber = 3;
  bool is_in_mp() const;
  void set_is_in_mp(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneTeamUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar > scene_team_avatar_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::MPDisplayCurAvatar > display_cur_avatar_list_;
  bool is_in_mp_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MPDisplayCurAvatar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MPDisplayCurAvatar) */ {
 public:
  MPDisplayCurAvatar();
  virtual ~MPDisplayCurAvatar();

  MPDisplayCurAvatar(const MPDisplayCurAvatar& from);

  inline MPDisplayCurAvatar& operator=(const MPDisplayCurAvatar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MPDisplayCurAvatar(MPDisplayCurAvatar&& from) noexcept
    : MPDisplayCurAvatar() {
    *this = ::std::move(from);
  }

  inline MPDisplayCurAvatar& operator=(MPDisplayCurAvatar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MPDisplayCurAvatar& default_instance();

  static inline const MPDisplayCurAvatar* internal_default_instance() {
    return reinterpret_cast<const MPDisplayCurAvatar*>(
               &_MPDisplayCurAvatar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(MPDisplayCurAvatar* other);
  friend void swap(MPDisplayCurAvatar& a, MPDisplayCurAvatar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MPDisplayCurAvatar* New() const PROTOBUF_FINAL { return New(NULL); }

  MPDisplayCurAvatar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MPDisplayCurAvatar& from);
  void MergeFrom(const MPDisplayCurAvatar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MPDisplayCurAvatar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, float> fight_prop_map = 4;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // uint64 avatar_guid = 2;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 2;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 player_uid = 1;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 1;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // uint32 life_state = 3;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 3;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MPDisplayCurAvatar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class MPDisplayCurAvatar_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<MPDisplayCurAvatar_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MPDisplayCurAvatar_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    MPDisplayCurAvatar_FightPropMapEntry();
    MPDisplayCurAvatar_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MPDisplayCurAvatar_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MPDisplayCurAvatar_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MPDisplayCurAvatar_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 player_uid_;
  ::google::protobuf::uint32 life_state_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTeamMPDisplayCurAvatarNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTeamMPDisplayCurAvatarNotify) */ {
 public:
  SceneTeamMPDisplayCurAvatarNotify();
  virtual ~SceneTeamMPDisplayCurAvatarNotify();

  SceneTeamMPDisplayCurAvatarNotify(const SceneTeamMPDisplayCurAvatarNotify& from);

  inline SceneTeamMPDisplayCurAvatarNotify& operator=(const SceneTeamMPDisplayCurAvatarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTeamMPDisplayCurAvatarNotify(SceneTeamMPDisplayCurAvatarNotify&& from) noexcept
    : SceneTeamMPDisplayCurAvatarNotify() {
    *this = ::std::move(from);
  }

  inline SceneTeamMPDisplayCurAvatarNotify& operator=(SceneTeamMPDisplayCurAvatarNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTeamMPDisplayCurAvatarNotify& default_instance();

  static inline const SceneTeamMPDisplayCurAvatarNotify* internal_default_instance() {
    return reinterpret_cast<const SceneTeamMPDisplayCurAvatarNotify*>(
               &_SceneTeamMPDisplayCurAvatarNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(SceneTeamMPDisplayCurAvatarNotify* other);
  friend void swap(SceneTeamMPDisplayCurAvatarNotify& a, SceneTeamMPDisplayCurAvatarNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTeamMPDisplayCurAvatarNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTeamMPDisplayCurAvatarNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTeamMPDisplayCurAvatarNotify& from);
  void MergeFrom(const SceneTeamMPDisplayCurAvatarNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTeamMPDisplayCurAvatarNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneTeamMPDisplayCurAvatarNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneTeamMPDisplayCurAvatarNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneTeamMPDisplayCurAvatarNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneTeamMPDisplayCurAvatarNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneTeamMPDisplayCurAvatarNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneTeamMPDisplayCurAvatarNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MPDisplayCurAvatar display_cur_avatar = 1;
  bool has_display_cur_avatar() const;
  void clear_display_cur_avatar();
  static const int kDisplayCurAvatarFieldNumber = 1;
  const ::proto::MPDisplayCurAvatar& display_cur_avatar() const;
  ::proto::MPDisplayCurAvatar* mutable_display_cur_avatar();
  ::proto::MPDisplayCurAvatar* release_display_cur_avatar();
  void set_allocated_display_cur_avatar(::proto::MPDisplayCurAvatar* display_cur_avatar);

  // @@protoc_insertion_point(class_scope:proto.SceneTeamMPDisplayCurAvatarNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MPDisplayCurAvatar* display_cur_avatar_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FocusAvatarReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FocusAvatarReq) */ {
 public:
  FocusAvatarReq();
  virtual ~FocusAvatarReq();

  FocusAvatarReq(const FocusAvatarReq& from);

  inline FocusAvatarReq& operator=(const FocusAvatarReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FocusAvatarReq(FocusAvatarReq&& from) noexcept
    : FocusAvatarReq() {
    *this = ::std::move(from);
  }

  inline FocusAvatarReq& operator=(FocusAvatarReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FocusAvatarReq& default_instance();

  static inline const FocusAvatarReq* internal_default_instance() {
    return reinterpret_cast<const FocusAvatarReq*>(
               &_FocusAvatarReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(FocusAvatarReq* other);
  friend void swap(FocusAvatarReq& a, FocusAvatarReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FocusAvatarReq* New() const PROTOBUF_FINAL { return New(NULL); }

  FocusAvatarReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FocusAvatarReq& from);
  void MergeFrom(const FocusAvatarReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FocusAvatarReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FocusAvatarReq_CmdId CmdId;
  static const CmdId NONE =
    FocusAvatarReq_CmdId_NONE;
  static const CmdId CMD_ID =
    FocusAvatarReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FocusAvatarReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FocusAvatarReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    FocusAvatarReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return FocusAvatarReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FocusAvatarReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FocusAvatarReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FocusAvatarReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FocusAvatarReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FocusAvatarReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FocusAvatarReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 avatar_guid = 1;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // bool is_focus = 2;
  void clear_is_focus();
  static const int kIsFocusFieldNumber = 2;
  bool is_focus() const;
  void set_is_focus(bool value);

  // @@protoc_insertion_point(class_scope:proto.FocusAvatarReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 avatar_guid_;
  bool is_focus_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FocusAvatarRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FocusAvatarRsp) */ {
 public:
  FocusAvatarRsp();
  virtual ~FocusAvatarRsp();

  FocusAvatarRsp(const FocusAvatarRsp& from);

  inline FocusAvatarRsp& operator=(const FocusAvatarRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FocusAvatarRsp(FocusAvatarRsp&& from) noexcept
    : FocusAvatarRsp() {
    *this = ::std::move(from);
  }

  inline FocusAvatarRsp& operator=(FocusAvatarRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FocusAvatarRsp& default_instance();

  static inline const FocusAvatarRsp* internal_default_instance() {
    return reinterpret_cast<const FocusAvatarRsp*>(
               &_FocusAvatarRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(FocusAvatarRsp* other);
  friend void swap(FocusAvatarRsp& a, FocusAvatarRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FocusAvatarRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  FocusAvatarRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FocusAvatarRsp& from);
  void MergeFrom(const FocusAvatarRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FocusAvatarRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FocusAvatarRsp_CmdId CmdId;
  static const CmdId NONE =
    FocusAvatarRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    FocusAvatarRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FocusAvatarRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FocusAvatarRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FocusAvatarRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FocusAvatarRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FocusAvatarRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FocusAvatarRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FocusAvatarRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FocusAvatarRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FocusAvatarRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_focus = 2;
  void clear_is_focus();
  static const int kIsFocusFieldNumber = 2;
  bool is_focus() const;
  void set_is_focus(bool value);

  // uint64 avatar_guid = 3;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 3;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.FocusAvatarRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  bool is_focus_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5favatar_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AvatarAddNotify

// .proto.AvatarInfo avatar = 1;
inline bool AvatarAddNotify::has_avatar() const {
  return this != internal_default_instance() && avatar_ != NULL;
}
inline void AvatarAddNotify::clear_avatar() {
  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) delete avatar_;
  avatar_ = NULL;
}
inline const ::proto::AvatarInfo& AvatarAddNotify::avatar() const {
  const ::proto::AvatarInfo* p = avatar_;
  // @@protoc_insertion_point(field_get:proto.AvatarAddNotify.avatar)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarInfo*>(
      &::proto::_AvatarInfo_default_instance_);
}
inline ::proto::AvatarInfo* AvatarAddNotify::mutable_avatar() {
  
  if (avatar_ == NULL) {
    avatar_ = new ::proto::AvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarAddNotify.avatar)
  return avatar_;
}
inline ::proto::AvatarInfo* AvatarAddNotify::release_avatar() {
  // @@protoc_insertion_point(field_release:proto.AvatarAddNotify.avatar)
  
  ::proto::AvatarInfo* temp = avatar_;
  avatar_ = NULL;
  return temp;
}
inline void AvatarAddNotify::set_allocated_avatar(::proto::AvatarInfo* avatar) {
  delete avatar_;
  avatar_ = avatar;
  if (avatar) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarAddNotify.avatar)
}

// bool is_in_team = 2;
inline void AvatarAddNotify::clear_is_in_team() {
  is_in_team_ = false;
}
inline bool AvatarAddNotify::is_in_team() const {
  // @@protoc_insertion_point(field_get:proto.AvatarAddNotify.is_in_team)
  return is_in_team_;
}
inline void AvatarAddNotify::set_is_in_team(bool value) {
  
  is_in_team_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarAddNotify.is_in_team)
}

// -------------------------------------------------------------------

// AvatarDelNotify

// repeated uint64 avatar_guid_list = 1;
inline int AvatarDelNotify::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
inline void AvatarDelNotify::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 AvatarDelNotify::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDelNotify.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
inline void AvatarDelNotify::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDelNotify.avatar_guid_list)
}
inline void AvatarDelNotify::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDelNotify.avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarDelNotify::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDelNotify.avatar_guid_list)
  return avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarDelNotify::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDelNotify.avatar_guid_list)
  return &avatar_guid_list_;
}

// -------------------------------------------------------------------

// AvatarTeam

// repeated uint64 avatar_guid_list = 1;
inline int AvatarTeam::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
inline void AvatarTeam::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 AvatarTeam::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeam.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
inline void AvatarTeam::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeam.avatar_guid_list)
}
inline void AvatarTeam::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarTeam.avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarTeam::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarTeam.avatar_guid_list)
  return avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarTeam::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarTeam.avatar_guid_list)
  return &avatar_guid_list_;
}

// string team_name = 2;
inline void AvatarTeam::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarTeam::team_name() const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeam.team_name)
  return team_name_.GetNoArena();
}
inline void AvatarTeam::set_team_name(const ::std::string& value) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeam.team_name)
}
#if LANG_CXX11
inline void AvatarTeam::set_team_name(::std::string&& value) {
  
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarTeam.team_name)
}
#endif
inline void AvatarTeam::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarTeam.team_name)
}
inline void AvatarTeam::set_team_name(const char* value, size_t size) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarTeam.team_name)
}
inline ::std::string* AvatarTeam::mutable_team_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarTeam.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarTeam::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.AvatarTeam.team_name)
  
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarTeam::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    
  } else {
    
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarTeam.team_name)
}

// -------------------------------------------------------------------

// SetUpAvatarTeamReq

// uint32 team_id = 1;
inline void SetUpAvatarTeamReq::clear_team_id() {
  team_id_ = 0u;
}
inline ::google::protobuf::uint32 SetUpAvatarTeamReq::team_id() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamReq.team_id)
  return team_id_;
}
inline void SetUpAvatarTeamReq::set_team_id(::google::protobuf::uint32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamReq.team_id)
}

// repeated uint64 avatar_team_guid_list = 2;
inline int SetUpAvatarTeamReq::avatar_team_guid_list_size() const {
  return avatar_team_guid_list_.size();
}
inline void SetUpAvatarTeamReq::clear_avatar_team_guid_list() {
  avatar_team_guid_list_.Clear();
}
inline ::google::protobuf::uint64 SetUpAvatarTeamReq::avatar_team_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
  return avatar_team_guid_list_.Get(index);
}
inline void SetUpAvatarTeamReq::set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
}
inline void SetUpAvatarTeamReq::add_avatar_team_guid_list(::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetUpAvatarTeamReq::avatar_team_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
  return avatar_team_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetUpAvatarTeamReq::mutable_avatar_team_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
  return &avatar_team_guid_list_;
}

// uint64 cur_avatar_guid = 3;
inline void SetUpAvatarTeamReq::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetUpAvatarTeamReq::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamReq.cur_avatar_guid)
  return cur_avatar_guid_;
}
inline void SetUpAvatarTeamReq::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamReq.cur_avatar_guid)
}

// -------------------------------------------------------------------

// SetUpAvatarTeamRsp

// int32 retcode = 1;
inline void SetUpAvatarTeamRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetUpAvatarTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.retcode)
  return retcode_;
}
inline void SetUpAvatarTeamRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.retcode)
}

// uint32 team_id = 2;
inline void SetUpAvatarTeamRsp::clear_team_id() {
  team_id_ = 0u;
}
inline ::google::protobuf::uint32 SetUpAvatarTeamRsp::team_id() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.team_id)
  return team_id_;
}
inline void SetUpAvatarTeamRsp::set_team_id(::google::protobuf::uint32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.team_id)
}

// repeated uint64 avatar_team_guid_list = 3;
inline int SetUpAvatarTeamRsp::avatar_team_guid_list_size() const {
  return avatar_team_guid_list_.size();
}
inline void SetUpAvatarTeamRsp::clear_avatar_team_guid_list() {
  avatar_team_guid_list_.Clear();
}
inline ::google::protobuf::uint64 SetUpAvatarTeamRsp::avatar_team_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
  return avatar_team_guid_list_.Get(index);
}
inline void SetUpAvatarTeamRsp::set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
}
inline void SetUpAvatarTeamRsp::add_avatar_team_guid_list(::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetUpAvatarTeamRsp::avatar_team_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
  return avatar_team_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetUpAvatarTeamRsp::mutable_avatar_team_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
  return &avatar_team_guid_list_;
}

// uint64 cur_avatar_guid = 4;
inline void SetUpAvatarTeamRsp::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetUpAvatarTeamRsp::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.cur_avatar_guid)
  return cur_avatar_guid_;
}
inline void SetUpAvatarTeamRsp::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.cur_avatar_guid)
}

// -------------------------------------------------------------------

// ChooseCurAvatarTeamReq

// uint32 team_id = 1;
inline void ChooseCurAvatarTeamReq::clear_team_id() {
  team_id_ = 0u;
}
inline ::google::protobuf::uint32 ChooseCurAvatarTeamReq::team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChooseCurAvatarTeamReq.team_id)
  return team_id_;
}
inline void ChooseCurAvatarTeamReq::set_team_id(::google::protobuf::uint32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChooseCurAvatarTeamReq.team_id)
}

// -------------------------------------------------------------------

// ChooseCurAvatarTeamRsp

// int32 retcode = 1;
inline void ChooseCurAvatarTeamRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChooseCurAvatarTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChooseCurAvatarTeamRsp.retcode)
  return retcode_;
}
inline void ChooseCurAvatarTeamRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChooseCurAvatarTeamRsp.retcode)
}

// uint32 cur_team_id = 2;
inline void ChooseCurAvatarTeamRsp::clear_cur_team_id() {
  cur_team_id_ = 0u;
}
inline ::google::protobuf::uint32 ChooseCurAvatarTeamRsp::cur_team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChooseCurAvatarTeamRsp.cur_team_id)
  return cur_team_id_;
}
inline void ChooseCurAvatarTeamRsp::set_cur_team_id(::google::protobuf::uint32 value) {
  
  cur_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChooseCurAvatarTeamRsp.cur_team_id)
}

// -------------------------------------------------------------------

// ChangeAvatarReq

// uint64 guid = 1;
inline void ChangeAvatarReq::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChangeAvatarReq::guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarReq.guid)
  return guid_;
}
inline void ChangeAvatarReq::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarReq.guid)
}

// uint32 skill_id = 2;
inline void ChangeAvatarReq::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 ChangeAvatarReq::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarReq.skill_id)
  return skill_id_;
}
inline void ChangeAvatarReq::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarReq.skill_id)
}

// -------------------------------------------------------------------

// ChangeAvatarRsp

// int32 retcode = 1;
inline void ChangeAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChangeAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarRsp.retcode)
  return retcode_;
}
inline void ChangeAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarRsp.retcode)
}

// uint64 cur_guid = 2;
inline void ChangeAvatarRsp::clear_cur_guid() {
  cur_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChangeAvatarRsp::cur_guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarRsp.cur_guid)
  return cur_guid_;
}
inline void ChangeAvatarRsp::set_cur_guid(::google::protobuf::uint64 value) {
  
  cur_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarRsp.cur_guid)
}

// uint32 skill_id = 3;
inline void ChangeAvatarRsp::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 ChangeAvatarRsp::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarRsp.skill_id)
  return skill_id_;
}
inline void ChangeAvatarRsp::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarRsp.skill_id)
}

// -------------------------------------------------------------------

// AvatarPromoteReq

// uint64 guid = 1;
inline void AvatarPromoteReq::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarPromoteReq::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteReq.guid)
  return guid_;
}
inline void AvatarPromoteReq::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteReq.guid)
}

// -------------------------------------------------------------------

// AvatarPromoteRsp

// int32 retcode = 1;
inline void AvatarPromoteRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarPromoteRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteRsp.retcode)
  return retcode_;
}
inline void AvatarPromoteRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteRsp.retcode)
}

// uint64 guid = 2;
inline void AvatarPromoteRsp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarPromoteRsp::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteRsp.guid)
  return guid_;
}
inline void AvatarPromoteRsp::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteRsp.guid)
}

// -------------------------------------------------------------------

// SpringUseReq

// uint64 guid = 1;
inline void SpringUseReq::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SpringUseReq::guid() const {
  // @@protoc_insertion_point(field_get:proto.SpringUseReq.guid)
  return guid_;
}
inline void SpringUseReq::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SpringUseReq.guid)
}

// -------------------------------------------------------------------

// SpringUseRsp

// int32 retcode = 1;
inline void SpringUseRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SpringUseRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SpringUseRsp.retcode)
  return retcode_;
}
inline void SpringUseRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SpringUseRsp.retcode)
}

// uint64 guid = 2;
inline void SpringUseRsp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SpringUseRsp::guid() const {
  // @@protoc_insertion_point(field_get:proto.SpringUseRsp.guid)
  return guid_;
}
inline void SpringUseRsp::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SpringUseRsp.guid)
}

// -------------------------------------------------------------------

// RefreshBackgroundAvatarReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RefreshBackgroundAvatarRsp

// int32 retcode = 1;
inline void RefreshBackgroundAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RefreshBackgroundAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RefreshBackgroundAvatarRsp.retcode)
  return retcode_;
}
inline void RefreshBackgroundAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshBackgroundAvatarRsp.retcode)
}

// map<uint64, uint32> hp_full_time_map = 2;
inline int RefreshBackgroundAvatarRsp::hp_full_time_map_size() const {
  return hp_full_time_map_.size();
}
inline void RefreshBackgroundAvatarRsp::clear_hp_full_time_map() {
  hp_full_time_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
RefreshBackgroundAvatarRsp::hp_full_time_map() const {
  // @@protoc_insertion_point(field_map:proto.RefreshBackgroundAvatarRsp.hp_full_time_map)
  return hp_full_time_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
RefreshBackgroundAvatarRsp::mutable_hp_full_time_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.RefreshBackgroundAvatarRsp.hp_full_time_map)
  return hp_full_time_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarTeamUpdateNotify

// map<uint32, .proto.AvatarTeam> avatar_team_map = 1;
inline int AvatarTeamUpdateNotify::avatar_team_map_size() const {
  return avatar_team_map_.size();
}
inline void AvatarTeamUpdateNotify::clear_avatar_team_map() {
  avatar_team_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
AvatarTeamUpdateNotify::avatar_team_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarTeamUpdateNotify.avatar_team_map)
  return avatar_team_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
AvatarTeamUpdateNotify::mutable_avatar_team_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarTeamUpdateNotify.avatar_team_map)
  return avatar_team_map_.MutableMap();
}

// repeated uint64 temp_avatar_guid_list = 2;
inline int AvatarTeamUpdateNotify::temp_avatar_guid_list_size() const {
  return temp_avatar_guid_list_.size();
}
inline void AvatarTeamUpdateNotify::clear_temp_avatar_guid_list() {
  temp_avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 AvatarTeamUpdateNotify::temp_avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_.Get(index);
}
inline void AvatarTeamUpdateNotify::set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
}
inline void AvatarTeamUpdateNotify::add_temp_avatar_guid_list(::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarTeamUpdateNotify::temp_avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarTeamUpdateNotify::mutable_temp_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
  return &temp_avatar_guid_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarDataNotify

// repeated .proto.AvatarInfo avatar_list = 1;
inline int AvatarDataNotify::avatar_list_size() const {
  return avatar_list_.size();
}
inline void AvatarDataNotify::clear_avatar_list() {
  avatar_list_.Clear();
}
inline const ::proto::AvatarInfo& AvatarDataNotify::avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.avatar_list)
  return avatar_list_.Get(index);
}
inline ::proto::AvatarInfo* AvatarDataNotify::mutable_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarDataNotify.avatar_list)
  return avatar_list_.Mutable(index);
}
inline ::proto::AvatarInfo* AvatarDataNotify::add_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.avatar_list)
  return avatar_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo >*
AvatarDataNotify::mutable_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.avatar_list)
  return &avatar_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo >&
AvatarDataNotify::avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.avatar_list)
  return avatar_list_;
}

// map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
inline int AvatarDataNotify::avatar_team_map_size() const {
  return avatar_team_map_.size();
}
inline void AvatarDataNotify::clear_avatar_team_map() {
  avatar_team_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
AvatarDataNotify::avatar_team_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarDataNotify.avatar_team_map)
  return avatar_team_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
AvatarDataNotify::mutable_avatar_team_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarDataNotify.avatar_team_map)
  return avatar_team_map_.MutableMap();
}

// uint32 cur_avatar_team_id = 3;
inline void AvatarDataNotify::clear_cur_avatar_team_id() {
  cur_avatar_team_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarDataNotify::cur_avatar_team_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.cur_avatar_team_id)
  return cur_avatar_team_id_;
}
inline void AvatarDataNotify::set_cur_avatar_team_id(::google::protobuf::uint32 value) {
  
  cur_avatar_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.cur_avatar_team_id)
}

// uint64 choose_avatar_guid = 4;
inline void AvatarDataNotify::clear_choose_avatar_guid() {
  choose_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarDataNotify::choose_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.choose_avatar_guid)
  return choose_avatar_guid_;
}
inline void AvatarDataNotify::set_choose_avatar_guid(::google::protobuf::uint64 value) {
  
  choose_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.choose_avatar_guid)
}

// repeated uint64 temp_avatar_guid_list = 5;
inline int AvatarDataNotify::temp_avatar_guid_list_size() const {
  return temp_avatar_guid_list_.size();
}
inline void AvatarDataNotify::clear_temp_avatar_guid_list() {
  temp_avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 AvatarDataNotify::temp_avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_.Get(index);
}
inline void AvatarDataNotify::set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.temp_avatar_guid_list)
}
inline void AvatarDataNotify::add_temp_avatar_guid_list(::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.temp_avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarDataNotify::temp_avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarDataNotify::mutable_temp_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.temp_avatar_guid_list)
  return &temp_avatar_guid_list_;
}

// -------------------------------------------------------------------

// AvatarUpgradeReq

// uint32 item_id = 1;
inline void AvatarUpgradeReq::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarUpgradeReq::item_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeReq.item_id)
  return item_id_;
}
inline void AvatarUpgradeReq::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeReq.item_id)
}

// uint32 count = 2;
inline void AvatarUpgradeReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 AvatarUpgradeReq::count() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeReq.count)
  return count_;
}
inline void AvatarUpgradeReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeReq.count)
}

// uint64 avatar_guid = 3;
inline void AvatarUpgradeReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarUpgradeReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeReq.avatar_guid)
  return avatar_guid_;
}
inline void AvatarUpgradeReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeReq.avatar_guid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarUpgradeRsp

// int32 retcode = 1;
inline void AvatarUpgradeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarUpgradeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.retcode)
  return retcode_;
}
inline void AvatarUpgradeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.retcode)
}

// uint64 avatar_guid = 2;
inline void AvatarUpgradeRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarUpgradeRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.avatar_guid)
  return avatar_guid_;
}
inline void AvatarUpgradeRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.avatar_guid)
}

// uint32 old_level = 3;
inline void AvatarUpgradeRsp::clear_old_level() {
  old_level_ = 0u;
}
inline ::google::protobuf::uint32 AvatarUpgradeRsp::old_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.old_level)
  return old_level_;
}
inline void AvatarUpgradeRsp::set_old_level(::google::protobuf::uint32 value) {
  
  old_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.old_level)
}

// uint32 cur_level = 4;
inline void AvatarUpgradeRsp::clear_cur_level() {
  cur_level_ = 0u;
}
inline ::google::protobuf::uint32 AvatarUpgradeRsp::cur_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.cur_level)
  return cur_level_;
}
inline void AvatarUpgradeRsp::set_cur_level(::google::protobuf::uint32 value) {
  
  cur_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.cur_level)
}

// map<uint32, float> old_fight_prop_map = 5;
inline int AvatarUpgradeRsp::old_fight_prop_map_size() const {
  return old_fight_prop_map_.size();
}
inline void AvatarUpgradeRsp::clear_old_fight_prop_map() {
  old_fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarUpgradeRsp::old_fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarUpgradeRsp.old_fight_prop_map)
  return old_fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarUpgradeRsp::mutable_old_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarUpgradeRsp.old_fight_prop_map)
  return old_fight_prop_map_.MutableMap();
}

// map<uint32, float> cur_fight_prop_map = 6;
inline int AvatarUpgradeRsp::cur_fight_prop_map_size() const {
  return cur_fight_prop_map_.size();
}
inline void AvatarUpgradeRsp::clear_cur_fight_prop_map() {
  cur_fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarUpgradeRsp::cur_fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarUpgradeRsp.cur_fight_prop_map)
  return cur_fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarUpgradeRsp::mutable_cur_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarUpgradeRsp.cur_fight_prop_map)
  return cur_fight_prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// AvatarDieAnimationEndReq

// uint64 die_guid = 1;
inline void AvatarDieAnimationEndReq::clear_die_guid() {
  die_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarDieAnimationEndReq::die_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndReq.die_guid)
  return die_guid_;
}
inline void AvatarDieAnimationEndReq::set_die_guid(::google::protobuf::uint64 value) {
  
  die_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndReq.die_guid)
}

// uint32 skill_id = 2;
inline void AvatarDieAnimationEndReq::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarDieAnimationEndReq::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndReq.skill_id)
  return skill_id_;
}
inline void AvatarDieAnimationEndReq::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndReq.skill_id)
}

// .proto.Vector reborn_pos = 3;
inline bool AvatarDieAnimationEndReq::has_reborn_pos() const {
  return this != internal_default_instance() && reborn_pos_ != NULL;
}
inline void AvatarDieAnimationEndReq::clear_reborn_pos() {
  if (GetArenaNoVirtual() == NULL && reborn_pos_ != NULL) delete reborn_pos_;
  reborn_pos_ = NULL;
}
inline const ::proto::Vector& AvatarDieAnimationEndReq::reborn_pos() const {
  const ::proto::Vector* p = reborn_pos_;
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndReq.reborn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AvatarDieAnimationEndReq::mutable_reborn_pos() {
  
  if (reborn_pos_ == NULL) {
    reborn_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarDieAnimationEndReq.reborn_pos)
  return reborn_pos_;
}
inline ::proto::Vector* AvatarDieAnimationEndReq::release_reborn_pos() {
  // @@protoc_insertion_point(field_release:proto.AvatarDieAnimationEndReq.reborn_pos)
  
  ::proto::Vector* temp = reborn_pos_;
  reborn_pos_ = NULL;
  return temp;
}
inline void AvatarDieAnimationEndReq::set_allocated_reborn_pos(::proto::Vector* reborn_pos) {
  delete reborn_pos_;
  reborn_pos_ = reborn_pos;
  if (reborn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarDieAnimationEndReq.reborn_pos)
}

// -------------------------------------------------------------------

// AvatarDieAnimationEndRsp

// int32 retcode = 1;
inline void AvatarDieAnimationEndRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarDieAnimationEndRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndRsp.retcode)
  return retcode_;
}
inline void AvatarDieAnimationEndRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndRsp.retcode)
}

// uint64 die_guid = 2;
inline void AvatarDieAnimationEndRsp::clear_die_guid() {
  die_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarDieAnimationEndRsp::die_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndRsp.die_guid)
  return die_guid_;
}
inline void AvatarDieAnimationEndRsp::set_die_guid(::google::protobuf::uint64 value) {
  
  die_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndRsp.die_guid)
}

// uint32 skill_id = 3;
inline void AvatarDieAnimationEndRsp::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarDieAnimationEndRsp::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndRsp.skill_id)
  return skill_id_;
}
inline void AvatarDieAnimationEndRsp::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndRsp.skill_id)
}

// -------------------------------------------------------------------

// AvatarChangeElementTypeReq

// uint32 scene_id = 1;
inline void AvatarChangeElementTypeReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarChangeElementTypeReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeElementTypeReq.scene_id)
  return scene_id_;
}
inline void AvatarChangeElementTypeReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeElementTypeReq.scene_id)
}

// uint32 area_id = 2;
inline void AvatarChangeElementTypeReq::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarChangeElementTypeReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeElementTypeReq.area_id)
  return area_id_;
}
inline void AvatarChangeElementTypeReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeElementTypeReq.area_id)
}

// -------------------------------------------------------------------

// AvatarChangeElementTypeRsp

// int32 retcode = 1;
inline void AvatarChangeElementTypeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarChangeElementTypeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeElementTypeRsp.retcode)
  return retcode_;
}
inline void AvatarChangeElementTypeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeElementTypeRsp.retcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarFetterDataNotify

// map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 1;
inline int AvatarFetterDataNotify::fetter_info_map_size() const {
  return fetter_info_map_.size();
}
inline void AvatarFetterDataNotify::clear_fetter_info_map() {
  fetter_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >&
AvatarFetterDataNotify::fetter_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarFetterDataNotify.fetter_info_map)
  return fetter_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >*
AvatarFetterDataNotify::mutable_fetter_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarFetterDataNotify.fetter_info_map)
  return fetter_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarExpeditionDataNotify

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 1;
inline int AvatarExpeditionDataNotify::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
inline void AvatarExpeditionDataNotify::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionDataNotify::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionDataNotify.expedition_info_map)
  return expedition_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionDataNotify::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionDataNotify.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// AvatarExpeditionAllDataReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarExpeditionAllDataRsp

// int32 retcode = 1;
inline void AvatarExpeditionAllDataRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarExpeditionAllDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionAllDataRsp.retcode)
  return retcode_;
}
inline void AvatarExpeditionAllDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionAllDataRsp.retcode)
}

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
inline int AvatarExpeditionAllDataRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
inline void AvatarExpeditionAllDataRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionAllDataRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionAllDataRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionAllDataRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionAllDataRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// repeated uint32 open_expedition_list = 3;
inline int AvatarExpeditionAllDataRsp::open_expedition_list_size() const {
  return open_expedition_list_.size();
}
inline void AvatarExpeditionAllDataRsp::clear_open_expedition_list() {
  open_expedition_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarExpeditionAllDataRsp::open_expedition_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
  return open_expedition_list_.Get(index);
}
inline void AvatarExpeditionAllDataRsp::set_open_expedition_list(int index, ::google::protobuf::uint32 value) {
  open_expedition_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
}
inline void AvatarExpeditionAllDataRsp::add_open_expedition_list(::google::protobuf::uint32 value) {
  open_expedition_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarExpeditionAllDataRsp::open_expedition_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
  return open_expedition_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarExpeditionAllDataRsp::mutable_open_expedition_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
  return &open_expedition_list_;
}

// uint32 expedition_count_limit = 4;
inline void AvatarExpeditionAllDataRsp::clear_expedition_count_limit() {
  expedition_count_limit_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionAllDataRsp::expedition_count_limit() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionAllDataRsp.expedition_count_limit)
  return expedition_count_limit_;
}
inline void AvatarExpeditionAllDataRsp::set_expedition_count_limit(::google::protobuf::uint32 value) {
  
  expedition_count_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionAllDataRsp.expedition_count_limit)
}

// -------------------------------------------------------------------

// AvatarExpeditionStartReq

// uint64 avatar_guid = 1;
inline void AvatarExpeditionStartReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExpeditionStartReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartReq.avatar_guid)
  return avatar_guid_;
}
inline void AvatarExpeditionStartReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartReq.avatar_guid)
}

// uint32 exp_id = 2;
inline void AvatarExpeditionStartReq::clear_exp_id() {
  exp_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionStartReq::exp_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartReq.exp_id)
  return exp_id_;
}
inline void AvatarExpeditionStartReq::set_exp_id(::google::protobuf::uint32 value) {
  
  exp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartReq.exp_id)
}

// uint32 hour_time = 3;
inline void AvatarExpeditionStartReq::clear_hour_time() {
  hour_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionStartReq::hour_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartReq.hour_time)
  return hour_time_;
}
inline void AvatarExpeditionStartReq::set_hour_time(::google::protobuf::uint32 value) {
  
  hour_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartReq.hour_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarExpeditionStartRsp

// int32 retcode = 1;
inline void AvatarExpeditionStartRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarExpeditionStartRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartRsp.retcode)
  return retcode_;
}
inline void AvatarExpeditionStartRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartRsp.retcode)
}

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
inline int AvatarExpeditionStartRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
inline void AvatarExpeditionStartRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionStartRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionStartRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionStartRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionStartRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// AvatarExpeditionCallBackReq

// repeated uint64 avatar_guid = 1;
inline int AvatarExpeditionCallBackReq::avatar_guid_size() const {
  return avatar_guid_.size();
}
inline void AvatarExpeditionCallBackReq::clear_avatar_guid() {
  avatar_guid_.Clear();
}
inline ::google::protobuf::uint64 AvatarExpeditionCallBackReq::avatar_guid(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionCallBackReq.avatar_guid)
  return avatar_guid_.Get(index);
}
inline void AvatarExpeditionCallBackReq::set_avatar_guid(int index, ::google::protobuf::uint64 value) {
  avatar_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionCallBackReq.avatar_guid)
}
inline void AvatarExpeditionCallBackReq::add_avatar_guid(::google::protobuf::uint64 value) {
  avatar_guid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarExpeditionCallBackReq.avatar_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarExpeditionCallBackReq::avatar_guid() const {
  // @@protoc_insertion_point(field_list:proto.AvatarExpeditionCallBackReq.avatar_guid)
  return avatar_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarExpeditionCallBackReq::mutable_avatar_guid() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarExpeditionCallBackReq.avatar_guid)
  return &avatar_guid_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarExpeditionCallBackRsp

// int32 retcode = 1;
inline void AvatarExpeditionCallBackRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarExpeditionCallBackRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionCallBackRsp.retcode)
  return retcode_;
}
inline void AvatarExpeditionCallBackRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionCallBackRsp.retcode)
}

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
inline int AvatarExpeditionCallBackRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
inline void AvatarExpeditionCallBackRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionCallBackRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionCallBackRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionCallBackRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionCallBackRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// AvatarExpeditionGetRewardReq

// uint64 avatar_guid = 1;
inline void AvatarExpeditionGetRewardReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExpeditionGetRewardReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionGetRewardReq.avatar_guid)
  return avatar_guid_;
}
inline void AvatarExpeditionGetRewardReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionGetRewardReq.avatar_guid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarExpeditionGetRewardRsp

// int32 retcode = 1;
inline void AvatarExpeditionGetRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AvatarExpeditionGetRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionGetRewardRsp.retcode)
  return retcode_;
}
inline void AvatarExpeditionGetRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionGetRewardRsp.retcode)
}

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
inline int AvatarExpeditionGetRewardRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
inline void AvatarExpeditionGetRewardRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionGetRewardRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionGetRewardRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionGetRewardRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionGetRewardRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// ChangeMpTeamAvatarReq

// repeated uint64 avatar_guid_list = 1;
inline int ChangeMpTeamAvatarReq::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
inline void ChangeMpTeamAvatarReq::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 ChangeMpTeamAvatarReq::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
inline void ChangeMpTeamAvatarReq::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
}
inline void ChangeMpTeamAvatarReq::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChangeMpTeamAvatarReq::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
  return avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChangeMpTeamAvatarReq::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
  return &avatar_guid_list_;
}

// uint64 cur_avatar_guid = 2;
inline void ChangeMpTeamAvatarReq::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChangeMpTeamAvatarReq::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarReq.cur_avatar_guid)
  return cur_avatar_guid_;
}
inline void ChangeMpTeamAvatarReq::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarReq.cur_avatar_guid)
}

// -------------------------------------------------------------------

// ChangeMpTeamAvatarRsp

// int32 retcode = 1;
inline void ChangeMpTeamAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChangeMpTeamAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarRsp.retcode)
  return retcode_;
}
inline void ChangeMpTeamAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarRsp.retcode)
}

// repeated uint64 avatar_guid_list = 2;
inline int ChangeMpTeamAvatarRsp::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
inline void ChangeMpTeamAvatarRsp::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 ChangeMpTeamAvatarRsp::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
inline void ChangeMpTeamAvatarRsp::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
}
inline void ChangeMpTeamAvatarRsp::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChangeMpTeamAvatarRsp::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
  return avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChangeMpTeamAvatarRsp::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
  return &avatar_guid_list_;
}

// uint64 cur_avatar_guid = 3;
inline void ChangeMpTeamAvatarRsp::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChangeMpTeamAvatarRsp::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarRsp.cur_avatar_guid)
  return cur_avatar_guid_;
}
inline void ChangeMpTeamAvatarRsp::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarRsp.cur_avatar_guid)
}

// -------------------------------------------------------------------

// ChangeTeamNameReq

// int32 team_id = 1;
inline void ChangeTeamNameReq::clear_team_id() {
  team_id_ = 0;
}
inline ::google::protobuf::int32 ChangeTeamNameReq::team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameReq.team_id)
  return team_id_;
}
inline void ChangeTeamNameReq::set_team_id(::google::protobuf::int32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameReq.team_id)
}

// string team_name = 2;
inline void ChangeTeamNameReq::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeTeamNameReq::team_name() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameReq.team_name)
  return team_name_.GetNoArena();
}
inline void ChangeTeamNameReq::set_team_name(const ::std::string& value) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameReq.team_name)
}
#if LANG_CXX11
inline void ChangeTeamNameReq::set_team_name(::std::string&& value) {
  
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChangeTeamNameReq.team_name)
}
#endif
inline void ChangeTeamNameReq::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChangeTeamNameReq.team_name)
}
inline void ChangeTeamNameReq::set_team_name(const char* value, size_t size) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChangeTeamNameReq.team_name)
}
inline ::std::string* ChangeTeamNameReq::mutable_team_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ChangeTeamNameReq.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeTeamNameReq::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.ChangeTeamNameReq.team_name)
  
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeTeamNameReq::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    
  } else {
    
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ChangeTeamNameReq.team_name)
}

// -------------------------------------------------------------------

// ChangeTeamNameRsp

// int32 team_id = 1;
inline void ChangeTeamNameRsp::clear_team_id() {
  team_id_ = 0;
}
inline ::google::protobuf::int32 ChangeTeamNameRsp::team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameRsp.team_id)
  return team_id_;
}
inline void ChangeTeamNameRsp::set_team_id(::google::protobuf::int32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameRsp.team_id)
}

// string team_name = 2;
inline void ChangeTeamNameRsp::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeTeamNameRsp::team_name() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameRsp.team_name)
  return team_name_.GetNoArena();
}
inline void ChangeTeamNameRsp::set_team_name(const ::std::string& value) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameRsp.team_name)
}
#if LANG_CXX11
inline void ChangeTeamNameRsp::set_team_name(::std::string&& value) {
  
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChangeTeamNameRsp.team_name)
}
#endif
inline void ChangeTeamNameRsp::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChangeTeamNameRsp.team_name)
}
inline void ChangeTeamNameRsp::set_team_name(const char* value, size_t size) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChangeTeamNameRsp.team_name)
}
inline ::std::string* ChangeTeamNameRsp::mutable_team_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ChangeTeamNameRsp.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeTeamNameRsp::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.ChangeTeamNameRsp.team_name)
  
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeTeamNameRsp::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    
  } else {
    
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ChangeTeamNameRsp.team_name)
}

// int32 retcode = 3;
inline void ChangeTeamNameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChangeTeamNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameRsp.retcode)
  return retcode_;
}
inline void ChangeTeamNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameRsp.retcode)
}

// -------------------------------------------------------------------

// SceneTeamAvatar

// uint32 player_uid = 1;
inline void SceneTeamAvatar::clear_player_uid() {
  player_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneTeamAvatar::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.player_uid)
  return player_uid_;
}
inline void SceneTeamAvatar::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.player_uid)
}

// uint64 avatar_guid = 2;
inline void SceneTeamAvatar::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneTeamAvatar::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.avatar_guid)
  return avatar_guid_;
}
inline void SceneTeamAvatar::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.avatar_guid)
}

// uint32 scene_id = 3;
inline void SceneTeamAvatar::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTeamAvatar::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.scene_id)
  return scene_id_;
}
inline void SceneTeamAvatar::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.scene_id)
}

// uint32 entity_id = 4;
inline void SceneTeamAvatar::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTeamAvatar::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.entity_id)
  return entity_id_;
}
inline void SceneTeamAvatar::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.entity_id)
}

// .proto.AvatarInfo avatar_info = 5;
inline bool SceneTeamAvatar::has_avatar_info() const {
  return this != internal_default_instance() && avatar_info_ != NULL;
}
inline void SceneTeamAvatar::clear_avatar_info() {
  if (GetArenaNoVirtual() == NULL && avatar_info_ != NULL) delete avatar_info_;
  avatar_info_ = NULL;
}
inline const ::proto::AvatarInfo& SceneTeamAvatar::avatar_info() const {
  const ::proto::AvatarInfo* p = avatar_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarInfo*>(
      &::proto::_AvatarInfo_default_instance_);
}
inline ::proto::AvatarInfo* SceneTeamAvatar::mutable_avatar_info() {
  
  if (avatar_info_ == NULL) {
    avatar_info_ = new ::proto::AvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.avatar_info)
  return avatar_info_;
}
inline ::proto::AvatarInfo* SceneTeamAvatar::release_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.avatar_info)
  
  ::proto::AvatarInfo* temp = avatar_info_;
  avatar_info_ = NULL;
  return temp;
}
inline void SceneTeamAvatar::set_allocated_avatar_info(::proto::AvatarInfo* avatar_info) {
  delete avatar_info_;
  avatar_info_ = avatar_info;
  if (avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.avatar_info)
}

// .proto.SceneAvatarInfo scene_avatar_info = 6;
inline bool SceneTeamAvatar::has_scene_avatar_info() const {
  return this != internal_default_instance() && scene_avatar_info_ != NULL;
}
inline void SceneTeamAvatar::clear_scene_avatar_info() {
  if (GetArenaNoVirtual() == NULL && scene_avatar_info_ != NULL) delete scene_avatar_info_;
  scene_avatar_info_ = NULL;
}
inline const ::proto::SceneAvatarInfo& SceneTeamAvatar::scene_avatar_info() const {
  const ::proto::SceneAvatarInfo* p = scene_avatar_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.scene_avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneAvatarInfo*>(
      &::proto::_SceneAvatarInfo_default_instance_);
}
inline ::proto::SceneAvatarInfo* SceneTeamAvatar::mutable_scene_avatar_info() {
  
  if (scene_avatar_info_ == NULL) {
    scene_avatar_info_ = new ::proto::SceneAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.scene_avatar_info)
  return scene_avatar_info_;
}
inline ::proto::SceneAvatarInfo* SceneTeamAvatar::release_scene_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.scene_avatar_info)
  
  ::proto::SceneAvatarInfo* temp = scene_avatar_info_;
  scene_avatar_info_ = NULL;
  return temp;
}
inline void SceneTeamAvatar::set_allocated_scene_avatar_info(::proto::SceneAvatarInfo* scene_avatar_info) {
  delete scene_avatar_info_;
  scene_avatar_info_ = scene_avatar_info;
  if (scene_avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.scene_avatar_info)
}

// -------------------------------------------------------------------

// SceneTeamUpdateNotify

// repeated .proto.SceneTeamAvatar scene_team_avatar_list = 1;
inline int SceneTeamUpdateNotify::scene_team_avatar_list_size() const {
  return scene_team_avatar_list_.size();
}
inline void SceneTeamUpdateNotify::clear_scene_team_avatar_list() {
  scene_team_avatar_list_.Clear();
}
inline const ::proto::SceneTeamAvatar& SceneTeamUpdateNotify::scene_team_avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_.Get(index);
}
inline ::proto::SceneTeamAvatar* SceneTeamUpdateNotify::mutable_scene_team_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_.Mutable(index);
}
inline ::proto::SceneTeamAvatar* SceneTeamUpdateNotify::add_scene_team_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar >*
SceneTeamUpdateNotify::mutable_scene_team_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return &scene_team_avatar_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar >&
SceneTeamUpdateNotify::scene_team_avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_;
}

// repeated .proto.MPDisplayCurAvatar display_cur_avatar_list = 2;
inline int SceneTeamUpdateNotify::display_cur_avatar_list_size() const {
  return display_cur_avatar_list_.size();
}
inline void SceneTeamUpdateNotify::clear_display_cur_avatar_list() {
  display_cur_avatar_list_.Clear();
}
inline const ::proto::MPDisplayCurAvatar& SceneTeamUpdateNotify::display_cur_avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamUpdateNotify.display_cur_avatar_list)
  return display_cur_avatar_list_.Get(index);
}
inline ::proto::MPDisplayCurAvatar* SceneTeamUpdateNotify::mutable_display_cur_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamUpdateNotify.display_cur_avatar_list)
  return display_cur_avatar_list_.Mutable(index);
}
inline ::proto::MPDisplayCurAvatar* SceneTeamUpdateNotify::add_display_cur_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.SceneTeamUpdateNotify.display_cur_avatar_list)
  return display_cur_avatar_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MPDisplayCurAvatar >*
SceneTeamUpdateNotify::mutable_display_cur_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneTeamUpdateNotify.display_cur_avatar_list)
  return &display_cur_avatar_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MPDisplayCurAvatar >&
SceneTeamUpdateNotify::display_cur_avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneTeamUpdateNotify.display_cur_avatar_list)
  return display_cur_avatar_list_;
}

// bool is_in_mp = 3;
inline void SceneTeamUpdateNotify::clear_is_in_mp() {
  is_in_mp_ = false;
}
inline bool SceneTeamUpdateNotify::is_in_mp() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamUpdateNotify.is_in_mp)
  return is_in_mp_;
}
inline void SceneTeamUpdateNotify::set_is_in_mp(bool value) {
  
  is_in_mp_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamUpdateNotify.is_in_mp)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MPDisplayCurAvatar

// uint32 player_uid = 1;
inline void MPDisplayCurAvatar::clear_player_uid() {
  player_uid_ = 0u;
}
inline ::google::protobuf::uint32 MPDisplayCurAvatar::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.MPDisplayCurAvatar.player_uid)
  return player_uid_;
}
inline void MPDisplayCurAvatar::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MPDisplayCurAvatar.player_uid)
}

// uint64 avatar_guid = 2;
inline void MPDisplayCurAvatar::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MPDisplayCurAvatar::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.MPDisplayCurAvatar.avatar_guid)
  return avatar_guid_;
}
inline void MPDisplayCurAvatar::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.MPDisplayCurAvatar.avatar_guid)
}

// uint32 life_state = 3;
inline void MPDisplayCurAvatar::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 MPDisplayCurAvatar::life_state() const {
  // @@protoc_insertion_point(field_get:proto.MPDisplayCurAvatar.life_state)
  return life_state_;
}
inline void MPDisplayCurAvatar::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MPDisplayCurAvatar.life_state)
}

// map<uint32, float> fight_prop_map = 4;
inline int MPDisplayCurAvatar::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void MPDisplayCurAvatar::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
MPDisplayCurAvatar::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.MPDisplayCurAvatar.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
MPDisplayCurAvatar::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MPDisplayCurAvatar.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// SceneTeamMPDisplayCurAvatarNotify

// .proto.MPDisplayCurAvatar display_cur_avatar = 1;
inline bool SceneTeamMPDisplayCurAvatarNotify::has_display_cur_avatar() const {
  return this != internal_default_instance() && display_cur_avatar_ != NULL;
}
inline void SceneTeamMPDisplayCurAvatarNotify::clear_display_cur_avatar() {
  if (GetArenaNoVirtual() == NULL && display_cur_avatar_ != NULL) delete display_cur_avatar_;
  display_cur_avatar_ = NULL;
}
inline const ::proto::MPDisplayCurAvatar& SceneTeamMPDisplayCurAvatarNotify::display_cur_avatar() const {
  const ::proto::MPDisplayCurAvatar* p = display_cur_avatar_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamMPDisplayCurAvatarNotify.display_cur_avatar)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MPDisplayCurAvatar*>(
      &::proto::_MPDisplayCurAvatar_default_instance_);
}
inline ::proto::MPDisplayCurAvatar* SceneTeamMPDisplayCurAvatarNotify::mutable_display_cur_avatar() {
  
  if (display_cur_avatar_ == NULL) {
    display_cur_avatar_ = new ::proto::MPDisplayCurAvatar;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamMPDisplayCurAvatarNotify.display_cur_avatar)
  return display_cur_avatar_;
}
inline ::proto::MPDisplayCurAvatar* SceneTeamMPDisplayCurAvatarNotify::release_display_cur_avatar() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamMPDisplayCurAvatarNotify.display_cur_avatar)
  
  ::proto::MPDisplayCurAvatar* temp = display_cur_avatar_;
  display_cur_avatar_ = NULL;
  return temp;
}
inline void SceneTeamMPDisplayCurAvatarNotify::set_allocated_display_cur_avatar(::proto::MPDisplayCurAvatar* display_cur_avatar) {
  delete display_cur_avatar_;
  display_cur_avatar_ = display_cur_avatar;
  if (display_cur_avatar) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamMPDisplayCurAvatarNotify.display_cur_avatar)
}

// -------------------------------------------------------------------

// FocusAvatarReq

// uint64 avatar_guid = 1;
inline void FocusAvatarReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FocusAvatarReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarReq.avatar_guid)
  return avatar_guid_;
}
inline void FocusAvatarReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarReq.avatar_guid)
}

// bool is_focus = 2;
inline void FocusAvatarReq::clear_is_focus() {
  is_focus_ = false;
}
inline bool FocusAvatarReq::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarReq.is_focus)
  return is_focus_;
}
inline void FocusAvatarReq::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarReq.is_focus)
}

// -------------------------------------------------------------------

// FocusAvatarRsp

// int32 retcode = 1;
inline void FocusAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 FocusAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarRsp.retcode)
  return retcode_;
}
inline void FocusAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarRsp.retcode)
}

// bool is_focus = 2;
inline void FocusAvatarRsp::clear_is_focus() {
  is_focus_ = false;
}
inline bool FocusAvatarRsp::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarRsp.is_focus)
  return is_focus_;
}
inline void FocusAvatarRsp::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarRsp.is_focus)
}

// uint64 avatar_guid = 3;
inline void FocusAvatarRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FocusAvatarRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarRsp.avatar_guid)
  return avatar_guid_;
}
inline void FocusAvatarRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarRsp.avatar_guid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::AvatarAddNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarAddNotify_CmdId>() {
  return ::proto::AvatarAddNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarDelNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarDelNotify_CmdId>() {
  return ::proto::AvatarDelNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetUpAvatarTeamReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetUpAvatarTeamReq_CmdId>() {
  return ::proto::SetUpAvatarTeamReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetUpAvatarTeamRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetUpAvatarTeamRsp_CmdId>() {
  return ::proto::SetUpAvatarTeamRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChooseCurAvatarTeamReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChooseCurAvatarTeamReq_CmdId>() {
  return ::proto::ChooseCurAvatarTeamReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChooseCurAvatarTeamRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChooseCurAvatarTeamRsp_CmdId>() {
  return ::proto::ChooseCurAvatarTeamRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeAvatarReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeAvatarReq_CmdId>() {
  return ::proto::ChangeAvatarReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeAvatarRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeAvatarRsp_CmdId>() {
  return ::proto::ChangeAvatarRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarPromoteReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarPromoteReq_CmdId>() {
  return ::proto::AvatarPromoteReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarPromoteRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarPromoteRsp_CmdId>() {
  return ::proto::AvatarPromoteRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SpringUseReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SpringUseReq_CmdId>() {
  return ::proto::SpringUseReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SpringUseRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SpringUseRsp_CmdId>() {
  return ::proto::SpringUseRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RefreshBackgroundAvatarReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RefreshBackgroundAvatarReq_CmdId>() {
  return ::proto::RefreshBackgroundAvatarReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RefreshBackgroundAvatarRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RefreshBackgroundAvatarRsp_CmdId>() {
  return ::proto::RefreshBackgroundAvatarRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarTeamUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarTeamUpdateNotify_CmdId>() {
  return ::proto::AvatarTeamUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarDataNotify_CmdId>() {
  return ::proto::AvatarDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarUpgradeReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarUpgradeReq_CmdId>() {
  return ::proto::AvatarUpgradeReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarUpgradeRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarUpgradeRsp_CmdId>() {
  return ::proto::AvatarUpgradeRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarDieAnimationEndReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarDieAnimationEndReq_CmdId>() {
  return ::proto::AvatarDieAnimationEndReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarDieAnimationEndRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarDieAnimationEndRsp_CmdId>() {
  return ::proto::AvatarDieAnimationEndRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarChangeElementTypeReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarChangeElementTypeReq_CmdId>() {
  return ::proto::AvatarChangeElementTypeReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarChangeElementTypeRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarChangeElementTypeRsp_CmdId>() {
  return ::proto::AvatarChangeElementTypeRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarFetterDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarFetterDataNotify_CmdId>() {
  return ::proto::AvatarFetterDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionDataNotify_CmdId>() {
  return ::proto::AvatarExpeditionDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionAllDataReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionAllDataReq_CmdId>() {
  return ::proto::AvatarExpeditionAllDataReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionAllDataRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionAllDataRsp_CmdId>() {
  return ::proto::AvatarExpeditionAllDataRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionStartReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionStartReq_CmdId>() {
  return ::proto::AvatarExpeditionStartReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionStartRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionStartRsp_CmdId>() {
  return ::proto::AvatarExpeditionStartRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionCallBackReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionCallBackReq_CmdId>() {
  return ::proto::AvatarExpeditionCallBackReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionCallBackRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionCallBackRsp_CmdId>() {
  return ::proto::AvatarExpeditionCallBackRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionGetRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionGetRewardReq_CmdId>() {
  return ::proto::AvatarExpeditionGetRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionGetRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionGetRewardRsp_CmdId>() {
  return ::proto::AvatarExpeditionGetRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeMpTeamAvatarReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeMpTeamAvatarReq_CmdId>() {
  return ::proto::ChangeMpTeamAvatarReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeMpTeamAvatarRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeMpTeamAvatarRsp_CmdId>() {
  return ::proto::ChangeMpTeamAvatarRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeTeamNameReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeTeamNameReq_CmdId>() {
  return ::proto::ChangeTeamNameReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeTeamNameRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeTeamNameRsp_CmdId>() {
  return ::proto::ChangeTeamNameRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneTeamUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneTeamUpdateNotify_CmdId>() {
  return ::proto::SceneTeamUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneTeamMPDisplayCurAvatarNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneTeamMPDisplayCurAvatarNotify_CmdId>() {
  return ::proto::SceneTeamMPDisplayCurAvatarNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FocusAvatarReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FocusAvatarReq_CmdId>() {
  return ::proto::FocusAvatarReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FocusAvatarRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FocusAvatarRsp_CmdId>() {
  return ::proto::FocusAvatarRsp_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5favatar_2eproto__INCLUDED
