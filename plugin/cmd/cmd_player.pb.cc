// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_player.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class GetPlayerTokenReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerTokenReq>
     _instance;
} _GetPlayerTokenReq_default_instance_;
class GetPlayerTokenRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerTokenRsp>
     _instance;
} _GetPlayerTokenRsp_default_instance_;
class PlayerLoginReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginReq>
     _instance;
} _PlayerLoginReq_default_instance_;
class PlayerLoginRsp_AbilityHashMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry>
     _instance;
} _PlayerLoginRsp_AbilityHashMapEntry_default_instance_;
class PlayerLoginRsp_BlockInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry>
     _instance;
} _PlayerLoginRsp_BlockInfoMapEntry_default_instance_;
class PlayerLoginRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp>
     _instance;
} _PlayerLoginRsp_default_instance_;
class PlayerLogoutReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogoutReq>
     _instance;
} _PlayerLogoutReq_default_instance_;
class PlayerLogoutRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogoutRsp>
     _instance;
} _PlayerLogoutRsp_default_instance_;
class PlayerLogoutNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogoutNotify>
     _instance;
} _PlayerLogoutNotify_default_instance_;
class PlayerDataNotify_PropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerDataNotify::PlayerDataNotify_PropMapEntry>
     _instance;
} _PlayerDataNotify_PropMapEntry_default_instance_;
class PlayerDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerDataNotify>
     _instance;
} _PlayerDataNotify_default_instance_;
class ChangeGameTimeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeGameTimeReq>
     _instance;
} _ChangeGameTimeReq_default_instance_;
class ChangeGameTimeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeGameTimeRsp>
     _instance;
} _ChangeGameTimeRsp_default_instance_;
class PlayerGameTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerGameTimeNotify>
     _instance;
} _PlayerGameTimeNotify_default_instance_;
class PlayerPropNotify_PropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropNotify::PlayerPropNotify_PropMapEntry>
     _instance;
} _PlayerPropNotify_PropMapEntry_default_instance_;
class PlayerPropNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropNotify>
     _instance;
} _PlayerPropNotify_default_instance_;
class ClientTriggerEventNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientTriggerEventNotify>
     _instance;
} _ClientTriggerEventNotify_default_instance_;
class SetPlayerPropReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerPropReq>
     _instance;
} _SetPlayerPropReq_default_instance_;
class SetPlayerPropRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerPropRsp>
     _instance;
} _SetPlayerPropRsp_default_instance_;
class SetPlayerBornDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBornDataReq>
     _instance;
} _SetPlayerBornDataReq_default_instance_;
class SetPlayerBornDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBornDataRsp>
     _instance;
} _SetPlayerBornDataRsp_default_instance_;
class DoSetPlayerBornDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DoSetPlayerBornDataNotify>
     _instance;
} _DoSetPlayerBornDataNotify_default_instance_;
class PlayerPropChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropChangeNotify>
     _instance;
} _PlayerPropChangeNotify_default_instance_;
class SetPlayerNameReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerNameReq>
     _instance;
} _SetPlayerNameReq_default_instance_;
class SetPlayerNameRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerNameRsp>
     _instance;
} _SetPlayerNameRsp_default_instance_;
class SetOpenStateReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetOpenStateReq>
     _instance;
} _SetOpenStateReq_default_instance_;
class SetOpenStateRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetOpenStateRsp>
     _instance;
} _SetOpenStateRsp_default_instance_;
class OpenStateUpdateNotify_OpenStateMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry>
     _instance;
} _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_;
class OpenStateUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateUpdateNotify>
     _instance;
} _OpenStateUpdateNotify_default_instance_;
class OpenStateChangeNotify_OpenStateMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry>
     _instance;
} _OpenStateChangeNotify_OpenStateMapEntry_default_instance_;
class OpenStateChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateChangeNotify>
     _instance;
} _OpenStateChangeNotify_default_instance_;
class PlayerCookReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookReq>
     _instance;
} _PlayerCookReq_default_instance_;
class PlayerCookRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookRsp>
     _instance;
} _PlayerCookRsp_default_instance_;
class PlayerRandomCookReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerRandomCookReq>
     _instance;
} _PlayerRandomCookReq_default_instance_;
class PlayerRandomCookRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerRandomCookRsp>
     _instance;
} _PlayerRandomCookRsp_default_instance_;
class CookRecipeDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookRecipeData>
     _instance;
} _CookRecipeData_default_instance_;
class CookDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookDataNotify>
     _instance;
} _CookDataNotify_default_instance_;
class CookRecipeDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookRecipeDataNotify>
     _instance;
} _CookRecipeDataNotify_default_instance_;
class CookGradeDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookGradeDataNotify>
     _instance;
} _CookGradeDataNotify_default_instance_;
class PlayerCompoundMaterialReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCompoundMaterialReq>
     _instance;
} _PlayerCompoundMaterialReq_default_instance_;
class CompoundQueueDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompoundQueueData>
     _instance;
} _CompoundQueueData_default_instance_;
class PlayerCompoundMaterialRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCompoundMaterialRsp>
     _instance;
} _PlayerCompoundMaterialRsp_default_instance_;
class TakeCompoundOutputReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeCompoundOutputReq>
     _instance;
} _TakeCompoundOutputReq_default_instance_;
class TakeCompoundOutputRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeCompoundOutputRsp>
     _instance;
} _TakeCompoundOutputRsp_default_instance_;
class CompoundDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompoundDataNotify>
     _instance;
} _CompoundDataNotify_default_instance_;
class GetCompoundDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetCompoundDataReq>
     _instance;
} _GetCompoundDataReq_default_instance_;
class GetCompoundDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetCompoundDataRsp>
     _instance;
} _GetCompoundDataRsp_default_instance_;
class PlayerTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerTimeNotify>
     _instance;
} _PlayerTimeNotify_default_instance_;
class PlayerSetPauseReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetPauseReq>
     _instance;
} _PlayerSetPauseReq_default_instance_;
class PlayerSetPauseRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetPauseRsp>
     _instance;
} _PlayerSetPauseRsp_default_instance_;
class PlayerSetLanguageReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetLanguageReq>
     _instance;
} _PlayerSetLanguageReq_default_instance_;
class PlayerSetLanguageRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetLanguageRsp>
     _instance;
} _PlayerSetLanguageRsp_default_instance_;
class DataResVersionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DataResVersionNotify>
     _instance;
} _DataResVersionNotify_default_instance_;
class DailyTaskInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskInfo>
     _instance;
} _DailyTaskInfo_default_instance_;
class DailyTaskDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskDataNotify>
     _instance;
} _DailyTaskDataNotify_default_instance_;
class DailyTaskProgressNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskProgressNotify>
     _instance;
} _DailyTaskProgressNotify_default_instance_;
class DailyTaskScoreRewardNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskScoreRewardNotify>
     _instance;
} _DailyTaskScoreRewardNotify_default_instance_;
class WorldOwnerDailyTaskNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldOwnerDailyTaskNotify>
     _instance;
} _WorldOwnerDailyTaskNotify_default_instance_;
class AddRandTaskInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddRandTaskInfoNotify>
     _instance;
} _AddRandTaskInfoNotify_default_instance_;
class RemoveRandTaskInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveRandTaskInfoNotify>
     _instance;
} _RemoveRandTaskInfoNotify_default_instance_;
class TakePlayerLevelRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakePlayerLevelRewardReq>
     _instance;
} _TakePlayerLevelRewardReq_default_instance_;
class TakePlayerLevelRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakePlayerLevelRewardRsp>
     _instance;
} _TakePlayerLevelRewardRsp_default_instance_;
class PlayerLevelRewardUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLevelRewardUpdateNotify>
     _instance;
} _PlayerLevelRewardUpdateNotify_default_instance_;
class GivingRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecord>
     _instance;
} _GivingRecord_default_instance_;
class GivingRecordNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecordNotify>
     _instance;
} _GivingRecordNotify_default_instance_;
class GivingRecordChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecordChangeNotify>
     _instance;
} _GivingRecordChangeNotify_default_instance_;
class ItemGivingReq_ItemGuidCountMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry>
     _instance;
} _ItemGivingReq_ItemGuidCountMapEntry_default_instance_;
class ItemGivingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemGivingReq>
     _instance;
} _ItemGivingReq_default_instance_;
class ItemGivingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemGivingRsp>
     _instance;
} _ItemGivingRsp_default_instance_;
class PlayerCookArgsReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookArgsReq>
     _instance;
} _PlayerCookArgsReq_default_instance_;
class PlayerCookArgsRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookArgsRsp>
     _instance;
} _PlayerCookArgsRsp_default_instance_;
class PlayerLuaShellNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLuaShellNotify>
     _instance;
} _PlayerLuaShellNotify_default_instance_;
class ServerDisconnectClientNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDisconnectClientNotify>
     _instance;
} _ServerDisconnectClientNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fplayer_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[73];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[64];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, cloud_client_ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, black_uid_end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, account_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, is_proficient_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, gm_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, secret_key_seed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, client_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, system_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, device_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, login_rand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, is_editor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, language_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, account_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, cloud_client_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, gm_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, player_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_new_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, login_rand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_use_ability_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, ability_hash_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, ability_hash_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, res_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_silence_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, game_biz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, player_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_silence_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, res_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_res_need_relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, res_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, block_info_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutNotify, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, server_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, is_first_login_today_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, prop_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, is_force_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, cur_game_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropNotify, prop_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTriggerEventNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTriggerEventNotify, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTriggerEventNotify, force_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropReq, prop_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataReq, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataReq, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoSetPlayerBornDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropChangeNotify, prop_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropChangeNotify, prop_delta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameReq, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameRsp, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateReq, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateReq, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateUpdateNotify, open_state_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateChangeNotify, open_state_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, recipe_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, qte_quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, assist_avatar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, recipe_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, qte_quality_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookReq, material_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeData, recipe_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeData, proficiency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookDataNotify, grade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookDataNotify, recipe_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeDataNotify, recipe_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookGradeDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookGradeDataNotify, grade_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialReq, compound_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialReq, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, compound_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, output_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, wait_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, output_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialRsp, compound_que_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputReq, compound_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputRsp, item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundDataNotify, unlock_compound_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundDataNotify, compound_que_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, unlock_compound_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, compound_que_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, is_paused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, player_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, server_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseReq, is_paused_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageReq, language_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_silence_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, res_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_silence_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, res_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, is_res_need_relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, res_version_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, daily_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, finish_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, is_finished_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, score_reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, is_taken_score_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, finished_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskProgressNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskProgressNotify, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskScoreRewardNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskScoreRewardNotify, reward_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerDailyTaskNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerDailyTaskNotify, task_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRandTaskInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRandTaskInfoNotify, rand_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRandTaskInfoNotify, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, rand_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, is_succ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardReq, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, reward_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelRewardUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelRewardUpdateNotify, level_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, giving_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, is_finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, last_group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordNotify, giving_record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordChangeNotify, giving_record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, giving_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, item_param_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, item_guid_count_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, giving_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsReq, recipe_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsReq, assist_avatar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsRsp, qte_range_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, lua_shell_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDisconnectClientNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDisconnectClientNotify, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GetPlayerTokenReq)},
  { 13, -1, sizeof(GetPlayerTokenRsp)},
  { 29, -1, sizeof(PlayerLoginReq)},
  { 51, -1, sizeof(PlayerLoginRsp)},
  { 76, -1, sizeof(PlayerLogoutReq)},
  { 82, -1, sizeof(PlayerLogoutRsp)},
  { 88, -1, sizeof(PlayerLogoutNotify)},
  { 94, -1, sizeof(PlayerDataNotify)},
  { 104, -1, sizeof(ChangeGameTimeReq)},
  { 111, -1, sizeof(ChangeGameTimeRsp)},
  { 118, -1, sizeof(PlayerGameTimeNotify)},
  { 125, -1, sizeof(PlayerPropNotify)},
  { 131, -1, sizeof(ClientTriggerEventNotify)},
  { 138, -1, sizeof(SetPlayerPropReq)},
  { 144, -1, sizeof(SetPlayerPropRsp)},
  { 150, -1, sizeof(SetPlayerBornDataReq)},
  { 157, -1, sizeof(SetPlayerBornDataRsp)},
  { 163, -1, sizeof(DoSetPlayerBornDataNotify)},
  { 168, -1, sizeof(PlayerPropChangeNotify)},
  { 175, -1, sizeof(SetPlayerNameReq)},
  { 181, -1, sizeof(SetPlayerNameRsp)},
  { 188, -1, sizeof(SetOpenStateReq)},
  { 195, -1, sizeof(SetOpenStateRsp)},
  { 203, -1, sizeof(OpenStateUpdateNotify)},
  { 209, -1, sizeof(OpenStateChangeNotify)},
  { 215, -1, sizeof(PlayerCookReq)},
  { 223, -1, sizeof(PlayerCookRsp)},
  { 232, -1, sizeof(PlayerRandomCookReq)},
  { 238, -1, sizeof(PlayerRandomCookRsp)},
  { 244, -1, sizeof(CookRecipeData)},
  { 251, -1, sizeof(CookDataNotify)},
  { 258, -1, sizeof(CookRecipeDataNotify)},
  { 264, -1, sizeof(CookGradeDataNotify)},
  { 270, -1, sizeof(PlayerCompoundMaterialReq)},
  { 277, -1, sizeof(CompoundQueueData)},
  { 286, -1, sizeof(PlayerCompoundMaterialRsp)},
  { 293, -1, sizeof(TakeCompoundOutputReq)},
  { 299, -1, sizeof(TakeCompoundOutputRsp)},
  { 306, -1, sizeof(CompoundDataNotify)},
  { 313, -1, sizeof(GetCompoundDataReq)},
  { 318, -1, sizeof(GetCompoundDataRsp)},
  { 326, -1, sizeof(PlayerTimeNotify)},
  { 334, -1, sizeof(PlayerSetPauseReq)},
  { 340, -1, sizeof(PlayerSetPauseRsp)},
  { 346, -1, sizeof(PlayerSetLanguageReq)},
  { 352, -1, sizeof(PlayerSetLanguageRsp)},
  { 358, -1, sizeof(DataResVersionNotify)},
  { 371, -1, sizeof(DailyTaskInfo)},
  { 381, -1, sizeof(DailyTaskDataNotify)},
  { 389, -1, sizeof(DailyTaskProgressNotify)},
  { 395, -1, sizeof(DailyTaskScoreRewardNotify)},
  { 401, -1, sizeof(WorldOwnerDailyTaskNotify)},
  { 407, -1, sizeof(AddRandTaskInfoNotify)},
  { 414, -1, sizeof(RemoveRandTaskInfoNotify)},
  { 422, -1, sizeof(TakePlayerLevelRewardReq)},
  { 428, -1, sizeof(TakePlayerLevelRewardRsp)},
  { 436, -1, sizeof(PlayerLevelRewardUpdateNotify)},
  { 442, -1, sizeof(GivingRecord)},
  { 450, -1, sizeof(GivingRecordNotify)},
  { 456, -1, sizeof(GivingRecordChangeNotify)},
  { 462, -1, sizeof(ItemGivingReq)},
  { 470, -1, sizeof(ItemGivingRsp)},
  { 477, -1, sizeof(PlayerCookArgsReq)},
  { 484, -1, sizeof(PlayerCookArgsRsp)},
  { 491, -1, sizeof(PlayerLuaShellNotify)},
  { 498, -1, sizeof(ServerDisconnectClientNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerTokenReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerTokenRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginRsp_AbilityHashMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginRsp_BlockInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLogoutRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLogoutNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerDataNotify_PropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeGameTimeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeGameTimeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerGameTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPropNotify_PropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPropNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientTriggerEventNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerPropReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerPropRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBornDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBornDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DoSetPlayerBornDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPropChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerNameRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOpenStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOpenStateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateChangeNotify_OpenStateMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerRandomCookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerRandomCookRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookRecipeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookRecipeDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookGradeDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCompoundMaterialReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompoundQueueData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCompoundMaterialRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeCompoundOutputReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeCompoundOutputRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompoundDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetCompoundDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetCompoundDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetPauseReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetPauseRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetLanguageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetLanguageRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataResVersionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskProgressNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskScoreRewardNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldOwnerDailyTaskNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddRandTaskInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveRandTaskInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakePlayerLevelRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakePlayerLevelRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLevelRewardUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecordNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecordChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemGivingReq_ItemGuidCountMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemGivingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemGivingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookArgsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookArgsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLuaShellNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDisconnectClientNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_player.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[3].reflection = PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::CreateReflection(file_level_metadata[3].descriptor, _PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[4].reflection = PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::CreateReflection(file_level_metadata[4].descriptor, _PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[9].reflection = PlayerDataNotify::PlayerDataNotify_PropMapEntry::CreateReflection(file_level_metadata[9].descriptor, _PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[14].reflection = PlayerPropNotify::PlayerPropNotify_PropMapEntry::CreateReflection(file_level_metadata[14].descriptor, _PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[27].reflection = OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::CreateReflection(file_level_metadata[27].descriptor, _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[29].reflection = OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::CreateReflection(file_level_metadata[29].descriptor, _OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[66].reflection = ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::CreateReflection(file_level_metadata[66].descriptor, _ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 73);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _GetPlayerTokenReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerTokenReq_default_instance_);_GetPlayerTokenRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerTokenRsp_default_instance_);_PlayerLoginReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginReq_default_instance_);_PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginRsp_AbilityHashMapEntry_default_instance_);_PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginRsp_BlockInfoMapEntry_default_instance_);_PlayerLoginRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginRsp_default_instance_);_PlayerLogoutReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogoutReq_default_instance_);_PlayerLogoutRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogoutRsp_default_instance_);_PlayerLogoutNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogoutNotify_default_instance_);_PlayerDataNotify_PropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerDataNotify_PropMapEntry_default_instance_);_PlayerDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerDataNotify_default_instance_);_ChangeGameTimeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeGameTimeReq_default_instance_);_ChangeGameTimeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeGameTimeRsp_default_instance_);_PlayerGameTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerGameTimeNotify_default_instance_);_PlayerPropNotify_PropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPropNotify_PropMapEntry_default_instance_);_PlayerPropNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPropNotify_default_instance_);_ClientTriggerEventNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientTriggerEventNotify_default_instance_);_SetPlayerPropReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerPropReq_default_instance_);_SetPlayerPropRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerPropRsp_default_instance_);_SetPlayerBornDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBornDataReq_default_instance_);_SetPlayerBornDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBornDataRsp_default_instance_);_DoSetPlayerBornDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DoSetPlayerBornDataNotify_default_instance_);_PlayerPropChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPropChangeNotify_default_instance_);_SetPlayerNameReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerNameReq_default_instance_);_SetPlayerNameRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerNameRsp_default_instance_);_SetOpenStateReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetOpenStateReq_default_instance_);_SetOpenStateRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetOpenStateRsp_default_instance_);_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_);_OpenStateUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateUpdateNotify_default_instance_);_OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateChangeNotify_OpenStateMapEntry_default_instance_);_OpenStateChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateChangeNotify_default_instance_);_PlayerCookReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookReq_default_instance_);_PlayerCookRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookRsp_default_instance_);_PlayerRandomCookReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerRandomCookReq_default_instance_);_PlayerRandomCookRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerRandomCookRsp_default_instance_);_CookRecipeData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookRecipeData_default_instance_);_CookDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookDataNotify_default_instance_);_CookRecipeDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookRecipeDataNotify_default_instance_);_CookGradeDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookGradeDataNotify_default_instance_);_PlayerCompoundMaterialReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCompoundMaterialReq_default_instance_);_CompoundQueueData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompoundQueueData_default_instance_);_PlayerCompoundMaterialRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCompoundMaterialRsp_default_instance_);_TakeCompoundOutputReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeCompoundOutputReq_default_instance_);_TakeCompoundOutputRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeCompoundOutputRsp_default_instance_);_CompoundDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompoundDataNotify_default_instance_);_GetCompoundDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetCompoundDataReq_default_instance_);_GetCompoundDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetCompoundDataRsp_default_instance_);_PlayerTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerTimeNotify_default_instance_);_PlayerSetPauseReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetPauseReq_default_instance_);_PlayerSetPauseRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetPauseRsp_default_instance_);_PlayerSetLanguageReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetLanguageReq_default_instance_);_PlayerSetLanguageRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetLanguageRsp_default_instance_);_DataResVersionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DataResVersionNotify_default_instance_);_DailyTaskInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskInfo_default_instance_);_DailyTaskDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskDataNotify_default_instance_);_DailyTaskProgressNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskProgressNotify_default_instance_);_DailyTaskScoreRewardNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskScoreRewardNotify_default_instance_);_WorldOwnerDailyTaskNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldOwnerDailyTaskNotify_default_instance_);_AddRandTaskInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddRandTaskInfoNotify_default_instance_);_RemoveRandTaskInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveRandTaskInfoNotify_default_instance_);_TakePlayerLevelRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakePlayerLevelRewardReq_default_instance_);_TakePlayerLevelRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakePlayerLevelRewardRsp_default_instance_);_PlayerLevelRewardUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLevelRewardUpdateNotify_default_instance_);_GivingRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecord_default_instance_);_GivingRecordNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecordNotify_default_instance_);_GivingRecordChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecordChangeNotify_default_instance_);_ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemGivingReq_ItemGuidCountMapEntry_default_instance_);_ItemGivingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemGivingReq_default_instance_);_ItemGivingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemGivingRsp_default_instance_);_PlayerCookArgsReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookArgsReq_default_instance_);_PlayerCookArgsRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookArgsRsp_default_instance_);_PlayerLuaShellNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLuaShellNotify_default_instance_);_ServerDisconnectClientNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDisconnectClientNotify_default_instance_);_PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable());
  _PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable());
  _PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerLoginRsp_default_instance_._instance.get_mutable()->res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable());
  _PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable());
  _PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
  _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
  _OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerCookRsp_default_instance_._instance.get_mutable()->recipe_data_ = const_cast< ::proto::CookRecipeData*>(
      ::proto::CookRecipeData::internal_default_instance());
  _PlayerCookRsp_default_instance_._instance.get_mutable()->item_ = const_cast< ::proto::ItemParam*>(
      ::proto::ItemParam::internal_default_instance());
  _CookRecipeDataNotify_default_instance_._instance.get_mutable()->recipe_data_ = const_cast< ::proto::CookRecipeData*>(
      ::proto::CookRecipeData::internal_default_instance());
  _PlayerCompoundMaterialRsp_default_instance_._instance.get_mutable()->compound_que_data_ = const_cast< ::proto::CompoundQueueData*>(
      ::proto::CompoundQueueData::internal_default_instance());
  _DataResVersionNotify_default_instance_._instance.get_mutable()->res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _DailyTaskProgressNotify_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::DailyTaskInfo*>(
      ::proto::DailyTaskInfo::internal_default_instance());
  _AddRandTaskInfoNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _GivingRecordChangeNotify_default_instance_._instance.get_mutable()->giving_record_ = const_cast< ::proto::GivingRecord*>(
      ::proto::GivingRecord::internal_default_instance());
  _ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable());
  _ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_player.proto\022\005proto\032\014define.pr"
      "oto\"\234\002\n\021GetPlayerTokenReq\022\024\n\014account_typ"
      "e\030\001 \001(\r\022\023\n\013account_uid\030\002 \001(\t\022\025\n\raccount_"
      "token\030\003 \001(\t\022\023\n\013account_ext\030\004 \001(\t\022\013\n\003uid\030"
      "\005 \001(\r\022\020\n\010is_guest\030\006 \001(\010\022\025\n\rplatform_type"
      "\030\007 \001(\r\022\027\n\017cloud_client_ip\030\010 \001(\r\"a\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020e\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"\275\002\n\021GetPlayerTokenRsp\022\017\n\007retc"
      "ode\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\013\n\003uid\030\003 \001(\r\022\r\n\005t"
      "oken\030\004 \001(\t\022\032\n\022black_uid_end_time\030\005 \001(\r\022\024"
      "\n\014account_type\030\006 \001(\r\022\023\n\013account_uid\030\007 \001("
      "\t\022\034\n\024is_proficient_player\030\010 \001(\010\022\022\n\nsecre"
      "t_key\030\t \001(\t\022\016\n\006gm_uid\030\n \001(\r\022\027\n\017secret_ke"
      "y_seed\030\013 \001(\004\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_I"
      "D\020f\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\032\002\020\001\"\322\003\n\016PlayerLoginReq\022\r\n\005token\030\001"
      " \001(\t\022\026\n\016client_version\030\002 \001(\t\022\026\n\016system_v"
      "ersion\030\003 \001(\t\022\023\n\013device_name\030\004 \001(\t\022\023\n\013dev"
      "ice_uuid\030\005 \001(\t\022\022\n\ntarget_uid\030\006 \001(\r\022\022\n\nlo"
      "gin_rand\030\007 \001(\004\022\021\n\tis_editor\030\010 \001(\010\022\025\n\rlan"
      "guage_type\030\t \001(\r\022\024\n\014account_type\030\n \001(\r\022\023"
      "\n\013account_uid\030\013 \001(\t\022\020\n\010platform\030\014 \001(\t\022\023\n"
      "\013device_info\030\r \001(\t\022\025\n\rplatform_type\030\016 \001("
      "\r\022\020\n\010is_guest\030\017 \001(\010\022\027\n\017cloud_client_ip\030\020"
      " \001(\r\022\016\n\006gm_uid\030\021 \001(\r\"a\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\n\n\006CMD_ID\020g\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\""
      "\254\006\n\016PlayerLoginRsp\022\017\n\007retcode\030\001 \001(\005\022\023\n\013p"
      "layer_data\030\002 \001(\014\022\025\n\ris_new_player\030\003 \001(\010\022"
      "\022\n\ntarget_uid\030\004 \001(\r\022\022\n\nlogin_rand\030\005 \001(\004\022"
      "\033\n\023is_use_ability_hash\030\006 \001(\010\022\031\n\021ability_"
      "hash_code\030\007 \001(\005\022C\n\020ability_hash_map\030\010 \003("
      "\0132).proto.PlayerLoginRsp.AbilityHashMapE"
      "ntry\022\033\n\023client_data_version\030\t \001(\r\022\023\n\013res"
      "_version\030\n \001(\r\022\022\n\nis_relogin\030\013 \001(\010\022#\n\033cl"
      "ient_silence_data_version\030\r \001(\r\022\020\n\010game_"
      "biz\030\016 \001(\t\022\033\n\023player_data_version\030\017 \001(\r\022\022"
      "\n\nclient_md5\030\020 \001(\t\022\032\n\022client_silence_md5"
      "\030\021 \001(\t\022\017\n\007res_md5\030\022 \001(\t\022\033\n\023is_res_need_r"
      "elogin\030\023 \001(\010\0223\n\022res_version_config\030\024 \001(\013"
      "2\027.proto.ResVersionConfig\022\?\n\016block_info_"
      "map\030\025 \003(\0132\'.proto.PlayerLoginRsp.BlockIn"
      "foMapEntry\0325\n\023AbilityHashMapEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\032E\n\021BlockInfoMa"
      "pEntry\022\013\n\003key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.pro"
      "to.BlockInfo:\0028\001\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006C"
      "MD_ID\020h\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\236\002\n\017PlayerLogoutReq\022-\n\006re"
      "ason\030\001 \001(\0162\035.proto.PlayerLogoutReq.Reaso"
      "n\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020i\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"y\n\006Reason\022\016\n\nDISCON"
      "NECT\020\000\022\016\n\nCLIENT_REQ\020\001\022\013\n\007TIMEOUT\020\002\022\r\n\tA"
      "DMIN_REQ\020\003\022\020\n\014SERVER_CLOSE\020\004\022\014\n\010GM_CLEAR"
      "\020\005\022\023\n\017PLAYER_TRANSFER\020\006\"p\n\017PlayerLogoutR"
      "sp\022\017\n\007retcode\030\001 \001(\005\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n"
      "\n\006CMD_ID\020j\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_"
      "IS_RELIABLE\020\001\032\002\020\001\"D\n\022PlayerLogoutNotify\022"
      "\017\n\007retcode\030\001 \001(\005\"\035\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006C"
      "MD_ID\020k\"\263\002\n\020PlayerDataNotify\022\021\n\tnick_nam"
      "e\030\001 \001(\t\022\023\n\013server_time\030\002 \001(\004\022\034\n\024is_first"
      "_login_today\030\003 \001(\010\022\021\n\tregion_id\030\004 \001(\r\0226\n"
      "\010prop_map\030\006 \003(\0132$.proto.PlayerDataNotify"
      ".PropMapEntry\032@\n\014PropMapEntry\022\013\n\003key\030\001 \001"
      "(\r\022\037\n\005value\030\002 \001(\0132\020.proto.PropValue:\0028\001\""
      "L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020l\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\237\001"
      "\n\021ChangeGameTimeReq\022\021\n\tgame_time\030\001 \001(\r\022\024"
      "\n\014is_force_set\030\002 \001(\010\"a\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\n\n\006CMD_ID\020m\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\""
      "\211\001\n\021ChangeGameTimeRsp\022\017\n\007retcode\030\001 \001(\005\022\025"
      "\n\rcur_game_time\030\002 \001(\r\"L\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\n\n\006CMD_ID\020n\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\032\002\020\001\"\231\001\n\024PlayerGameTimeNo"
      "tify\022\021\n\tgame_time\030\001 \001(\r\022\013\n\003uid\030\002 \001(\r\"a\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020o\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALL"
      "OW_CLIENT\020\001\032\002\020\001\"\332\001\n\020PlayerPropNotify\0226\n\010"
      "prop_map\030\001 \003(\0132$.proto.PlayerPropNotify."
      "PropMapEntry\032@\n\014PropMapEntry\022\013\n\003key\030\001 \001("
      "\r\022\037\n\005value\030\002 \001(\0132\020.proto.PropValue:\0028\001\"L"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020p\022\023\n\017ENET_CH"
      "ANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\274\001\n"
      "\030ClientTriggerEventNotify\022+\n\nevent_type\030"
      "\001 \001(\0162\027.proto.EventTriggerType\022\020\n\010force_"
      "id\030\002 \001(\r\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020q\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\232\001\n\020SetPlaye"
      "rPropReq\022#\n\tprop_list\030\001 \003(\0132\020.proto.Prop"
      "Value\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020r\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022"
      "\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"q\n\020SetPlayerPro"
      "pRsp\022\017\n\007retcode\030\001 \001(\005\"L\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\n\n\006CMD_ID\020s\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\032\002\020\001\"\237\001\n\024SetPlayerBornDat"
      "aReq\022\021\n\tavatar_id\030\001 \001(\r\022\021\n\tnick_name\030\002 \001"
      "(\t\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020t\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017"
      "IS_ALLOW_CLIENT\020\001\032\002\020\001\"u\n\024SetPlayerBornDa"
      "taRsp\022\017\n\007retcode\030\001 \001(\005\"L\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\n\n\006CMD_ID\020u\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\032\002\020\001\"i\n\031DoSetPlayerBornD"
      "ataNotify\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020v"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\215\001\n\026PlayerPropChangeNotify\022\021\n\tpr"
      "op_type\030\001 \001(\r\022\022\n\nprop_delta\030\002 \001(\r\"L\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020w\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\210\001\n\020SetP"
      "layerNameReq\022\021\n\tnick_name\030\001 \001(\t\"a\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020x\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"\204\001\n\020SetPlayerNameRsp\022\017\n\007retco"
      "de\030\001 \001(\005\022\021\n\tnick_name\030\002 \001(\t\"L\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\n\n\006CMD_ID\020y\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\220\001\n\017SetOpenSta"
      "teReq\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r\"a\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020z\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_"
      "CLIENT\020\001\032\002\020\001\"\214\001\n\017SetOpenStateRsp\022\017\n\007retc"
      "ode\030\001 \001(\005\022\013\n\003key\030\002 \001(\r\022\r\n\005value\030\003 \001(\r\"L\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020{\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\342\001\n\025"
      "OpenStateUpdateNotify\022F\n\016open_state_map\030"
      "\001 \003(\0132..proto.OpenStateUpdateNotify.Open"
      "StateMapEntry\0323\n\021OpenStateMapEntry\022\013\n\003ke"
      "y\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"L\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\n\n\006CMD_ID\020|\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\342\001\n\025OpenStateCh"
      "angeNotify\022F\n\016open_state_map\030\001 \003(\0132..pro"
      "to.OpenStateChangeNotify.OpenStateMapEnt"
      "ry\0323\n\021OpenStateMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005"
      "value\030\002 \001(\r:\0028\001\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CM"
      "D_ID\020}\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\032\002\020\001\"\261\001\n\rPlayerCookReq\022\021\n\trecip"
      "e_id\030\001 \001(\r\022\023\n\013qte_quality\030\002 \001(\r\022\025\n\rassis"
      "t_avatar\030\003 \001(\r\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD"
      "_ID\020~\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\317\001\n\rPl"
      "ayerCookRsp\022\017\n\007retcode\030\001 \001(\r\022*\n\013recipe_d"
      "ata\030\002 \001(\0132\025.proto.CookRecipeData\022\036\n\004item"
      "\030\003 \001(\0132\020.proto.ItemParam\022\023\n\013qte_quality\030"
      "\004 \001(\r\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\177\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\242\001\n\023PlayerRandomCookReq\022\'\n\rmaterial_"
      "list\030\001 \003(\0132\020.proto.ItemParam\"b\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\200\001\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIE"
      "NT\020\001\032\002\020\001\"u\n\023PlayerRandomCookRsp\022\017\n\007retco"
      "de\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\201\001"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"8\n\016CookRecipeData\022\021\n\trecipe_id\030\001"
      " \001(\r\022\023\n\013proficiency\030\002 \001(\r\"\237\001\n\016CookDataNo"
      "tify\022\r\n\005grade\030\001 \001(\r\022/\n\020recipe_data_list\030"
      "\002 \003(\0132\025.proto.CookRecipeData\"M\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\202\001\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\221\001\n\024CookReci"
      "peDataNotify\022*\n\013recipe_data\030\001 \001(\0132\025.prot"
      "o.CookRecipeData\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\203\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\032\002\020\001\"s\n\023CookGradeDataNotify\022\r"
      "\n\005grade\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\204\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\032\002\020\001\"\243\001\n\031PlayerCompoundMaterialR"
      "eq\022\023\n\013compound_id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\"b"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\205\001\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_"
      "ALLOW_CLIENT\020\001\032\002\020\001\"g\n\021CompoundQueueData\022"
      "\023\n\013compound_id\030\001 \001(\r\022\024\n\014output_count\030\002 \001"
      "(\r\022\022\n\nwait_count\030\003 \001(\r\022\023\n\013output_time\030\004 "
      "\001(\r\"\260\001\n\031PlayerCompoundMaterialRsp\022\017\n\007ret"
      "code\030\001 \001(\r\0223\n\021compound_que_data\030\002 \001(\0132\030."
      "proto.CompoundQueueData\"M\n\005CmdId\022\010\n\004NONE"
      "\020\000\022\013\n\006CMD_ID\020\206\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020"
      "ENET_IS_RELIABLE\020\001\032\002\020\001\"\220\001\n\025TakeCompoundO"
      "utputReq\022\023\n\013compound_id\030\001 \001(\r\"b\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\207\001\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLI"
      "ENT\020\001\032\002\020\001\"\234\001\n\025TakeCompoundOutputRsp\022\017\n\007r"
      "etcode\030\001 \001(\r\022#\n\titem_list\030\002 \003(\0132\020.proto."
      "ItemParam\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\210"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\032\002\020\001\"\273\001\n\022CompoundDataNotify\022\034\n\024unloc"
      "k_compound_list\030\001 \003(\r\0228\n\026compound_que_da"
      "ta_list\030\002 \003(\0132\030.proto.CompoundQueueData\""
      "M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\211\001\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"x"
      "\n\022GetCompoundDataReq\"b\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\013\n\006CMD_ID\020\212\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001"
      "\"\314\001\n\022GetCompoundDataRsp\022\017\n\007retcode\030\001 \001(\r"
      "\022\034\n\024unlock_compound_list\030\002 \003(\r\0228\n\026compou"
      "nd_que_data_list\030\003 \003(\0132\030.proto.CompoundQ"
      "ueueData\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\213\001"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\236\001\n\020PlayerTimeNotify\022\021\n\tis_pause"
      "d\030\001 \001(\010\022\023\n\013player_time\030\002 \001(\004\022\023\n\013server_t"
      "ime\030\003 \001(\004\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\214"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\032\002\020\001\"\212\001\n\021PlayerSetPauseReq\022\021\n\tis_pau"
      "sed\030\001 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\215"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"s\n\021PlayerS"
      "etPauseRsp\022\017\n\007retcode\030\001 \001(\r\"M\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\216\001\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\221\001\n\024PlayerSet"
      "LanguageReq\022\025\n\rlanguage_type\030\001 \001(\r\"b\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\217\001\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLO"
      "W_CLIENT\020\001\032\002\020\001\"v\n\024PlayerSetLanguageRsp\022\017"
      "\n\007retcode\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\220\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\317\002\n\024DataResVersionNotify\022"
      "\033\n\023client_data_version\030\001 \001(\r\022#\n\033client_s"
      "ilence_data_version\030\002 \001(\r\022\023\n\013res_version"
      "\030\003 \001(\r\022\022\n\nclient_md5\030\005 \001(\t\022\032\n\022client_sil"
      "ence_md5\030\006 \001(\t\022\017\n\007res_md5\030\007 \001(\t\022\033\n\023is_re"
      "s_need_relogin\030\t \001(\010\0223\n\022res_version_conf"
      "ig\030\n \001(\0132\027.proto.ResVersionConfig\"M\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\221\001\022\023\n\017ENET_CHANNE"
      "L_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"y\n\rDail"
      "yTaskInfo\022\025\n\rdaily_task_id\030\001 \001(\r\022\021\n\trewa"
      "rd_id\030\002 \001(\r\022\020\n\010progress\030\003 \001(\r\022\027\n\017finish_"
      "progress\030\004 \001(\r\022\023\n\013is_finished\030\005 \001(\010\"\262\001\n\023"
      "DailyTaskDataNotify\022\027\n\017score_reward_id\030\003"
      " \001(\r\022\035\n\025is_taken_score_reward\030\004 \001(\010\022\024\n\014f"
      "inished_num\030\005 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\222\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\032\002\020\001\"\214\001\n\027DailyTaskProgressNo"
      "tify\022\"\n\004info\030\001 \001(\0132\024.proto.DailyTaskInfo"
      "\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\223\001\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\""
      "~\n\032DailyTaskScoreRewardNotify\022\021\n\treward_"
      "id\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\224\001"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\250\001\n\031WorldOwnerDailyTaskNotify\022\'\n"
      "\ttask_list\030\001 \003(\0132\024.proto.DailyTaskInfo\"b"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\225\001\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_"
      "ALLOW_CLIENT\020\001\032\002\020\001\"\230\001\n\025AddRandTaskInfoNo"
      "tify\022\024\n\014rand_task_id\030\001 \001(\r\022\032\n\003pos\030\002 \001(\0132"
      "\r.proto.Vector\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\226\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\032\002\020\001\"\220\002\n\030RemoveRandTaskInfoNoti"
      "fy\022\024\n\014rand_task_id\030\001 \001(\r\022\017\n\007is_succ\030\002 \001("
      "\010\022<\n\006reason\030\003 \001(\0162,.proto.RemoveRandTask"
      "InfoNotify.FinishReason\"@\n\014FinishReason\022"
      "\013\n\007DEFAULT\020\000\022\t\n\005CLEAR\020\001\022\014\n\010DISTANCE\020\002\022\n\n"
      "\006FINISH\020\003\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\227"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\032\002\020\001\"\215\001\n\030TakePlayerLevelRewardReq\022\r\n"
      "\005level\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\230\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\234\001\n\030Tak"
      "ePlayerLevelRewardRsp\022\017\n\007retcode\030\001 \001(\005\022\r"
      "\n\005level\030\002 \001(\r\022\021\n\treward_id\030\003 \001(\r\"M\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\231\001\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\202\001\n\035Play"
      "erLevelRewardUpdateNotify\022\022\n\nlevel_list\030"
      "\001 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\232\001\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\032\002\020\001\"M\n\014GivingRecord\022\021\n\tgiving_id\030\001 \001(\r\022"
      "\023\n\013is_finished\030\002 \001(\010\022\025\n\rlast_group_id\030\003 "
      "\001(\r\"\224\001\n\022GivingRecordNotify\022/\n\022giving_rec"
      "ord_list\030\001 \003(\0132\023.proto.GivingRecord\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\233\001\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\225\001\n\030G"
      "ivingRecordChangeNotify\022*\n\rgiving_record"
      "\030\001 \001(\0132\023.proto.GivingRecord\"M\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\234\001\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\263\002\n\rItemGivin"
      "gReq\022\021\n\tgiving_id\030\001 \001(\r\022)\n\017item_param_li"
      "st\030\002 \003(\0132\020.proto.ItemParam\022G\n\023item_guid_"
      "count_map\030\003 \003(\0132*.proto.ItemGivingReq.It"
      "emGuidCountMapEntry\0327\n\025ItemGuidCountMapE"
      "ntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\r:\0028\001\"b\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\235\001\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_AL"
      "LOW_CLIENT\020\001\032\002\020\001\"\202\001\n\rItemGivingRsp\022\017\n\007re"
      "tcode\030\001 \001(\005\022\021\n\tgiving_id\030\002 \001(\r\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\236\001\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\241\001\n\021Player"
      "CookArgsReq\022\021\n\trecipe_id\030\001 \001(\r\022\025\n\rassist"
      "_avatar\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\237\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\214\001\n\021Pl"
      "ayerCookArgsRsp\022\017\n\007retcode\030\001 \001(\r\022\027\n\017qte_"
      "range_ratio\030\002 \001(\002\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\240\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\032\002\020\001\"\204\001\n\024PlayerLuaShellNotif"
      "y\022\n\n\002id\030\001 \001(\r\022\021\n\tlua_shell\030\002 \001(\014\"M\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\241\001\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"{\n\034Serve"
      "rDisconnectClientNotify\022\014\n\004data\030\001 \001(\r\"M\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\242\001\022\023\n\017ENET_CH"
      "ANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 11884);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_player.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fplayer_2eproto

const ::google::protobuf::EnumDescriptor* GetPlayerTokenReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[0];
}
bool GetPlayerTokenReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::NONE;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::CMD_ID;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::ENET_CHANNEL_ID;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::ENET_IS_RELIABLE;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::IS_ALLOW_CLIENT;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::CmdId_MIN;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq::CmdId_MAX;
const int GetPlayerTokenReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPlayerTokenRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[1];
}
bool GetPlayerTokenRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 102:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp::NONE;
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp::CMD_ID;
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp::ENET_CHANNEL_ID;
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp::ENET_IS_RELIABLE;
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp::CmdId_MIN;
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp::CmdId_MAX;
const int GetPlayerTokenRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLoginReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[2];
}
bool PlayerLoginReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 103:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLoginReq_CmdId PlayerLoginReq::NONE;
const PlayerLoginReq_CmdId PlayerLoginReq::CMD_ID;
const PlayerLoginReq_CmdId PlayerLoginReq::ENET_CHANNEL_ID;
const PlayerLoginReq_CmdId PlayerLoginReq::ENET_IS_RELIABLE;
const PlayerLoginReq_CmdId PlayerLoginReq::IS_ALLOW_CLIENT;
const PlayerLoginReq_CmdId PlayerLoginReq::CmdId_MIN;
const PlayerLoginReq_CmdId PlayerLoginReq::CmdId_MAX;
const int PlayerLoginReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLoginRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[3];
}
bool PlayerLoginRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 104:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLoginRsp_CmdId PlayerLoginRsp::NONE;
const PlayerLoginRsp_CmdId PlayerLoginRsp::CMD_ID;
const PlayerLoginRsp_CmdId PlayerLoginRsp::ENET_CHANNEL_ID;
const PlayerLoginRsp_CmdId PlayerLoginRsp::ENET_IS_RELIABLE;
const PlayerLoginRsp_CmdId PlayerLoginRsp::CmdId_MIN;
const PlayerLoginRsp_CmdId PlayerLoginRsp::CmdId_MAX;
const int PlayerLoginRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLogoutReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[4];
}
bool PlayerLogoutReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 105:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLogoutReq_CmdId PlayerLogoutReq::NONE;
const PlayerLogoutReq_CmdId PlayerLogoutReq::CMD_ID;
const PlayerLogoutReq_CmdId PlayerLogoutReq::ENET_CHANNEL_ID;
const PlayerLogoutReq_CmdId PlayerLogoutReq::ENET_IS_RELIABLE;
const PlayerLogoutReq_CmdId PlayerLogoutReq::IS_ALLOW_CLIENT;
const PlayerLogoutReq_CmdId PlayerLogoutReq::CmdId_MIN;
const PlayerLogoutReq_CmdId PlayerLogoutReq::CmdId_MAX;
const int PlayerLogoutReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLogoutReq_Reason_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[5];
}
bool PlayerLogoutReq_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLogoutReq_Reason PlayerLogoutReq::DISCONNECT;
const PlayerLogoutReq_Reason PlayerLogoutReq::CLIENT_REQ;
const PlayerLogoutReq_Reason PlayerLogoutReq::TIMEOUT;
const PlayerLogoutReq_Reason PlayerLogoutReq::ADMIN_REQ;
const PlayerLogoutReq_Reason PlayerLogoutReq::SERVER_CLOSE;
const PlayerLogoutReq_Reason PlayerLogoutReq::GM_CLEAR;
const PlayerLogoutReq_Reason PlayerLogoutReq::PLAYER_TRANSFER;
const PlayerLogoutReq_Reason PlayerLogoutReq::Reason_MIN;
const PlayerLogoutReq_Reason PlayerLogoutReq::Reason_MAX;
const int PlayerLogoutReq::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLogoutRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[6];
}
bool PlayerLogoutRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 106:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLogoutRsp_CmdId PlayerLogoutRsp::NONE;
const PlayerLogoutRsp_CmdId PlayerLogoutRsp::CMD_ID;
const PlayerLogoutRsp_CmdId PlayerLogoutRsp::ENET_CHANNEL_ID;
const PlayerLogoutRsp_CmdId PlayerLogoutRsp::ENET_IS_RELIABLE;
const PlayerLogoutRsp_CmdId PlayerLogoutRsp::CmdId_MIN;
const PlayerLogoutRsp_CmdId PlayerLogoutRsp::CmdId_MAX;
const int PlayerLogoutRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLogoutNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[7];
}
bool PlayerLogoutNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 107:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLogoutNotify_CmdId PlayerLogoutNotify::NONE;
const PlayerLogoutNotify_CmdId PlayerLogoutNotify::CMD_ID;
const PlayerLogoutNotify_CmdId PlayerLogoutNotify::CmdId_MIN;
const PlayerLogoutNotify_CmdId PlayerLogoutNotify::CmdId_MAX;
const int PlayerLogoutNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[8];
}
bool PlayerDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 108:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerDataNotify_CmdId PlayerDataNotify::NONE;
const PlayerDataNotify_CmdId PlayerDataNotify::CMD_ID;
const PlayerDataNotify_CmdId PlayerDataNotify::ENET_CHANNEL_ID;
const PlayerDataNotify_CmdId PlayerDataNotify::ENET_IS_RELIABLE;
const PlayerDataNotify_CmdId PlayerDataNotify::CmdId_MIN;
const PlayerDataNotify_CmdId PlayerDataNotify::CmdId_MAX;
const int PlayerDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChangeGameTimeReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[9];
}
bool ChangeGameTimeReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 109:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::NONE;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::CMD_ID;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::ENET_CHANNEL_ID;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::ENET_IS_RELIABLE;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::IS_ALLOW_CLIENT;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::CmdId_MIN;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq::CmdId_MAX;
const int ChangeGameTimeReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChangeGameTimeRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[10];
}
bool ChangeGameTimeRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 110:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp::NONE;
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp::CMD_ID;
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp::ENET_CHANNEL_ID;
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp::ENET_IS_RELIABLE;
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp::CmdId_MIN;
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp::CmdId_MAX;
const int ChangeGameTimeRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerGameTimeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[11];
}
bool PlayerGameTimeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 111:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::NONE;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::CMD_ID;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::ENET_CHANNEL_ID;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::ENET_IS_RELIABLE;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::IS_ALLOW_CLIENT;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::CmdId_MIN;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify::CmdId_MAX;
const int PlayerGameTimeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerPropNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[12];
}
bool PlayerPropNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 112:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerPropNotify_CmdId PlayerPropNotify::NONE;
const PlayerPropNotify_CmdId PlayerPropNotify::CMD_ID;
const PlayerPropNotify_CmdId PlayerPropNotify::ENET_CHANNEL_ID;
const PlayerPropNotify_CmdId PlayerPropNotify::ENET_IS_RELIABLE;
const PlayerPropNotify_CmdId PlayerPropNotify::CmdId_MIN;
const PlayerPropNotify_CmdId PlayerPropNotify::CmdId_MAX;
const int PlayerPropNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientTriggerEventNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[13];
}
bool ClientTriggerEventNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 113:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::NONE;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::CMD_ID;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::ENET_CHANNEL_ID;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::ENET_IS_RELIABLE;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::IS_ALLOW_CLIENT;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::CmdId_MIN;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify::CmdId_MAX;
const int ClientTriggerEventNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerPropReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[14];
}
bool SetPlayerPropReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 114:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerPropReq_CmdId SetPlayerPropReq::NONE;
const SetPlayerPropReq_CmdId SetPlayerPropReq::CMD_ID;
const SetPlayerPropReq_CmdId SetPlayerPropReq::ENET_CHANNEL_ID;
const SetPlayerPropReq_CmdId SetPlayerPropReq::ENET_IS_RELIABLE;
const SetPlayerPropReq_CmdId SetPlayerPropReq::IS_ALLOW_CLIENT;
const SetPlayerPropReq_CmdId SetPlayerPropReq::CmdId_MIN;
const SetPlayerPropReq_CmdId SetPlayerPropReq::CmdId_MAX;
const int SetPlayerPropReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerPropRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[15];
}
bool SetPlayerPropRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 115:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerPropRsp_CmdId SetPlayerPropRsp::NONE;
const SetPlayerPropRsp_CmdId SetPlayerPropRsp::CMD_ID;
const SetPlayerPropRsp_CmdId SetPlayerPropRsp::ENET_CHANNEL_ID;
const SetPlayerPropRsp_CmdId SetPlayerPropRsp::ENET_IS_RELIABLE;
const SetPlayerPropRsp_CmdId SetPlayerPropRsp::CmdId_MIN;
const SetPlayerPropRsp_CmdId SetPlayerPropRsp::CmdId_MAX;
const int SetPlayerPropRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerBornDataReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[16];
}
bool SetPlayerBornDataReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 116:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::NONE;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::CMD_ID;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::ENET_CHANNEL_ID;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::ENET_IS_RELIABLE;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::IS_ALLOW_CLIENT;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::CmdId_MIN;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq::CmdId_MAX;
const int SetPlayerBornDataReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerBornDataRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[17];
}
bool SetPlayerBornDataRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 117:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp::NONE;
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp::CMD_ID;
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp::ENET_CHANNEL_ID;
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp::ENET_IS_RELIABLE;
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp::CmdId_MIN;
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp::CmdId_MAX;
const int SetPlayerBornDataRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DoSetPlayerBornDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[18];
}
bool DoSetPlayerBornDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 118:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify::NONE;
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify::CMD_ID;
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify::ENET_CHANNEL_ID;
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify::ENET_IS_RELIABLE;
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify::CmdId_MIN;
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify::CmdId_MAX;
const int DoSetPlayerBornDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerPropChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[19];
}
bool PlayerPropChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 119:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify::NONE;
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify::CMD_ID;
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify::ENET_CHANNEL_ID;
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify::ENET_IS_RELIABLE;
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify::CmdId_MIN;
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify::CmdId_MAX;
const int PlayerPropChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerNameReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[20];
}
bool SetPlayerNameReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 120:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerNameReq_CmdId SetPlayerNameReq::NONE;
const SetPlayerNameReq_CmdId SetPlayerNameReq::CMD_ID;
const SetPlayerNameReq_CmdId SetPlayerNameReq::ENET_CHANNEL_ID;
const SetPlayerNameReq_CmdId SetPlayerNameReq::ENET_IS_RELIABLE;
const SetPlayerNameReq_CmdId SetPlayerNameReq::IS_ALLOW_CLIENT;
const SetPlayerNameReq_CmdId SetPlayerNameReq::CmdId_MIN;
const SetPlayerNameReq_CmdId SetPlayerNameReq::CmdId_MAX;
const int SetPlayerNameReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerNameRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[21];
}
bool SetPlayerNameRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 121:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerNameRsp_CmdId SetPlayerNameRsp::NONE;
const SetPlayerNameRsp_CmdId SetPlayerNameRsp::CMD_ID;
const SetPlayerNameRsp_CmdId SetPlayerNameRsp::ENET_CHANNEL_ID;
const SetPlayerNameRsp_CmdId SetPlayerNameRsp::ENET_IS_RELIABLE;
const SetPlayerNameRsp_CmdId SetPlayerNameRsp::CmdId_MIN;
const SetPlayerNameRsp_CmdId SetPlayerNameRsp::CmdId_MAX;
const int SetPlayerNameRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetOpenStateReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[22];
}
bool SetOpenStateReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 122:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetOpenStateReq_CmdId SetOpenStateReq::NONE;
const SetOpenStateReq_CmdId SetOpenStateReq::CMD_ID;
const SetOpenStateReq_CmdId SetOpenStateReq::ENET_CHANNEL_ID;
const SetOpenStateReq_CmdId SetOpenStateReq::ENET_IS_RELIABLE;
const SetOpenStateReq_CmdId SetOpenStateReq::IS_ALLOW_CLIENT;
const SetOpenStateReq_CmdId SetOpenStateReq::CmdId_MIN;
const SetOpenStateReq_CmdId SetOpenStateReq::CmdId_MAX;
const int SetOpenStateReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetOpenStateRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[23];
}
bool SetOpenStateRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 123:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetOpenStateRsp_CmdId SetOpenStateRsp::NONE;
const SetOpenStateRsp_CmdId SetOpenStateRsp::CMD_ID;
const SetOpenStateRsp_CmdId SetOpenStateRsp::ENET_CHANNEL_ID;
const SetOpenStateRsp_CmdId SetOpenStateRsp::ENET_IS_RELIABLE;
const SetOpenStateRsp_CmdId SetOpenStateRsp::CmdId_MIN;
const SetOpenStateRsp_CmdId SetOpenStateRsp::CmdId_MAX;
const int SetOpenStateRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OpenStateUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[24];
}
bool OpenStateUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 124:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify::NONE;
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify::CMD_ID;
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify::ENET_CHANNEL_ID;
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify::ENET_IS_RELIABLE;
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify::CmdId_MIN;
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify::CmdId_MAX;
const int OpenStateUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OpenStateChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[25];
}
bool OpenStateChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 125:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OpenStateChangeNotify_CmdId OpenStateChangeNotify::NONE;
const OpenStateChangeNotify_CmdId OpenStateChangeNotify::CMD_ID;
const OpenStateChangeNotify_CmdId OpenStateChangeNotify::ENET_CHANNEL_ID;
const OpenStateChangeNotify_CmdId OpenStateChangeNotify::ENET_IS_RELIABLE;
const OpenStateChangeNotify_CmdId OpenStateChangeNotify::CmdId_MIN;
const OpenStateChangeNotify_CmdId OpenStateChangeNotify::CmdId_MAX;
const int OpenStateChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerCookReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[26];
}
bool PlayerCookReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 126:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerCookReq_CmdId PlayerCookReq::NONE;
const PlayerCookReq_CmdId PlayerCookReq::CMD_ID;
const PlayerCookReq_CmdId PlayerCookReq::ENET_CHANNEL_ID;
const PlayerCookReq_CmdId PlayerCookReq::ENET_IS_RELIABLE;
const PlayerCookReq_CmdId PlayerCookReq::IS_ALLOW_CLIENT;
const PlayerCookReq_CmdId PlayerCookReq::CmdId_MIN;
const PlayerCookReq_CmdId PlayerCookReq::CmdId_MAX;
const int PlayerCookReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerCookRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[27];
}
bool PlayerCookRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 127:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerCookRsp_CmdId PlayerCookRsp::NONE;
const PlayerCookRsp_CmdId PlayerCookRsp::CMD_ID;
const PlayerCookRsp_CmdId PlayerCookRsp::ENET_CHANNEL_ID;
const PlayerCookRsp_CmdId PlayerCookRsp::ENET_IS_RELIABLE;
const PlayerCookRsp_CmdId PlayerCookRsp::CmdId_MIN;
const PlayerCookRsp_CmdId PlayerCookRsp::CmdId_MAX;
const int PlayerCookRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerRandomCookReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[28];
}
bool PlayerRandomCookReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 128:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::NONE;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::CMD_ID;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::ENET_CHANNEL_ID;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::ENET_IS_RELIABLE;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::IS_ALLOW_CLIENT;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::CmdId_MIN;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq::CmdId_MAX;
const int PlayerRandomCookReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerRandomCookRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[29];
}
bool PlayerRandomCookRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 129:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp::NONE;
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp::CMD_ID;
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp::ENET_CHANNEL_ID;
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp::ENET_IS_RELIABLE;
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp::CmdId_MIN;
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp::CmdId_MAX;
const int PlayerRandomCookRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CookDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[30];
}
bool CookDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 130:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CookDataNotify_CmdId CookDataNotify::NONE;
const CookDataNotify_CmdId CookDataNotify::CMD_ID;
const CookDataNotify_CmdId CookDataNotify::ENET_CHANNEL_ID;
const CookDataNotify_CmdId CookDataNotify::ENET_IS_RELIABLE;
const CookDataNotify_CmdId CookDataNotify::CmdId_MIN;
const CookDataNotify_CmdId CookDataNotify::CmdId_MAX;
const int CookDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CookRecipeDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[31];
}
bool CookRecipeDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 131:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CookRecipeDataNotify_CmdId CookRecipeDataNotify::NONE;
const CookRecipeDataNotify_CmdId CookRecipeDataNotify::CMD_ID;
const CookRecipeDataNotify_CmdId CookRecipeDataNotify::ENET_CHANNEL_ID;
const CookRecipeDataNotify_CmdId CookRecipeDataNotify::ENET_IS_RELIABLE;
const CookRecipeDataNotify_CmdId CookRecipeDataNotify::CmdId_MIN;
const CookRecipeDataNotify_CmdId CookRecipeDataNotify::CmdId_MAX;
const int CookRecipeDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CookGradeDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[32];
}
bool CookGradeDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 132:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CookGradeDataNotify_CmdId CookGradeDataNotify::NONE;
const CookGradeDataNotify_CmdId CookGradeDataNotify::CMD_ID;
const CookGradeDataNotify_CmdId CookGradeDataNotify::ENET_CHANNEL_ID;
const CookGradeDataNotify_CmdId CookGradeDataNotify::ENET_IS_RELIABLE;
const CookGradeDataNotify_CmdId CookGradeDataNotify::CmdId_MIN;
const CookGradeDataNotify_CmdId CookGradeDataNotify::CmdId_MAX;
const int CookGradeDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerCompoundMaterialReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[33];
}
bool PlayerCompoundMaterialReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 133:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::NONE;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::CMD_ID;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::ENET_CHANNEL_ID;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::ENET_IS_RELIABLE;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::IS_ALLOW_CLIENT;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::CmdId_MIN;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq::CmdId_MAX;
const int PlayerCompoundMaterialReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerCompoundMaterialRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[34];
}
bool PlayerCompoundMaterialRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 134:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp::NONE;
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp::CMD_ID;
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp::ENET_CHANNEL_ID;
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp::ENET_IS_RELIABLE;
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp::CmdId_MIN;
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp::CmdId_MAX;
const int PlayerCompoundMaterialRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TakeCompoundOutputReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[35];
}
bool TakeCompoundOutputReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 135:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::NONE;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::CMD_ID;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::ENET_CHANNEL_ID;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::ENET_IS_RELIABLE;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::IS_ALLOW_CLIENT;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::CmdId_MIN;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq::CmdId_MAX;
const int TakeCompoundOutputReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TakeCompoundOutputRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[36];
}
bool TakeCompoundOutputRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 136:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp::NONE;
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp::CMD_ID;
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp::ENET_CHANNEL_ID;
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp::ENET_IS_RELIABLE;
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp::CmdId_MIN;
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp::CmdId_MAX;
const int TakeCompoundOutputRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CompoundDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[37];
}
bool CompoundDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 137:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CompoundDataNotify_CmdId CompoundDataNotify::NONE;
const CompoundDataNotify_CmdId CompoundDataNotify::CMD_ID;
const CompoundDataNotify_CmdId CompoundDataNotify::ENET_CHANNEL_ID;
const CompoundDataNotify_CmdId CompoundDataNotify::ENET_IS_RELIABLE;
const CompoundDataNotify_CmdId CompoundDataNotify::CmdId_MIN;
const CompoundDataNotify_CmdId CompoundDataNotify::CmdId_MAX;
const int CompoundDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetCompoundDataReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[38];
}
bool GetCompoundDataReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 138:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetCompoundDataReq_CmdId GetCompoundDataReq::NONE;
const GetCompoundDataReq_CmdId GetCompoundDataReq::CMD_ID;
const GetCompoundDataReq_CmdId GetCompoundDataReq::ENET_CHANNEL_ID;
const GetCompoundDataReq_CmdId GetCompoundDataReq::ENET_IS_RELIABLE;
const GetCompoundDataReq_CmdId GetCompoundDataReq::IS_ALLOW_CLIENT;
const GetCompoundDataReq_CmdId GetCompoundDataReq::CmdId_MIN;
const GetCompoundDataReq_CmdId GetCompoundDataReq::CmdId_MAX;
const int GetCompoundDataReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetCompoundDataRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[39];
}
bool GetCompoundDataRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 139:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetCompoundDataRsp_CmdId GetCompoundDataRsp::NONE;
const GetCompoundDataRsp_CmdId GetCompoundDataRsp::CMD_ID;
const GetCompoundDataRsp_CmdId GetCompoundDataRsp::ENET_CHANNEL_ID;
const GetCompoundDataRsp_CmdId GetCompoundDataRsp::ENET_IS_RELIABLE;
const GetCompoundDataRsp_CmdId GetCompoundDataRsp::CmdId_MIN;
const GetCompoundDataRsp_CmdId GetCompoundDataRsp::CmdId_MAX;
const int GetCompoundDataRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerTimeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[40];
}
bool PlayerTimeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 140:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerTimeNotify_CmdId PlayerTimeNotify::NONE;
const PlayerTimeNotify_CmdId PlayerTimeNotify::CMD_ID;
const PlayerTimeNotify_CmdId PlayerTimeNotify::ENET_CHANNEL_ID;
const PlayerTimeNotify_CmdId PlayerTimeNotify::ENET_IS_RELIABLE;
const PlayerTimeNotify_CmdId PlayerTimeNotify::CmdId_MIN;
const PlayerTimeNotify_CmdId PlayerTimeNotify::CmdId_MAX;
const int PlayerTimeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerSetPauseReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[41];
}
bool PlayerSetPauseReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 141:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::NONE;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::CMD_ID;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::ENET_CHANNEL_ID;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::ENET_IS_RELIABLE;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::IS_ALLOW_CLIENT;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::CmdId_MIN;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq::CmdId_MAX;
const int PlayerSetPauseReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerSetPauseRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[42];
}
bool PlayerSetPauseRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 142:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp::NONE;
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp::CMD_ID;
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp::ENET_CHANNEL_ID;
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp::ENET_IS_RELIABLE;
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp::CmdId_MIN;
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp::CmdId_MAX;
const int PlayerSetPauseRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerSetLanguageReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[43];
}
bool PlayerSetLanguageReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 143:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::NONE;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::CMD_ID;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::ENET_CHANNEL_ID;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::ENET_IS_RELIABLE;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::IS_ALLOW_CLIENT;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::CmdId_MIN;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq::CmdId_MAX;
const int PlayerSetLanguageReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerSetLanguageRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[44];
}
bool PlayerSetLanguageRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 144:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp::NONE;
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp::CMD_ID;
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp::ENET_CHANNEL_ID;
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp::ENET_IS_RELIABLE;
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp::CmdId_MIN;
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp::CmdId_MAX;
const int PlayerSetLanguageRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DataResVersionNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[45];
}
bool DataResVersionNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 145:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataResVersionNotify_CmdId DataResVersionNotify::NONE;
const DataResVersionNotify_CmdId DataResVersionNotify::CMD_ID;
const DataResVersionNotify_CmdId DataResVersionNotify::ENET_CHANNEL_ID;
const DataResVersionNotify_CmdId DataResVersionNotify::ENET_IS_RELIABLE;
const DataResVersionNotify_CmdId DataResVersionNotify::CmdId_MIN;
const DataResVersionNotify_CmdId DataResVersionNotify::CmdId_MAX;
const int DataResVersionNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DailyTaskDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[46];
}
bool DailyTaskDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 146:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DailyTaskDataNotify_CmdId DailyTaskDataNotify::NONE;
const DailyTaskDataNotify_CmdId DailyTaskDataNotify::CMD_ID;
const DailyTaskDataNotify_CmdId DailyTaskDataNotify::ENET_CHANNEL_ID;
const DailyTaskDataNotify_CmdId DailyTaskDataNotify::ENET_IS_RELIABLE;
const DailyTaskDataNotify_CmdId DailyTaskDataNotify::CmdId_MIN;
const DailyTaskDataNotify_CmdId DailyTaskDataNotify::CmdId_MAX;
const int DailyTaskDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DailyTaskProgressNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[47];
}
bool DailyTaskProgressNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 147:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify::NONE;
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify::CMD_ID;
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify::ENET_CHANNEL_ID;
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify::ENET_IS_RELIABLE;
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify::CmdId_MIN;
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify::CmdId_MAX;
const int DailyTaskProgressNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DailyTaskScoreRewardNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[48];
}
bool DailyTaskScoreRewardNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 148:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify::NONE;
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify::CMD_ID;
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify::ENET_CHANNEL_ID;
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify::ENET_IS_RELIABLE;
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify::CmdId_MIN;
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify::CmdId_MAX;
const int DailyTaskScoreRewardNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldOwnerDailyTaskNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[49];
}
bool WorldOwnerDailyTaskNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 149:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::NONE;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::CMD_ID;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::ENET_CHANNEL_ID;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::ENET_IS_RELIABLE;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::IS_ALLOW_CLIENT;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::CmdId_MIN;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify::CmdId_MAX;
const int WorldOwnerDailyTaskNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddRandTaskInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[50];
}
bool AddRandTaskInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 150:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify::NONE;
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify::CMD_ID;
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify::ENET_CHANNEL_ID;
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify::ENET_IS_RELIABLE;
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify::CmdId_MIN;
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify::CmdId_MAX;
const int AddRandTaskInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RemoveRandTaskInfoNotify_FinishReason_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[51];
}
bool RemoveRandTaskInfoNotify_FinishReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::DEFAULT;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::CLEAR;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::DISTANCE;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::FINISH;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::FinishReason_MIN;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::FinishReason_MAX;
const int RemoveRandTaskInfoNotify::FinishReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RemoveRandTaskInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[52];
}
bool RemoveRandTaskInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 151:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify::NONE;
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify::CMD_ID;
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify::ENET_CHANNEL_ID;
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify::ENET_IS_RELIABLE;
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify::CmdId_MIN;
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify::CmdId_MAX;
const int RemoveRandTaskInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TakePlayerLevelRewardReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[53];
}
bool TakePlayerLevelRewardReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 152:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::NONE;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::CMD_ID;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::ENET_CHANNEL_ID;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::ENET_IS_RELIABLE;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::IS_ALLOW_CLIENT;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::CmdId_MIN;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq::CmdId_MAX;
const int TakePlayerLevelRewardReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TakePlayerLevelRewardRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[54];
}
bool TakePlayerLevelRewardRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 153:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp::NONE;
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp::CMD_ID;
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp::ENET_CHANNEL_ID;
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp::ENET_IS_RELIABLE;
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp::CmdId_MIN;
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp::CmdId_MAX;
const int TakePlayerLevelRewardRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLevelRewardUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[55];
}
bool PlayerLevelRewardUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 154:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify::NONE;
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify::CMD_ID;
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify::ENET_CHANNEL_ID;
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify::ENET_IS_RELIABLE;
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify::CmdId_MIN;
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify::CmdId_MAX;
const int PlayerLevelRewardUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GivingRecordNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[56];
}
bool GivingRecordNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 155:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GivingRecordNotify_CmdId GivingRecordNotify::NONE;
const GivingRecordNotify_CmdId GivingRecordNotify::CMD_ID;
const GivingRecordNotify_CmdId GivingRecordNotify::ENET_CHANNEL_ID;
const GivingRecordNotify_CmdId GivingRecordNotify::ENET_IS_RELIABLE;
const GivingRecordNotify_CmdId GivingRecordNotify::CmdId_MIN;
const GivingRecordNotify_CmdId GivingRecordNotify::CmdId_MAX;
const int GivingRecordNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GivingRecordChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[57];
}
bool GivingRecordChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 156:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify::NONE;
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify::CMD_ID;
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify::ENET_CHANNEL_ID;
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify::ENET_IS_RELIABLE;
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify::CmdId_MIN;
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify::CmdId_MAX;
const int GivingRecordChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ItemGivingReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[58];
}
bool ItemGivingReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 157:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ItemGivingReq_CmdId ItemGivingReq::NONE;
const ItemGivingReq_CmdId ItemGivingReq::CMD_ID;
const ItemGivingReq_CmdId ItemGivingReq::ENET_CHANNEL_ID;
const ItemGivingReq_CmdId ItemGivingReq::ENET_IS_RELIABLE;
const ItemGivingReq_CmdId ItemGivingReq::IS_ALLOW_CLIENT;
const ItemGivingReq_CmdId ItemGivingReq::CmdId_MIN;
const ItemGivingReq_CmdId ItemGivingReq::CmdId_MAX;
const int ItemGivingReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ItemGivingRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[59];
}
bool ItemGivingRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 158:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ItemGivingRsp_CmdId ItemGivingRsp::NONE;
const ItemGivingRsp_CmdId ItemGivingRsp::CMD_ID;
const ItemGivingRsp_CmdId ItemGivingRsp::ENET_CHANNEL_ID;
const ItemGivingRsp_CmdId ItemGivingRsp::ENET_IS_RELIABLE;
const ItemGivingRsp_CmdId ItemGivingRsp::CmdId_MIN;
const ItemGivingRsp_CmdId ItemGivingRsp::CmdId_MAX;
const int ItemGivingRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerCookArgsReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[60];
}
bool PlayerCookArgsReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 159:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::NONE;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::CMD_ID;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::ENET_CHANNEL_ID;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::ENET_IS_RELIABLE;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::IS_ALLOW_CLIENT;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::CmdId_MIN;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq::CmdId_MAX;
const int PlayerCookArgsReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerCookArgsRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[61];
}
bool PlayerCookArgsRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 160:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp::NONE;
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp::CMD_ID;
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp::ENET_CHANNEL_ID;
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp::ENET_IS_RELIABLE;
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp::CmdId_MIN;
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp::CmdId_MAX;
const int PlayerCookArgsRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerLuaShellNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[62];
}
bool PlayerLuaShellNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 161:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify::NONE;
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify::CMD_ID;
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify::ENET_CHANNEL_ID;
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify::ENET_IS_RELIABLE;
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify::CmdId_MIN;
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify::CmdId_MAX;
const int PlayerLuaShellNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerDisconnectClientNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[63];
}
bool ServerDisconnectClientNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 162:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify::NONE;
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify::CMD_ID;
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify::ENET_CHANNEL_ID;
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify::ENET_IS_RELIABLE;
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify::CmdId_MIN;
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify::CmdId_MAX;
const int ServerDisconnectClientNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerTokenReq::kAccountTypeFieldNumber;
const int GetPlayerTokenReq::kAccountUidFieldNumber;
const int GetPlayerTokenReq::kAccountTokenFieldNumber;
const int GetPlayerTokenReq::kAccountExtFieldNumber;
const int GetPlayerTokenReq::kUidFieldNumber;
const int GetPlayerTokenReq::kIsGuestFieldNumber;
const int GetPlayerTokenReq::kPlatformTypeFieldNumber;
const int GetPlayerTokenReq::kCloudClientIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerTokenReq::GetPlayerTokenReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerTokenReq)
}
GetPlayerTokenReq::GetPlayerTokenReq(const GetPlayerTokenReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uid().size() > 0) {
    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  account_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_token().size() > 0) {
    account_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_token_);
  }
  account_ext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_ext().size() > 0) {
    account_ext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_ext_);
  }
  ::memcpy(&account_type_, &from.account_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cloud_client_ip_) -
    reinterpret_cast<char*>(&account_type_)) + sizeof(cloud_client_ip_));
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerTokenReq)
}

void GetPlayerTokenReq::SharedCtor() {
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cloud_client_ip_) -
      reinterpret_cast<char*>(&account_type_)) + sizeof(cloud_client_ip_));
  _cached_size_ = 0;
}

GetPlayerTokenReq::~GetPlayerTokenReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerTokenReq)
  SharedDtor();
}

void GetPlayerTokenReq::SharedDtor() {
  account_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPlayerTokenReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerTokenReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerTokenReq& GetPlayerTokenReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerTokenReq* GetPlayerTokenReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerTokenReq* n = new GetPlayerTokenReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cloud_client_ip_) -
      reinterpret_cast<char*>(&account_type_)) + sizeof(cloud_client_ip_));
  _internal_metadata_.Clear();
}

bool GetPlayerTokenReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerTokenReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 account_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uid().data(), static_cast<int>(this->account_uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.account_uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_token().data(), static_cast<int>(this->account_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.account_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_ext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_ext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_ext().data(), static_cast<int>(this->account_ext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.account_ext"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_guest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cloud_client_ip = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cloud_client_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerTokenReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerTokenReq)
  return false;
#undef DO_
}

void GetPlayerTokenReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 account_type = 1;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_type(), output);
  }

  // string account_uid = 2;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_uid(), output);
  }

  // string account_token = 3;
  if (this->account_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_token().data(), static_cast<int>(this->account_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account_token(), output);
  }

  // string account_ext = 4;
  if (this->account_ext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_ext().data(), static_cast<int>(this->account_ext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_ext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->account_ext(), output);
  }

  // uint32 uid = 5;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uid(), output);
  }

  // bool is_guest = 6;
  if (this->is_guest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_guest(), output);
  }

  // uint32 platform_type = 7;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->platform_type(), output);
  }

  // uint32 cloud_client_ip = 8;
  if (this->cloud_client_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->cloud_client_ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerTokenReq)
}

::google::protobuf::uint8* GetPlayerTokenReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 account_type = 1;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_type(), target);
  }

  // string account_uid = 2;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_uid(), target);
  }

  // string account_token = 3;
  if (this->account_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_token().data(), static_cast<int>(this->account_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account_token(), target);
  }

  // string account_ext = 4;
  if (this->account_ext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_ext().data(), static_cast<int>(this->account_ext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_ext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->account_ext(), target);
  }

  // uint32 uid = 5;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uid(), target);
  }

  // bool is_guest = 6;
  if (this->is_guest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_guest(), target);
  }

  // uint32 platform_type = 7;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->platform_type(), target);
  }

  // uint32 cloud_client_ip = 8;
  if (this->cloud_client_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->cloud_client_ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerTokenReq)
  return target;
}

size_t GetPlayerTokenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerTokenReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account_uid = 2;
  if (this->account_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uid());
  }

  // string account_token = 3;
  if (this->account_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_token());
  }

  // string account_ext = 4;
  if (this->account_ext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_ext());
  }

  // uint32 account_type = 1;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // uint32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // bool is_guest = 6;
  if (this->is_guest() != 0) {
    total_size += 1 + 1;
  }

  // uint32 platform_type = 7;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform_type());
  }

  // uint32 cloud_client_ip = 8;
  if (this->cloud_client_ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cloud_client_ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerTokenReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerTokenReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerTokenReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerTokenReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerTokenReq)
    MergeFrom(*source);
  }
}

void GetPlayerTokenReq::MergeFrom(const GetPlayerTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_uid().size() > 0) {

    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  if (from.account_token().size() > 0) {

    account_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_token_);
  }
  if (from.account_ext().size() > 0) {

    account_ext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_ext_);
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.is_guest() != 0) {
    set_is_guest(from.is_guest());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
  if (from.cloud_client_ip() != 0) {
    set_cloud_client_ip(from.cloud_client_ip());
  }
}

void GetPlayerTokenReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerTokenReq::CopyFrom(const GetPlayerTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerTokenReq::IsInitialized() const {
  return true;
}

void GetPlayerTokenReq::Swap(GetPlayerTokenReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerTokenReq::InternalSwap(GetPlayerTokenReq* other) {
  using std::swap;
  account_uid_.Swap(&other->account_uid_);
  account_token_.Swap(&other->account_token_);
  account_ext_.Swap(&other->account_ext_);
  swap(account_type_, other->account_type_);
  swap(uid_, other->uid_);
  swap(is_guest_, other->is_guest_);
  swap(platform_type_, other->platform_type_);
  swap(cloud_client_ip_, other->cloud_client_ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerTokenReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerTokenReq

// uint32 account_type = 1;
void GetPlayerTokenReq::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_type)
  return account_type_;
}
void GetPlayerTokenReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_type)
}

// string account_uid = 2;
void GetPlayerTokenReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.GetNoArena();
}
void GetPlayerTokenReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_uid)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_uid)
}
#endif
void GetPlayerTokenReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_uid)
}
void GetPlayerTokenReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_uid)
}
::std::string* GetPlayerTokenReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_uid)
}

// string account_token = 3;
void GetPlayerTokenReq::clear_account_token() {
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::account_token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_token)
  return account_token_.GetNoArena();
}
void GetPlayerTokenReq::set_account_token(const ::std::string& value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_token)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_account_token(::std::string&& value) {
  
  account_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_token)
}
#endif
void GetPlayerTokenReq::set_account_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_token)
}
void GetPlayerTokenReq::set_account_token(const char* value, size_t size) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_token)
}
::std::string* GetPlayerTokenReq::mutable_account_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_token)
  return account_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_account_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_token)
  
  return account_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_account_token(::std::string* account_token) {
  if (account_token != NULL) {
    
  } else {
    
  }
  account_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_token)
}

// string account_ext = 4;
void GetPlayerTokenReq::clear_account_ext() {
  account_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::account_ext() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.GetNoArena();
}
void GetPlayerTokenReq::set_account_ext(const ::std::string& value) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_ext)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_account_ext(::std::string&& value) {
  
  account_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_ext)
}
#endif
void GetPlayerTokenReq::set_account_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_ext)
}
void GetPlayerTokenReq::set_account_ext(const char* value, size_t size) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_ext)
}
::std::string* GetPlayerTokenReq::mutable_account_ext() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_account_ext() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_ext)
  
  return account_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_account_ext(::std::string* account_ext) {
  if (account_ext != NULL) {
    
  } else {
    
  }
  account_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_ext);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_ext)
}

// uint32 uid = 5;
void GetPlayerTokenReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.uid)
  return uid_;
}
void GetPlayerTokenReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.uid)
}

// bool is_guest = 6;
void GetPlayerTokenReq::clear_is_guest() {
  is_guest_ = false;
}
bool GetPlayerTokenReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.is_guest)
  return is_guest_;
}
void GetPlayerTokenReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.is_guest)
}

// uint32 platform_type = 7;
void GetPlayerTokenReq::clear_platform_type() {
  platform_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.platform_type)
  return platform_type_;
}
void GetPlayerTokenReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.platform_type)
}

// uint32 cloud_client_ip = 8;
void GetPlayerTokenReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.cloud_client_ip)
  return cloud_client_ip_;
}
void GetPlayerTokenReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.cloud_client_ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerTokenRsp::kRetcodeFieldNumber;
const int GetPlayerTokenRsp::kMsgFieldNumber;
const int GetPlayerTokenRsp::kUidFieldNumber;
const int GetPlayerTokenRsp::kTokenFieldNumber;
const int GetPlayerTokenRsp::kBlackUidEndTimeFieldNumber;
const int GetPlayerTokenRsp::kAccountTypeFieldNumber;
const int GetPlayerTokenRsp::kAccountUidFieldNumber;
const int GetPlayerTokenRsp::kIsProficientPlayerFieldNumber;
const int GetPlayerTokenRsp::kSecretKeyFieldNumber;
const int GetPlayerTokenRsp::kGmUidFieldNumber;
const int GetPlayerTokenRsp::kSecretKeySeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerTokenRsp::GetPlayerTokenRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerTokenRsp)
}
GetPlayerTokenRsp::GetPlayerTokenRsp(const GetPlayerTokenRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uid().size() > 0) {
    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret_key().size() > 0) {
    secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&secret_key_seed_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(secret_key_seed_));
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerTokenRsp)
}

void GetPlayerTokenRsp::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secret_key_seed_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(secret_key_seed_));
  _cached_size_ = 0;
}

GetPlayerTokenRsp::~GetPlayerTokenRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerTokenRsp)
  SharedDtor();
}

void GetPlayerTokenRsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPlayerTokenRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerTokenRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerTokenRsp& GetPlayerTokenRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerTokenRsp* GetPlayerTokenRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerTokenRsp* n = new GetPlayerTokenRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerTokenRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerTokenRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secret_key_seed_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(secret_key_seed_));
  _internal_metadata_.Clear();
}

bool GetPlayerTokenRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerTokenRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 black_uid_end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &black_uid_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 account_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uid().data(), static_cast<int>(this->account_uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.account_uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_proficient_player = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_proficient_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret_key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret_key().data(), static_cast<int>(this->secret_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.secret_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gm_uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 secret_key_seed = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &secret_key_seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerTokenRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerTokenRsp)
  return false;
#undef DO_
}

void GetPlayerTokenRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerTokenRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uid(), output);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->token(), output);
  }

  // uint32 black_uid_end_time = 5;
  if (this->black_uid_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->black_uid_end_time(), output);
  }

  // uint32 account_type = 6;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->account_type(), output);
  }

  // string account_uid = 7;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.account_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->account_uid(), output);
  }

  // bool is_proficient_player = 8;
  if (this->is_proficient_player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_proficient_player(), output);
  }

  // string secret_key = 9;
  if (this->secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_key().data(), static_cast<int>(this->secret_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.secret_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->secret_key(), output);
  }

  // uint32 gm_uid = 10;
  if (this->gm_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->gm_uid(), output);
  }

  // uint64 secret_key_seed = 11;
  if (this->secret_key_seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->secret_key_seed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerTokenRsp)
}

::google::protobuf::uint8* GetPlayerTokenRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerTokenRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uid(), target);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->token(), target);
  }

  // uint32 black_uid_end_time = 5;
  if (this->black_uid_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->black_uid_end_time(), target);
  }

  // uint32 account_type = 6;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->account_type(), target);
  }

  // string account_uid = 7;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.account_uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->account_uid(), target);
  }

  // bool is_proficient_player = 8;
  if (this->is_proficient_player() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_proficient_player(), target);
  }

  // string secret_key = 9;
  if (this->secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_key().data(), static_cast<int>(this->secret_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.secret_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->secret_key(), target);
  }

  // uint32 gm_uid = 10;
  if (this->gm_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->gm_uid(), target);
  }

  // uint64 secret_key_seed = 11;
  if (this->secret_key_seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->secret_key_seed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerTokenRsp)
  return target;
}

size_t GetPlayerTokenRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerTokenRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string token = 4;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string account_uid = 7;
  if (this->account_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uid());
  }

  // string secret_key = 9;
  if (this->secret_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret_key());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 black_uid_end_time = 5;
  if (this->black_uid_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->black_uid_end_time());
  }

  // uint32 account_type = 6;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // bool is_proficient_player = 8;
  if (this->is_proficient_player() != 0) {
    total_size += 1 + 1;
  }

  // uint32 gm_uid = 10;
  if (this->gm_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm_uid());
  }

  // uint64 secret_key_seed = 11;
  if (this->secret_key_seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->secret_key_seed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerTokenRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerTokenRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerTokenRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerTokenRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerTokenRsp)
    MergeFrom(*source);
  }
}

void GetPlayerTokenRsp::MergeFrom(const GetPlayerTokenRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.account_uid().size() > 0) {

    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  if (from.secret_key().size() > 0) {

    secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.black_uid_end_time() != 0) {
    set_black_uid_end_time(from.black_uid_end_time());
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.is_proficient_player() != 0) {
    set_is_proficient_player(from.is_proficient_player());
  }
  if (from.gm_uid() != 0) {
    set_gm_uid(from.gm_uid());
  }
  if (from.secret_key_seed() != 0) {
    set_secret_key_seed(from.secret_key_seed());
  }
}

void GetPlayerTokenRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerTokenRsp::CopyFrom(const GetPlayerTokenRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerTokenRsp::IsInitialized() const {
  return true;
}

void GetPlayerTokenRsp::Swap(GetPlayerTokenRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerTokenRsp::InternalSwap(GetPlayerTokenRsp* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  token_.Swap(&other->token_);
  account_uid_.Swap(&other->account_uid_);
  secret_key_.Swap(&other->secret_key_);
  swap(retcode_, other->retcode_);
  swap(uid_, other->uid_);
  swap(black_uid_end_time_, other->black_uid_end_time_);
  swap(account_type_, other->account_type_);
  swap(is_proficient_player_, other->is_proficient_player_);
  swap(gm_uid_, other->gm_uid_);
  swap(secret_key_seed_, other->secret_key_seed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerTokenRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerTokenRsp

// int32 retcode = 1;
void GetPlayerTokenRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerTokenRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.retcode)
  return retcode_;
}
void GetPlayerTokenRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.retcode)
}

// string msg = 2;
void GetPlayerTokenRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.msg)
  return msg_.GetNoArena();
}
void GetPlayerTokenRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.msg)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.msg)
}
#endif
void GetPlayerTokenRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.msg)
}
void GetPlayerTokenRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.msg)
}
::std::string* GetPlayerTokenRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.msg)
}

// uint32 uid = 3;
void GetPlayerTokenRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.uid)
  return uid_;
}
void GetPlayerTokenRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.uid)
}

// string token = 4;
void GetPlayerTokenRsp::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.token)
  return token_.GetNoArena();
}
void GetPlayerTokenRsp::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.token)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.token)
}
#endif
void GetPlayerTokenRsp::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.token)
}
void GetPlayerTokenRsp::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.token)
}
::std::string* GetPlayerTokenRsp::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.token)
}

// uint32 black_uid_end_time = 5;
void GetPlayerTokenRsp::clear_black_uid_end_time() {
  black_uid_end_time_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::black_uid_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.black_uid_end_time)
  return black_uid_end_time_;
}
void GetPlayerTokenRsp::set_black_uid_end_time(::google::protobuf::uint32 value) {
  
  black_uid_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.black_uid_end_time)
}

// uint32 account_type = 6;
void GetPlayerTokenRsp::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_type)
  return account_type_;
}
void GetPlayerTokenRsp::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_type)
}

// string account_uid = 7;
void GetPlayerTokenRsp::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.GetNoArena();
}
void GetPlayerTokenRsp::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_uid)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.account_uid)
}
#endif
void GetPlayerTokenRsp::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.account_uid)
}
void GetPlayerTokenRsp::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.account_uid)
}
::std::string* GetPlayerTokenRsp::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.account_uid)
}

// bool is_proficient_player = 8;
void GetPlayerTokenRsp::clear_is_proficient_player() {
  is_proficient_player_ = false;
}
bool GetPlayerTokenRsp::is_proficient_player() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_proficient_player)
  return is_proficient_player_;
}
void GetPlayerTokenRsp::set_is_proficient_player(bool value) {
  
  is_proficient_player_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_proficient_player)
}

// string secret_key = 9;
void GetPlayerTokenRsp::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.GetNoArena();
}
void GetPlayerTokenRsp::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.secret_key)
}
#endif
void GetPlayerTokenRsp::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.secret_key)
}
void GetPlayerTokenRsp::set_secret_key(const char* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.secret_key)
}
::std::string* GetPlayerTokenRsp::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.secret_key)
}

// uint32 gm_uid = 10;
void GetPlayerTokenRsp::clear_gm_uid() {
  gm_uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.gm_uid)
  return gm_uid_;
}
void GetPlayerTokenRsp::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.gm_uid)
}

// uint64 secret_key_seed = 11;
void GetPlayerTokenRsp::clear_secret_key_seed() {
  secret_key_seed_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetPlayerTokenRsp::secret_key_seed() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key_seed)
  return secret_key_seed_;
}
void GetPlayerTokenRsp::set_secret_key_seed(::google::protobuf::uint64 value) {
  
  secret_key_seed_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key_seed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginReq::kTokenFieldNumber;
const int PlayerLoginReq::kClientVersionFieldNumber;
const int PlayerLoginReq::kSystemVersionFieldNumber;
const int PlayerLoginReq::kDeviceNameFieldNumber;
const int PlayerLoginReq::kDeviceUuidFieldNumber;
const int PlayerLoginReq::kTargetUidFieldNumber;
const int PlayerLoginReq::kLoginRandFieldNumber;
const int PlayerLoginReq::kIsEditorFieldNumber;
const int PlayerLoginReq::kLanguageTypeFieldNumber;
const int PlayerLoginReq::kAccountTypeFieldNumber;
const int PlayerLoginReq::kAccountUidFieldNumber;
const int PlayerLoginReq::kPlatformFieldNumber;
const int PlayerLoginReq::kDeviceInfoFieldNumber;
const int PlayerLoginReq::kPlatformTypeFieldNumber;
const int PlayerLoginReq::kIsGuestFieldNumber;
const int PlayerLoginReq::kCloudClientIpFieldNumber;
const int PlayerLoginReq::kGmUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginReq::PlayerLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLoginReq)
}
PlayerLoginReq::PlayerLoginReq(const PlayerLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version().size() > 0) {
    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version().size() > 0) {
    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_name().size() > 0) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  device_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_uuid().size() > 0) {
    device_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_uuid_);
  }
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uid().size() > 0) {
    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  device_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_info().size() > 0) {
    device_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_info_);
  }
  ::memcpy(&login_rand_, &from.login_rand_,
    static_cast<size_t>(reinterpret_cast<char*>(&gm_uid_) -
    reinterpret_cast<char*>(&login_rand_)) + sizeof(gm_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLoginReq)
}

void PlayerLoginReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&login_rand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gm_uid_) -
      reinterpret_cast<char*>(&login_rand_)) + sizeof(gm_uid_));
  _cached_size_ = 0;
}

PlayerLoginReq::~PlayerLoginReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerLoginReq)
  SharedDtor();
}

void PlayerLoginReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginReq& PlayerLoginReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLoginReq* PlayerLoginReq::New(::google::protobuf::Arena* arena) const {
  PlayerLoginReq* n = new PlayerLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&login_rand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gm_uid_) -
      reinterpret_cast<char*>(&login_rand_)) + sizeof(gm_uid_));
  _internal_metadata_.Clear();
}

bool PlayerLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), static_cast<int>(this->client_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.client_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string system_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_version().data(), static_cast<int>(this->system_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.system_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_uuid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.device_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 login_rand = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &login_rand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_editor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_editor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 language_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 account_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uid().data(), static_cast<int>(this->account_uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.account_uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_info = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_info().data(), static_cast<int>(this->device_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.device_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_guest = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cloud_client_ip = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cloud_client_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gm_uid = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLoginReq)
  return false;
#undef DO_
}

void PlayerLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string client_version = 2;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), static_cast<int>(this->client_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_version(), output);
  }

  // string system_version = 3;
  if (this->system_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version().data(), static_cast<int>(this->system_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.system_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->system_version(), output);
  }

  // string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_name(), output);
  }

  // string device_uuid = 5;
  if (this->device_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_uuid(), output);
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->target_uid(), output);
  }

  // uint64 login_rand = 7;
  if (this->login_rand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->login_rand(), output);
  }

  // bool is_editor = 8;
  if (this->is_editor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_editor(), output);
  }

  // uint32 language_type = 9;
  if (this->language_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->language_type(), output);
  }

  // uint32 account_type = 10;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->account_type(), output);
  }

  // string account_uid = 11;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.account_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->account_uid(), output);
  }

  // string platform = 12;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->platform(), output);
  }

  // string device_info = 13;
  if (this->device_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_info().data(), static_cast<int>(this->device_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->device_info(), output);
  }

  // uint32 platform_type = 14;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->platform_type(), output);
  }

  // bool is_guest = 15;
  if (this->is_guest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_guest(), output);
  }

  // uint32 cloud_client_ip = 16;
  if (this->cloud_client_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->cloud_client_ip(), output);
  }

  // uint32 gm_uid = 17;
  if (this->gm_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->gm_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLoginReq)
}

::google::protobuf::uint8* PlayerLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string client_version = 2;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), static_cast<int>(this->client_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_version(), target);
  }

  // string system_version = 3;
  if (this->system_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version().data(), static_cast<int>(this->system_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.system_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->system_version(), target);
  }

  // string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_name(), target);
  }

  // string device_uuid = 5;
  if (this->device_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_uuid(), target);
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->target_uid(), target);
  }

  // uint64 login_rand = 7;
  if (this->login_rand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->login_rand(), target);
  }

  // bool is_editor = 8;
  if (this->is_editor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_editor(), target);
  }

  // uint32 language_type = 9;
  if (this->language_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->language_type(), target);
  }

  // uint32 account_type = 10;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->account_type(), target);
  }

  // string account_uid = 11;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.account_uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->account_uid(), target);
  }

  // string platform = 12;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->platform(), target);
  }

  // string device_info = 13;
  if (this->device_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_info().data(), static_cast<int>(this->device_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->device_info(), target);
  }

  // uint32 platform_type = 14;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->platform_type(), target);
  }

  // bool is_guest = 15;
  if (this->is_guest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_guest(), target);
  }

  // uint32 cloud_client_ip = 16;
  if (this->cloud_client_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->cloud_client_ip(), target);
  }

  // uint32 gm_uid = 17;
  if (this->gm_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->gm_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLoginReq)
  return target;
}

size_t PlayerLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string client_version = 2;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  // string system_version = 3;
  if (this->system_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_version());
  }

  // string device_name = 4;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // string device_uuid = 5;
  if (this->device_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_uuid());
  }

  // string account_uid = 11;
  if (this->account_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uid());
  }

  // string platform = 12;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string device_info = 13;
  if (this->device_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_info());
  }

  // uint64 login_rand = 7;
  if (this->login_rand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->login_rand());
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 language_type = 9;
  if (this->language_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->language_type());
  }

  // uint32 account_type = 10;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // bool is_editor = 8;
  if (this->is_editor() != 0) {
    total_size += 1 + 1;
  }

  // bool is_guest = 15;
  if (this->is_guest() != 0) {
    total_size += 1 + 1;
  }

  // uint32 platform_type = 14;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform_type());
  }

  // uint32 cloud_client_ip = 16;
  if (this->cloud_client_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cloud_client_ip());
  }

  // uint32 gm_uid = 17;
  if (this->gm_uid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLoginReq)
    MergeFrom(*source);
  }
}

void PlayerLoginReq::MergeFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
  if (from.system_version().size() > 0) {

    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.device_uuid().size() > 0) {

    device_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_uuid_);
  }
  if (from.account_uid().size() > 0) {

    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.device_info().size() > 0) {

    device_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_info_);
  }
  if (from.login_rand() != 0) {
    set_login_rand(from.login_rand());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.language_type() != 0) {
    set_language_type(from.language_type());
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.is_editor() != 0) {
    set_is_editor(from.is_editor());
  }
  if (from.is_guest() != 0) {
    set_is_guest(from.is_guest());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
  if (from.cloud_client_ip() != 0) {
    set_cloud_client_ip(from.cloud_client_ip());
  }
  if (from.gm_uid() != 0) {
    set_gm_uid(from.gm_uid());
  }
}

void PlayerLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginReq::CopyFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginReq::IsInitialized() const {
  return true;
}

void PlayerLoginReq::Swap(PlayerLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginReq::InternalSwap(PlayerLoginReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  client_version_.Swap(&other->client_version_);
  system_version_.Swap(&other->system_version_);
  device_name_.Swap(&other->device_name_);
  device_uuid_.Swap(&other->device_uuid_);
  account_uid_.Swap(&other->account_uid_);
  platform_.Swap(&other->platform_);
  device_info_.Swap(&other->device_info_);
  swap(login_rand_, other->login_rand_);
  swap(target_uid_, other->target_uid_);
  swap(language_type_, other->language_type_);
  swap(account_type_, other->account_type_);
  swap(is_editor_, other->is_editor_);
  swap(is_guest_, other->is_guest_);
  swap(platform_type_, other->platform_type_);
  swap(cloud_client_ip_, other->cloud_client_ip_);
  swap(gm_uid_, other->gm_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginReq

// string token = 1;
void PlayerLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.token)
  return token_.GetNoArena();
}
void PlayerLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.token)
}
#if LANG_CXX11
void PlayerLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.token)
}
#endif
void PlayerLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.token)
}
void PlayerLoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.token)
}
::std::string* PlayerLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.token)
}

// string client_version = 2;
void PlayerLoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_version)
  return client_version_.GetNoArena();
}
void PlayerLoginReq::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_version)
}
#if LANG_CXX11
void PlayerLoginReq::set_client_version(::std::string&& value) {
  
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.client_version)
}
#endif
void PlayerLoginReq::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.client_version)
}
void PlayerLoginReq::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.client_version)
}
::std::string* PlayerLoginReq::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.client_version)
}

// string system_version = 3;
void PlayerLoginReq::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::system_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.system_version)
  return system_version_.GetNoArena();
}
void PlayerLoginReq::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.system_version)
}
#if LANG_CXX11
void PlayerLoginReq::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.system_version)
}
#endif
void PlayerLoginReq::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.system_version)
}
void PlayerLoginReq::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.system_version)
}
::std::string* PlayerLoginReq::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_system_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.system_version)
}

// string device_name = 4;
void PlayerLoginReq::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::device_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_name)
  return device_name_.GetNoArena();
}
void PlayerLoginReq::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_name)
}
#if LANG_CXX11
void PlayerLoginReq::set_device_name(::std::string&& value) {
  
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_name)
}
#endif
void PlayerLoginReq::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_name)
}
void PlayerLoginReq::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_name)
}
::std::string* PlayerLoginReq::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_name)
}

// string device_uuid = 5;
void PlayerLoginReq::clear_device_uuid() {
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::device_uuid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.GetNoArena();
}
void PlayerLoginReq::set_device_uuid(const ::std::string& value) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_uuid)
}
#if LANG_CXX11
void PlayerLoginReq::set_device_uuid(::std::string&& value) {
  
  device_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_uuid)
}
#endif
void PlayerLoginReq::set_device_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_uuid)
}
void PlayerLoginReq::set_device_uuid(const char* value, size_t size) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_uuid)
}
::std::string* PlayerLoginReq::mutable_device_uuid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_device_uuid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_uuid)
  
  return device_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_device_uuid(::std::string* device_uuid) {
  if (device_uuid != NULL) {
    
  } else {
    
  }
  device_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_uuid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_uuid)
}

// uint32 target_uid = 6;
void PlayerLoginReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_uid)
  return target_uid_;
}
void PlayerLoginReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_uid)
}

// uint64 login_rand = 7;
void PlayerLoginReq::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerLoginReq::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.login_rand)
  return login_rand_;
}
void PlayerLoginReq::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.login_rand)
}

// bool is_editor = 8;
void PlayerLoginReq::clear_is_editor() {
  is_editor_ = false;
}
bool PlayerLoginReq::is_editor() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_editor)
  return is_editor_;
}
void PlayerLoginReq::set_is_editor(bool value) {
  
  is_editor_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_editor)
}

// uint32 language_type = 9;
void PlayerLoginReq::clear_language_type() {
  language_type_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.language_type)
  return language_type_;
}
void PlayerLoginReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.language_type)
}

// uint32 account_type = 10;
void PlayerLoginReq::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_type)
  return account_type_;
}
void PlayerLoginReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_type)
}

// string account_uid = 11;
void PlayerLoginReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_uid)
  return account_uid_.GetNoArena();
}
void PlayerLoginReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_uid)
}
#if LANG_CXX11
void PlayerLoginReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.account_uid)
}
#endif
void PlayerLoginReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.account_uid)
}
void PlayerLoginReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.account_uid)
}
::std::string* PlayerLoginReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.account_uid)
}

// string platform = 12;
void PlayerLoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform)
  return platform_.GetNoArena();
}
void PlayerLoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform)
}
#if LANG_CXX11
void PlayerLoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.platform)
}
#endif
void PlayerLoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.platform)
}
void PlayerLoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.platform)
}
::std::string* PlayerLoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.platform)
}

// string device_info = 13;
void PlayerLoginReq::clear_device_info() {
  device_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::device_info() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_info)
  return device_info_.GetNoArena();
}
void PlayerLoginReq::set_device_info(const ::std::string& value) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_info)
}
#if LANG_CXX11
void PlayerLoginReq::set_device_info(::std::string&& value) {
  
  device_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_info)
}
#endif
void PlayerLoginReq::set_device_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_info)
}
void PlayerLoginReq::set_device_info(const char* value, size_t size) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_info)
}
::std::string* PlayerLoginReq::mutable_device_info() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_info)
  return device_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_device_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_info)
  
  return device_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_device_info(::std::string* device_info) {
  if (device_info != NULL) {
    
  } else {
    
  }
  device_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_info);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_info)
}

// uint32 platform_type = 14;
void PlayerLoginReq::clear_platform_type() {
  platform_type_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform_type)
  return platform_type_;
}
void PlayerLoginReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform_type)
}

// bool is_guest = 15;
void PlayerLoginReq::clear_is_guest() {
  is_guest_ = false;
}
bool PlayerLoginReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_guest)
  return is_guest_;
}
void PlayerLoginReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_guest)
}

// uint32 cloud_client_ip = 16;
void PlayerLoginReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.cloud_client_ip)
  return cloud_client_ip_;
}
void PlayerLoginReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.cloud_client_ip)
}

// uint32 gm_uid = 17;
void PlayerLoginReq::clear_gm_uid() {
  gm_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.gm_uid)
  return gm_uid_;
}
void PlayerLoginReq::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.gm_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::PlayerLoginRsp_AbilityHashMapEntry() {}
PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::PlayerLoginRsp_AbilityHashMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[3];
}
void PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::MergeFrom(const PlayerLoginRsp_AbilityHashMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::PlayerLoginRsp_BlockInfoMapEntry() {}
PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::PlayerLoginRsp_BlockInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[4];
}
void PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::MergeFrom(const PlayerLoginRsp_BlockInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginRsp::kRetcodeFieldNumber;
const int PlayerLoginRsp::kPlayerDataFieldNumber;
const int PlayerLoginRsp::kIsNewPlayerFieldNumber;
const int PlayerLoginRsp::kTargetUidFieldNumber;
const int PlayerLoginRsp::kLoginRandFieldNumber;
const int PlayerLoginRsp::kIsUseAbilityHashFieldNumber;
const int PlayerLoginRsp::kAbilityHashCodeFieldNumber;
const int PlayerLoginRsp::kAbilityHashMapFieldNumber;
const int PlayerLoginRsp::kClientDataVersionFieldNumber;
const int PlayerLoginRsp::kResVersionFieldNumber;
const int PlayerLoginRsp::kIsReloginFieldNumber;
const int PlayerLoginRsp::kClientSilenceDataVersionFieldNumber;
const int PlayerLoginRsp::kGameBizFieldNumber;
const int PlayerLoginRsp::kPlayerDataVersionFieldNumber;
const int PlayerLoginRsp::kClientMd5FieldNumber;
const int PlayerLoginRsp::kClientSilenceMd5FieldNumber;
const int PlayerLoginRsp::kResMd5FieldNumber;
const int PlayerLoginRsp::kIsResNeedReloginFieldNumber;
const int PlayerLoginRsp::kResVersionConfigFieldNumber;
const int PlayerLoginRsp::kBlockInfoMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginRsp::PlayerLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLoginRsp)
}
PlayerLoginRsp::PlayerLoginRsp(const PlayerLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ability_hash_map_.MergeFrom(from.ability_hash_map_);
  block_info_map_.MergeFrom(from.block_info_map_);
  player_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.player_data().size() > 0) {
    player_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_data_);
  }
  game_biz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_biz().size() > 0) {
    game_biz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_biz_);
  }
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_md5().size() > 0) {
    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_md5().size() > 0) {
    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  res_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.res_md5().size() > 0) {
    res_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_md5_);
  }
  if (from.has_res_version_config()) {
    res_version_config_ = new ::proto::ResVersionConfig(*from.res_version_config_);
  } else {
    res_version_config_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_data_version_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(player_data_version_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLoginRsp)
}

void PlayerLoginRsp::SharedCtor() {
  player_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_biz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&res_version_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_data_version_) -
      reinterpret_cast<char*>(&res_version_config_)) + sizeof(player_data_version_));
  _cached_size_ = 0;
}

PlayerLoginRsp::~PlayerLoginRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerLoginRsp)
  SharedDtor();
}

void PlayerLoginRsp::SharedDtor() {
  player_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_biz_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete res_version_config_;
}

void PlayerLoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginRsp& PlayerLoginRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLoginRsp* PlayerLoginRsp::New(::google::protobuf::Arena* arena) const {
  PlayerLoginRsp* n = new PlayerLoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ability_hash_map_.Clear();
  block_info_map_.Clear();
  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) {
    delete res_version_config_;
  }
  res_version_config_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_data_version_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(player_data_version_));
  _internal_metadata_.Clear();
}

bool PlayerLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes player_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_player_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_new_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_new_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 login_rand = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &login_rand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_use_ability_hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_use_ability_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ability_hash_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_hash_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> ability_hash_map = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          PlayerLoginRsp_AbilityHashMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerLoginRsp_AbilityHashMapEntry,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&ability_hash_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.AbilityHashMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_data_version = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 res_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &res_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_relogin = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_silence_data_version = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_silence_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_biz = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_biz()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_biz().data(), static_cast<int>(this->game_biz().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.game_biz"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_data_version = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_md5 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_md5().data(), static_cast<int>(this->client_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.client_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_md5 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.client_silence_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string res_md5 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->res_md5().data(), static_cast<int>(this->res_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.res_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_res_need_relogin = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_res_need_relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResVersionConfig res_version_config = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.BlockInfo> block_info_map = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          PlayerLoginRsp_BlockInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerLoginRsp_BlockInfoMapEntry,
              ::google::protobuf::uint32, ::proto::BlockInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo > > parser(&block_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLoginRsp)
  return false;
#undef DO_
}

void PlayerLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bytes player_data = 2;
  if (this->player_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->player_data(), output);
  }

  // bool is_new_player = 3;
  if (this->is_new_player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_new_player(), output);
  }

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_uid(), output);
  }

  // uint64 login_rand = 5;
  if (this->login_rand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->login_rand(), output);
  }

  // bool is_use_ability_hash = 6;
  if (this->is_use_ability_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_use_ability_hash(), output);
  }

  // int32 ability_hash_code = 7;
  if (this->ability_hash_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ability_hash_code(), output);
  }

  // map<string, int32> ability_hash_map = 8;
  if (!this->ability_hash_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.PlayerLoginRsp.AbilityHashMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ability_hash_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ability_hash_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 client_data_version = 9;
  if (this->client_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->client_data_version(), output);
  }

  // uint32 res_version = 10;
  if (this->res_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->res_version(), output);
  }

  // bool is_relogin = 11;
  if (this->is_relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_relogin(), output);
  }

  // uint32 client_silence_data_version = 13;
  if (this->client_silence_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->client_silence_data_version(), output);
  }

  // string game_biz = 14;
  if (this->game_biz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_biz().data(), static_cast<int>(this->game_biz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.game_biz");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->game_biz(), output);
  }

  // uint32 player_data_version = 15;
  if (this->player_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->player_data_version(), output);
  }

  // string client_md5 = 16;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->client_md5(), output);
  }

  // string client_silence_md5 = 17;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_silence_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->client_silence_md5(), output);
  }

  // string res_md5 = 18;
  if (this->res_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_md5().data(), static_cast<int>(this->res_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.res_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->res_md5(), output);
  }

  // bool is_res_need_relogin = 19;
  if (this->is_res_need_relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->is_res_need_relogin(), output);
  }

  // .proto.ResVersionConfig res_version_config = 20;
  if (this->has_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->res_version_config_, output);
  }

  // map<uint32, .proto.BlockInfo> block_info_map = 21;
  if (!this->block_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->block_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->block_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(block_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            21, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it) {
        entry.reset(block_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            21, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLoginRsp)
}

::google::protobuf::uint8* PlayerLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bytes player_data = 2;
  if (this->player_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->player_data(), target);
  }

  // bool is_new_player = 3;
  if (this->is_new_player() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_new_player(), target);
  }

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_uid(), target);
  }

  // uint64 login_rand = 5;
  if (this->login_rand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->login_rand(), target);
  }

  // bool is_use_ability_hash = 6;
  if (this->is_use_ability_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_use_ability_hash(), target);
  }

  // int32 ability_hash_code = 7;
  if (this->ability_hash_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ability_hash_code(), target);
  }

  // map<string, int32> ability_hash_map = 8;
  if (!this->ability_hash_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.PlayerLoginRsp.AbilityHashMapEntry.key");
      }
    };

    if (deterministic &&
        this->ability_hash_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ability_hash_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 client_data_version = 9;
  if (this->client_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->client_data_version(), target);
  }

  // uint32 res_version = 10;
  if (this->res_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->res_version(), target);
  }

  // bool is_relogin = 11;
  if (this->is_relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_relogin(), target);
  }

  // uint32 client_silence_data_version = 13;
  if (this->client_silence_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->client_silence_data_version(), target);
  }

  // string game_biz = 14;
  if (this->game_biz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_biz().data(), static_cast<int>(this->game_biz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.game_biz");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->game_biz(), target);
  }

  // uint32 player_data_version = 15;
  if (this->player_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->player_data_version(), target);
  }

  // string client_md5 = 16;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->client_md5(), target);
  }

  // string client_silence_md5 = 17;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_silence_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->client_silence_md5(), target);
  }

  // string res_md5 = 18;
  if (this->res_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_md5().data(), static_cast<int>(this->res_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.res_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->res_md5(), target);
  }

  // bool is_res_need_relogin = 19;
  if (this->is_res_need_relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->is_res_need_relogin(), target);
  }

  // .proto.ResVersionConfig res_version_config = 20;
  if (this->has_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->res_version_config_, deterministic, target);
  }

  // map<uint32, .proto.BlockInfo> block_info_map = 21;
  if (!this->block_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->block_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->block_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(block_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       21, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it) {
        entry.reset(block_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       21, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLoginRsp)
  return target;
}

size_t PlayerLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, int32> ability_hash_map = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ability_hash_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->ability_hash_map().begin();
        it != this->ability_hash_map().end(); ++it) {
      entry.reset(ability_hash_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.BlockInfo> block_info_map = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->block_info_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
        it = this->block_info_map().begin();
        it != this->block_info_map().end(); ++it) {
      entry.reset(block_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes player_data = 2;
  if (this->player_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->player_data());
  }

  // string game_biz = 14;
  if (this->game_biz().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_biz());
  }

  // string client_md5 = 16;
  if (this->client_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_md5());
  }

  // string client_silence_md5 = 17;
  if (this->client_silence_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_md5());
  }

  // string res_md5 = 18;
  if (this->res_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res_md5());
  }

  // .proto.ResVersionConfig res_version_config = 20;
  if (this->has_res_version_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_version_config_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint64 login_rand = 5;
  if (this->login_rand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->login_rand());
  }

  // int32 ability_hash_code = 7;
  if (this->ability_hash_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ability_hash_code());
  }

  // uint32 client_data_version = 9;
  if (this->client_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_data_version());
  }

  // bool is_new_player = 3;
  if (this->is_new_player() != 0) {
    total_size += 1 + 1;
  }

  // bool is_use_ability_hash = 6;
  if (this->is_use_ability_hash() != 0) {
    total_size += 1 + 1;
  }

  // bool is_relogin = 11;
  if (this->is_relogin() != 0) {
    total_size += 1 + 1;
  }

  // bool is_res_need_relogin = 19;
  if (this->is_res_need_relogin() != 0) {
    total_size += 2 + 1;
  }

  // uint32 res_version = 10;
  if (this->res_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->res_version());
  }

  // uint32 client_silence_data_version = 13;
  if (this->client_silence_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_silence_data_version());
  }

  // uint32 player_data_version = 15;
  if (this->player_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_data_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLoginRsp)
    MergeFrom(*source);
  }
}

void PlayerLoginRsp::MergeFrom(const PlayerLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ability_hash_map_.MergeFrom(from.ability_hash_map_);
  block_info_map_.MergeFrom(from.block_info_map_);
  if (from.player_data().size() > 0) {

    player_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_data_);
  }
  if (from.game_biz().size() > 0) {

    game_biz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_biz_);
  }
  if (from.client_md5().size() > 0) {

    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  if (from.client_silence_md5().size() > 0) {

    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  if (from.res_md5().size() > 0) {

    res_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_md5_);
  }
  if (from.has_res_version_config()) {
    mutable_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.res_version_config());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.login_rand() != 0) {
    set_login_rand(from.login_rand());
  }
  if (from.ability_hash_code() != 0) {
    set_ability_hash_code(from.ability_hash_code());
  }
  if (from.client_data_version() != 0) {
    set_client_data_version(from.client_data_version());
  }
  if (from.is_new_player() != 0) {
    set_is_new_player(from.is_new_player());
  }
  if (from.is_use_ability_hash() != 0) {
    set_is_use_ability_hash(from.is_use_ability_hash());
  }
  if (from.is_relogin() != 0) {
    set_is_relogin(from.is_relogin());
  }
  if (from.is_res_need_relogin() != 0) {
    set_is_res_need_relogin(from.is_res_need_relogin());
  }
  if (from.res_version() != 0) {
    set_res_version(from.res_version());
  }
  if (from.client_silence_data_version() != 0) {
    set_client_silence_data_version(from.client_silence_data_version());
  }
  if (from.player_data_version() != 0) {
    set_player_data_version(from.player_data_version());
  }
}

void PlayerLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginRsp::CopyFrom(const PlayerLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginRsp::IsInitialized() const {
  return true;
}

void PlayerLoginRsp::Swap(PlayerLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginRsp::InternalSwap(PlayerLoginRsp* other) {
  using std::swap;
  ability_hash_map_.Swap(&other->ability_hash_map_);
  block_info_map_.Swap(&other->block_info_map_);
  player_data_.Swap(&other->player_data_);
  game_biz_.Swap(&other->game_biz_);
  client_md5_.Swap(&other->client_md5_);
  client_silence_md5_.Swap(&other->client_silence_md5_);
  res_md5_.Swap(&other->res_md5_);
  swap(res_version_config_, other->res_version_config_);
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(login_rand_, other->login_rand_);
  swap(ability_hash_code_, other->ability_hash_code_);
  swap(client_data_version_, other->client_data_version_);
  swap(is_new_player_, other->is_new_player_);
  swap(is_use_ability_hash_, other->is_use_ability_hash_);
  swap(is_relogin_, other->is_relogin_);
  swap(is_res_need_relogin_, other->is_res_need_relogin_);
  swap(res_version_, other->res_version_);
  swap(client_silence_data_version_, other->client_silence_data_version_);
  swap(player_data_version_, other->player_data_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginRsp

// int32 retcode = 1;
void PlayerLoginRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLoginRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.retcode)
  return retcode_;
}
void PlayerLoginRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.retcode)
}

// bytes player_data = 2;
void PlayerLoginRsp::clear_player_data() {
  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::player_data() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data)
  return player_data_.GetNoArena();
}
void PlayerLoginRsp::set_player_data(const ::std::string& value) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data)
}
#if LANG_CXX11
void PlayerLoginRsp::set_player_data(::std::string&& value) {
  
  player_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.player_data)
}
#endif
void PlayerLoginRsp::set_player_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.player_data)
}
void PlayerLoginRsp::set_player_data(const void* value, size_t size) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.player_data)
}
::std::string* PlayerLoginRsp::mutable_player_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.player_data)
  return player_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_player_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.player_data)
  
  return player_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_player_data(::std::string* player_data) {
  if (player_data != NULL) {
    
  } else {
    
  }
  player_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.player_data)
}

// bool is_new_player = 3;
void PlayerLoginRsp::clear_is_new_player() {
  is_new_player_ = false;
}
bool PlayerLoginRsp::is_new_player() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_new_player)
  return is_new_player_;
}
void PlayerLoginRsp::set_is_new_player(bool value) {
  
  is_new_player_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_new_player)
}

// uint32 target_uid = 4;
void PlayerLoginRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.target_uid)
  return target_uid_;
}
void PlayerLoginRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.target_uid)
}

// uint64 login_rand = 5;
void PlayerLoginRsp::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerLoginRsp::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.login_rand)
  return login_rand_;
}
void PlayerLoginRsp::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.login_rand)
}

// bool is_use_ability_hash = 6;
void PlayerLoginRsp::clear_is_use_ability_hash() {
  is_use_ability_hash_ = false;
}
bool PlayerLoginRsp::is_use_ability_hash() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_use_ability_hash)
  return is_use_ability_hash_;
}
void PlayerLoginRsp::set_is_use_ability_hash(bool value) {
  
  is_use_ability_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_use_ability_hash)
}

// int32 ability_hash_code = 7;
void PlayerLoginRsp::clear_ability_hash_code() {
  ability_hash_code_ = 0;
}
::google::protobuf::int32 PlayerLoginRsp::ability_hash_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.ability_hash_code)
  return ability_hash_code_;
}
void PlayerLoginRsp::set_ability_hash_code(::google::protobuf::int32 value) {
  
  ability_hash_code_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.ability_hash_code)
}

// map<string, int32> ability_hash_map = 8;
int PlayerLoginRsp::ability_hash_map_size() const {
  return ability_hash_map_.size();
}
void PlayerLoginRsp::clear_ability_hash_map() {
  ability_hash_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
PlayerLoginRsp::ability_hash_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
PlayerLoginRsp::mutable_ability_hash_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.MutableMap();
}

// uint32 client_data_version = 9;
void PlayerLoginRsp::clear_client_data_version() {
  client_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_data_version)
  return client_data_version_;
}
void PlayerLoginRsp::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_data_version)
}

// uint32 res_version = 10;
void PlayerLoginRsp::clear_res_version() {
  res_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::res_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_version)
  return res_version_;
}
void PlayerLoginRsp::set_res_version(::google::protobuf::uint32 value) {
  
  res_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.res_version)
}

// bool is_relogin = 11;
void PlayerLoginRsp::clear_is_relogin() {
  is_relogin_ = false;
}
bool PlayerLoginRsp::is_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_relogin)
  return is_relogin_;
}
void PlayerLoginRsp::set_is_relogin(bool value) {
  
  is_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_relogin)
}

// uint32 client_silence_data_version = 13;
void PlayerLoginRsp::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_data_version)
  return client_silence_data_version_;
}
void PlayerLoginRsp::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_data_version)
}

// string game_biz = 14;
void PlayerLoginRsp::clear_game_biz() {
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::game_biz() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.game_biz)
  return game_biz_.GetNoArena();
}
void PlayerLoginRsp::set_game_biz(const ::std::string& value) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.game_biz)
}
#if LANG_CXX11
void PlayerLoginRsp::set_game_biz(::std::string&& value) {
  
  game_biz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.game_biz)
}
#endif
void PlayerLoginRsp::set_game_biz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.game_biz)
}
void PlayerLoginRsp::set_game_biz(const char* value, size_t size) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.game_biz)
}
::std::string* PlayerLoginRsp::mutable_game_biz() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.game_biz)
  return game_biz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_game_biz() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.game_biz)
  
  return game_biz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_game_biz(::std::string* game_biz) {
  if (game_biz != NULL) {
    
  } else {
    
  }
  game_biz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_biz);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.game_biz)
}

// uint32 player_data_version = 15;
void PlayerLoginRsp::clear_player_data_version() {
  player_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::player_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data_version)
  return player_data_version_;
}
void PlayerLoginRsp::set_player_data_version(::google::protobuf::uint32 value) {
  
  player_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data_version)
}

// string client_md5 = 16;
void PlayerLoginRsp::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_md5)
  return client_md5_.GetNoArena();
}
void PlayerLoginRsp::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_md5)
}
#if LANG_CXX11
void PlayerLoginRsp::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_md5)
}
#endif
void PlayerLoginRsp::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_md5)
}
void PlayerLoginRsp::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_md5)
}
::std::string* PlayerLoginRsp::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_md5)
}

// string client_silence_md5 = 17;
void PlayerLoginRsp::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
void PlayerLoginRsp::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_md5)
}
#if LANG_CXX11
void PlayerLoginRsp::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_silence_md5)
}
#endif
void PlayerLoginRsp::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_silence_md5)
}
void PlayerLoginRsp::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_silence_md5)
}
::std::string* PlayerLoginRsp::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_silence_md5)
}

// string res_md5 = 18;
void PlayerLoginRsp::clear_res_md5() {
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::res_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_md5)
  return res_md5_.GetNoArena();
}
void PlayerLoginRsp::set_res_md5(const ::std::string& value) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.res_md5)
}
#if LANG_CXX11
void PlayerLoginRsp::set_res_md5(::std::string&& value) {
  
  res_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.res_md5)
}
#endif
void PlayerLoginRsp::set_res_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.res_md5)
}
void PlayerLoginRsp::set_res_md5(const char* value, size_t size) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.res_md5)
}
::std::string* PlayerLoginRsp::mutable_res_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.res_md5)
  return res_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_res_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.res_md5)
  
  return res_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_res_md5(::std::string* res_md5) {
  if (res_md5 != NULL) {
    
  } else {
    
  }
  res_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.res_md5)
}

// bool is_res_need_relogin = 19;
void PlayerLoginRsp::clear_is_res_need_relogin() {
  is_res_need_relogin_ = false;
}
bool PlayerLoginRsp::is_res_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_res_need_relogin)
  return is_res_need_relogin_;
}
void PlayerLoginRsp::set_is_res_need_relogin(bool value) {
  
  is_res_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_res_need_relogin)
}

// .proto.ResVersionConfig res_version_config = 20;
bool PlayerLoginRsp::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
void PlayerLoginRsp::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& PlayerLoginRsp::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* PlayerLoginRsp::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.res_version_config)
  return res_version_config_;
}
::proto::ResVersionConfig* PlayerLoginRsp::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
void PlayerLoginRsp::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.res_version_config)
}

// map<uint32, .proto.BlockInfo> block_info_map = 21;
int PlayerLoginRsp::block_info_map_size() const {
  return block_info_map_.size();
}
void PlayerLoginRsp::clear_block_info_map() {
  block_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >&
PlayerLoginRsp::block_info_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >*
PlayerLoginRsp::mutable_block_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutReq::PlayerLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLogoutReq)
}
PlayerLogoutReq::PlayerLogoutReq(const PlayerLogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLogoutReq)
}

void PlayerLogoutReq::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

PlayerLogoutReq::~PlayerLogoutReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerLogoutReq)
  SharedDtor();
}

void PlayerLogoutReq::SharedDtor() {
}

void PlayerLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogoutReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLogoutReq& PlayerLogoutReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogoutReq* PlayerLogoutReq::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutReq* n = new PlayerLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerLogoutReq.Reason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::PlayerLogoutReq_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLogoutReq)
  return false;
#undef DO_
}

void PlayerLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerLogoutReq.Reason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLogoutReq)
}

::google::protobuf::uint8* PlayerLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerLogoutReq.Reason reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLogoutReq)
  return target;
}

size_t PlayerLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLogoutReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerLogoutReq.Reason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLogoutReq)
    MergeFrom(*source);
  }
}

void PlayerLogoutReq::MergeFrom(const PlayerLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogoutReq::CopyFrom(const PlayerLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutReq::IsInitialized() const {
  return true;
}

void PlayerLogoutReq::Swap(PlayerLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutReq::InternalSwap(PlayerLogoutReq* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogoutReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutReq

// .proto.PlayerLogoutReq.Reason reason = 1;
void PlayerLogoutReq::clear_reason() {
  reason_ = 0;
}
::proto::PlayerLogoutReq_Reason PlayerLogoutReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutReq.reason)
  return static_cast< ::proto::PlayerLogoutReq_Reason >(reason_);
}
void PlayerLogoutReq::set_reason(::proto::PlayerLogoutReq_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutReq.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutRsp::PlayerLogoutRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLogoutRsp)
}
PlayerLogoutRsp::PlayerLogoutRsp(const PlayerLogoutRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLogoutRsp)
}

void PlayerLogoutRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerLogoutRsp::~PlayerLogoutRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerLogoutRsp)
  SharedDtor();
}

void PlayerLogoutRsp::SharedDtor() {
}

void PlayerLogoutRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogoutRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLogoutRsp& PlayerLogoutRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogoutRsp* PlayerLogoutRsp::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutRsp* n = new PlayerLogoutRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLogoutRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLogoutRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLogoutRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLogoutRsp)
  return false;
#undef DO_
}

void PlayerLogoutRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLogoutRsp)
}

::google::protobuf::uint8* PlayerLogoutRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLogoutRsp)
  return target;
}

size_t PlayerLogoutRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLogoutRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLogoutRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogoutRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLogoutRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLogoutRsp)
    MergeFrom(*source);
  }
}

void PlayerLogoutRsp::MergeFrom(const PlayerLogoutRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerLogoutRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogoutRsp::CopyFrom(const PlayerLogoutRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutRsp::IsInitialized() const {
  return true;
}

void PlayerLogoutRsp::Swap(PlayerLogoutRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutRsp::InternalSwap(PlayerLogoutRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogoutRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutRsp

// int32 retcode = 1;
void PlayerLogoutRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLogoutRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutRsp.retcode)
  return retcode_;
}
void PlayerLogoutRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutNotify::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutNotify::PlayerLogoutNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLogoutNotify)
}
PlayerLogoutNotify::PlayerLogoutNotify(const PlayerLogoutNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLogoutNotify)
}

void PlayerLogoutNotify::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerLogoutNotify::~PlayerLogoutNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerLogoutNotify)
  SharedDtor();
}

void PlayerLogoutNotify::SharedDtor() {
}

void PlayerLogoutNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogoutNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLogoutNotify& PlayerLogoutNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogoutNotify* PlayerLogoutNotify::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutNotify* n = new PlayerLogoutNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLogoutNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLogoutNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLogoutNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLogoutNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLogoutNotify)
  return false;
#undef DO_
}

void PlayerLogoutNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLogoutNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLogoutNotify)
}

::google::protobuf::uint8* PlayerLogoutNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLogoutNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLogoutNotify)
  return target;
}

size_t PlayerLogoutNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLogoutNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLogoutNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLogoutNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogoutNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLogoutNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLogoutNotify)
    MergeFrom(*source);
  }
}

void PlayerLogoutNotify::MergeFrom(const PlayerLogoutNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLogoutNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerLogoutNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLogoutNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogoutNotify::CopyFrom(const PlayerLogoutNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLogoutNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutNotify::IsInitialized() const {
  return true;
}

void PlayerLogoutNotify::Swap(PlayerLogoutNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutNotify::InternalSwap(PlayerLogoutNotify* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogoutNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutNotify

// int32 retcode = 1;
void PlayerLogoutNotify::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLogoutNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutNotify.retcode)
  return retcode_;
}
void PlayerLogoutNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutNotify.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerDataNotify::PlayerDataNotify_PropMapEntry::PlayerDataNotify_PropMapEntry() {}
PlayerDataNotify::PlayerDataNotify_PropMapEntry::PlayerDataNotify_PropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerDataNotify::PlayerDataNotify_PropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[9];
}
void PlayerDataNotify::PlayerDataNotify_PropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerDataNotify::PlayerDataNotify_PropMapEntry::MergeFrom(const PlayerDataNotify_PropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerDataNotify::kNickNameFieldNumber;
const int PlayerDataNotify::kServerTimeFieldNumber;
const int PlayerDataNotify::kIsFirstLoginTodayFieldNumber;
const int PlayerDataNotify::kRegionIdFieldNumber;
const int PlayerDataNotify::kPropMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerDataNotify::PlayerDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerDataNotify)
}
PlayerDataNotify::PlayerDataNotify(const PlayerDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_map_.MergeFrom(from.prop_map_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  ::memcpy(&server_time_, &from.server_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_id_) -
    reinterpret_cast<char*>(&server_time_)) + sizeof(region_id_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerDataNotify)
}

void PlayerDataNotify::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&server_time_)) + sizeof(region_id_));
  _cached_size_ = 0;
}

PlayerDataNotify::~PlayerDataNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerDataNotify)
  SharedDtor();
}

void PlayerDataNotify::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerDataNotify& PlayerDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerDataNotify* PlayerDataNotify::New(::google::protobuf::Arena* arena) const {
  PlayerDataNotify* n = new PlayerDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_map_.Clear();
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&server_time_)) + sizeof(region_id_));
  _internal_metadata_.Clear();
}

bool PlayerDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nick_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerDataNotify.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 server_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_first_login_today = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_first_login_today_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 region_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.PropValue> prop_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          PlayerDataNotify_PropMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerDataNotify_PropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerDataNotify)
  return false;
#undef DO_
}

void PlayerDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerDataNotify.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nick_name(), output);
  }

  // uint64 server_time = 2;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->server_time(), output);
  }

  // bool is_first_login_today = 3;
  if (this->is_first_login_today() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_first_login_today(), output);
  }

  // uint32 region_id = 4;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->region_id(), output);
  }

  // map<uint32, .proto.PropValue> prop_map = 6;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerDataNotify)
}

::google::protobuf::uint8* PlayerDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerDataNotify.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nick_name(), target);
  }

  // uint64 server_time = 2;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->server_time(), target);
  }

  // bool is_first_login_today = 3;
  if (this->is_first_login_today() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_first_login_today(), target);
  }

  // uint32 region_id = 4;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->region_id(), target);
  }

  // map<uint32, .proto.PropValue> prop_map = 6;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerDataNotify)
  return target;
}

size_t PlayerDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> prop_map = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prop_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->prop_map().begin();
        it != this->prop_map().end(); ++it) {
      entry.reset(prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // uint64 server_time = 2;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  // bool is_first_login_today = 3;
  if (this->is_first_login_today() != 0) {
    total_size += 1 + 1;
  }

  // uint32 region_id = 4;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerDataNotify)
    MergeFrom(*source);
  }
}

void PlayerDataNotify::MergeFrom(const PlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_map_.MergeFrom(from.prop_map_);
  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
  if (from.is_first_login_today() != 0) {
    set_is_first_login_today(from.is_first_login_today());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void PlayerDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerDataNotify::CopyFrom(const PlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerDataNotify::IsInitialized() const {
  return true;
}

void PlayerDataNotify::Swap(PlayerDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerDataNotify::InternalSwap(PlayerDataNotify* other) {
  using std::swap;
  prop_map_.Swap(&other->prop_map_);
  nick_name_.Swap(&other->nick_name_);
  swap(server_time_, other->server_time_);
  swap(is_first_login_today_, other->is_first_login_today_);
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerDataNotify

// string nick_name = 1;
void PlayerDataNotify::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerDataNotify::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.nick_name)
  return nick_name_.GetNoArena();
}
void PlayerDataNotify::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.nick_name)
}
#if LANG_CXX11
void PlayerDataNotify::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerDataNotify.nick_name)
}
#endif
void PlayerDataNotify::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerDataNotify.nick_name)
}
void PlayerDataNotify::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerDataNotify.nick_name)
}
::std::string* PlayerDataNotify::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerDataNotify.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerDataNotify::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerDataNotify.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerDataNotify::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerDataNotify.nick_name)
}

// uint64 server_time = 2;
void PlayerDataNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerDataNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.server_time)
  return server_time_;
}
void PlayerDataNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.server_time)
}

// bool is_first_login_today = 3;
void PlayerDataNotify::clear_is_first_login_today() {
  is_first_login_today_ = false;
}
bool PlayerDataNotify::is_first_login_today() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.is_first_login_today)
  return is_first_login_today_;
}
void PlayerDataNotify::set_is_first_login_today(bool value) {
  
  is_first_login_today_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.is_first_login_today)
}

// uint32 region_id = 4;
void PlayerDataNotify::clear_region_id() {
  region_id_ = 0u;
}
::google::protobuf::uint32 PlayerDataNotify::region_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.region_id)
  return region_id_;
}
void PlayerDataNotify::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.region_id)
}

// map<uint32, .proto.PropValue> prop_map = 6;
int PlayerDataNotify::prop_map_size() const {
  return prop_map_.size();
}
void PlayerDataNotify::clear_prop_map() {
  prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerDataNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerDataNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeGameTimeReq::kGameTimeFieldNumber;
const int ChangeGameTimeReq::kIsForceSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeGameTimeReq::ChangeGameTimeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeGameTimeReq)
}
ChangeGameTimeReq::ChangeGameTimeReq(const ChangeGameTimeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_time_, &from.game_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_force_set_) -
    reinterpret_cast<char*>(&game_time_)) + sizeof(is_force_set_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeGameTimeReq)
}

void ChangeGameTimeReq::SharedCtor() {
  ::memset(&game_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_force_set_) -
      reinterpret_cast<char*>(&game_time_)) + sizeof(is_force_set_));
  _cached_size_ = 0;
}

ChangeGameTimeReq::~ChangeGameTimeReq() {
  // @@protoc_insertion_point(destructor:proto.ChangeGameTimeReq)
  SharedDtor();
}

void ChangeGameTimeReq::SharedDtor() {
}

void ChangeGameTimeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeGameTimeReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeGameTimeReq& ChangeGameTimeReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeGameTimeReq* ChangeGameTimeReq::New(::google::protobuf::Arena* arena) const {
  ChangeGameTimeReq* n = new ChangeGameTimeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeGameTimeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeGameTimeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&game_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_force_set_) -
      reinterpret_cast<char*>(&game_time_)) + sizeof(is_force_set_));
  _internal_metadata_.Clear();
}

bool ChangeGameTimeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeGameTimeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 game_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_force_set = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_force_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeGameTimeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeGameTimeReq)
  return false;
#undef DO_
}

void ChangeGameTimeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeGameTimeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 1;
  if (this->game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->game_time(), output);
  }

  // bool is_force_set = 2;
  if (this->is_force_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_force_set(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeGameTimeReq)
}

::google::protobuf::uint8* ChangeGameTimeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeGameTimeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 1;
  if (this->game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->game_time(), target);
  }

  // bool is_force_set = 2;
  if (this->is_force_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_force_set(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeGameTimeReq)
  return target;
}

size_t ChangeGameTimeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeGameTimeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 game_time = 1;
  if (this->game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_time());
  }

  // bool is_force_set = 2;
  if (this->is_force_set() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeGameTimeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeGameTimeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeGameTimeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeGameTimeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeGameTimeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeGameTimeReq)
    MergeFrom(*source);
  }
}

void ChangeGameTimeReq::MergeFrom(const ChangeGameTimeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeGameTimeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.game_time() != 0) {
    set_game_time(from.game_time());
  }
  if (from.is_force_set() != 0) {
    set_is_force_set(from.is_force_set());
  }
}

void ChangeGameTimeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeGameTimeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeGameTimeReq::CopyFrom(const ChangeGameTimeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeGameTimeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeGameTimeReq::IsInitialized() const {
  return true;
}

void ChangeGameTimeReq::Swap(ChangeGameTimeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeGameTimeReq::InternalSwap(ChangeGameTimeReq* other) {
  using std::swap;
  swap(game_time_, other->game_time_);
  swap(is_force_set_, other->is_force_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeGameTimeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeGameTimeReq

// uint32 game_time = 1;
void ChangeGameTimeReq::clear_game_time() {
  game_time_ = 0u;
}
::google::protobuf::uint32 ChangeGameTimeReq::game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.game_time)
  return game_time_;
}
void ChangeGameTimeReq::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.game_time)
}

// bool is_force_set = 2;
void ChangeGameTimeReq::clear_is_force_set() {
  is_force_set_ = false;
}
bool ChangeGameTimeReq::is_force_set() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.is_force_set)
  return is_force_set_;
}
void ChangeGameTimeReq::set_is_force_set(bool value) {
  
  is_force_set_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.is_force_set)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeGameTimeRsp::kRetcodeFieldNumber;
const int ChangeGameTimeRsp::kCurGameTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeGameTimeRsp::ChangeGameTimeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeGameTimeRsp)
}
ChangeGameTimeRsp::ChangeGameTimeRsp(const ChangeGameTimeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_game_time_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cur_game_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeGameTimeRsp)
}

void ChangeGameTimeRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_game_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_game_time_));
  _cached_size_ = 0;
}

ChangeGameTimeRsp::~ChangeGameTimeRsp() {
  // @@protoc_insertion_point(destructor:proto.ChangeGameTimeRsp)
  SharedDtor();
}

void ChangeGameTimeRsp::SharedDtor() {
}

void ChangeGameTimeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeGameTimeRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeGameTimeRsp& ChangeGameTimeRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeGameTimeRsp* ChangeGameTimeRsp::New(::google::protobuf::Arena* arena) const {
  ChangeGameTimeRsp* n = new ChangeGameTimeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeGameTimeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeGameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_game_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_game_time_));
  _internal_metadata_.Clear();
}

bool ChangeGameTimeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeGameTimeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_game_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeGameTimeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeGameTimeRsp)
  return false;
#undef DO_
}

void ChangeGameTimeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeGameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 cur_game_time = 2;
  if (this->cur_game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_game_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeGameTimeRsp)
}

::google::protobuf::uint8* ChangeGameTimeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeGameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 cur_game_time = 2;
  if (this->cur_game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_game_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeGameTimeRsp)
  return target;
}

size_t ChangeGameTimeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeGameTimeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 cur_game_time = 2;
  if (this->cur_game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_game_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeGameTimeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeGameTimeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeGameTimeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeGameTimeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeGameTimeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeGameTimeRsp)
    MergeFrom(*source);
  }
}

void ChangeGameTimeRsp::MergeFrom(const ChangeGameTimeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeGameTimeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cur_game_time() != 0) {
    set_cur_game_time(from.cur_game_time());
  }
}

void ChangeGameTimeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeGameTimeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeGameTimeRsp::CopyFrom(const ChangeGameTimeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeGameTimeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeGameTimeRsp::IsInitialized() const {
  return true;
}

void ChangeGameTimeRsp::Swap(ChangeGameTimeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeGameTimeRsp::InternalSwap(ChangeGameTimeRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(cur_game_time_, other->cur_game_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeGameTimeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeGameTimeRsp

// int32 retcode = 1;
void ChangeGameTimeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChangeGameTimeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.retcode)
  return retcode_;
}
void ChangeGameTimeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.retcode)
}

// uint32 cur_game_time = 2;
void ChangeGameTimeRsp::clear_cur_game_time() {
  cur_game_time_ = 0u;
}
::google::protobuf::uint32 ChangeGameTimeRsp::cur_game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.cur_game_time)
  return cur_game_time_;
}
void ChangeGameTimeRsp::set_cur_game_time(::google::protobuf::uint32 value) {
  
  cur_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.cur_game_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerGameTimeNotify::kGameTimeFieldNumber;
const int PlayerGameTimeNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerGameTimeNotify::PlayerGameTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerGameTimeNotify)
}
PlayerGameTimeNotify::PlayerGameTimeNotify(const PlayerGameTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_time_, &from.game_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&game_time_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerGameTimeNotify)
}

void PlayerGameTimeNotify::SharedCtor() {
  ::memset(&game_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&game_time_)) + sizeof(uid_));
  _cached_size_ = 0;
}

PlayerGameTimeNotify::~PlayerGameTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerGameTimeNotify)
  SharedDtor();
}

void PlayerGameTimeNotify::SharedDtor() {
}

void PlayerGameTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerGameTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerGameTimeNotify& PlayerGameTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerGameTimeNotify* PlayerGameTimeNotify::New(::google::protobuf::Arena* arena) const {
  PlayerGameTimeNotify* n = new PlayerGameTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerGameTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&game_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&game_time_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool PlayerGameTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerGameTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 game_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerGameTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerGameTimeNotify)
  return false;
#undef DO_
}

void PlayerGameTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 1;
  if (this->game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->game_time(), output);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerGameTimeNotify)
}

::google::protobuf::uint8* PlayerGameTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 1;
  if (this->game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->game_time(), target);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerGameTimeNotify)
  return target;
}

size_t PlayerGameTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerGameTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 game_time = 1;
  if (this->game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_time());
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerGameTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerGameTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerGameTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerGameTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerGameTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerGameTimeNotify)
    MergeFrom(*source);
  }
}

void PlayerGameTimeNotify::MergeFrom(const PlayerGameTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerGameTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.game_time() != 0) {
    set_game_time(from.game_time());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void PlayerGameTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerGameTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerGameTimeNotify::CopyFrom(const PlayerGameTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerGameTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerGameTimeNotify::IsInitialized() const {
  return true;
}

void PlayerGameTimeNotify::Swap(PlayerGameTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerGameTimeNotify::InternalSwap(PlayerGameTimeNotify* other) {
  using std::swap;
  swap(game_time_, other->game_time_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerGameTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerGameTimeNotify

// uint32 game_time = 1;
void PlayerGameTimeNotify::clear_game_time() {
  game_time_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeNotify::game_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.game_time)
  return game_time_;
}
void PlayerGameTimeNotify::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.game_time)
}

// uint32 uid = 2;
void PlayerGameTimeNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.uid)
  return uid_;
}
void PlayerGameTimeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerPropNotify::PlayerPropNotify_PropMapEntry::PlayerPropNotify_PropMapEntry() {}
PlayerPropNotify::PlayerPropNotify_PropMapEntry::PlayerPropNotify_PropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerPropNotify::PlayerPropNotify_PropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[14];
}
void PlayerPropNotify::PlayerPropNotify_PropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerPropNotify::PlayerPropNotify_PropMapEntry::MergeFrom(const PlayerPropNotify_PropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropNotify::kPropMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropNotify::PlayerPropNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerPropNotify)
}
PlayerPropNotify::PlayerPropNotify(const PlayerPropNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_map_.MergeFrom(from.prop_map_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerPropNotify)
}

void PlayerPropNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerPropNotify::~PlayerPropNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerPropNotify)
  SharedDtor();
}

void PlayerPropNotify::SharedDtor() {
}

void PlayerPropNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropNotify& PlayerPropNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerPropNotify* PlayerPropNotify::New(::google::protobuf::Arena* arena) const {
  PlayerPropNotify* n = new PlayerPropNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPropNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerPropNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_map_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerPropNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerPropNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.PropValue> prop_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PlayerPropNotify_PropMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerPropNotify_PropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerPropNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerPropNotify)
  return false;
#undef DO_
}

void PlayerPropNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerPropNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.PropValue> prop_map = 1;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerPropNotify)
}

::google::protobuf::uint8* PlayerPropNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerPropNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.PropValue> prop_map = 1;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerPropNotify)
  return target;
}

size_t PlayerPropNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerPropNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> prop_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prop_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->prop_map().begin();
        it != this->prop_map().end(); ++it) {
      entry.reset(prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerPropNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerPropNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerPropNotify)
    MergeFrom(*source);
  }
}

void PlayerPropNotify::MergeFrom(const PlayerPropNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerPropNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_map_.MergeFrom(from.prop_map_);
}

void PlayerPropNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerPropNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropNotify::CopyFrom(const PlayerPropNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerPropNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropNotify::IsInitialized() const {
  return true;
}

void PlayerPropNotify::Swap(PlayerPropNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropNotify::InternalSwap(PlayerPropNotify* other) {
  using std::swap;
  prop_map_.Swap(&other->prop_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPropNotify

// map<uint32, .proto.PropValue> prop_map = 1;
int PlayerPropNotify::prop_map_size() const {
  return prop_map_.size();
}
void PlayerPropNotify::clear_prop_map() {
  prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerPropNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerPropNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientTriggerEventNotify::kEventTypeFieldNumber;
const int ClientTriggerEventNotify::kForceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientTriggerEventNotify::ClientTriggerEventNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientTriggerEventNotify)
}
ClientTriggerEventNotify::ClientTriggerEventNotify(const ClientTriggerEventNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_type_, &from.event_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_id_) -
    reinterpret_cast<char*>(&event_type_)) + sizeof(force_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientTriggerEventNotify)
}

void ClientTriggerEventNotify::SharedCtor() {
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_id_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(force_id_));
  _cached_size_ = 0;
}

ClientTriggerEventNotify::~ClientTriggerEventNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientTriggerEventNotify)
  SharedDtor();
}

void ClientTriggerEventNotify::SharedDtor() {
}

void ClientTriggerEventNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientTriggerEventNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientTriggerEventNotify& ClientTriggerEventNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientTriggerEventNotify* ClientTriggerEventNotify::New(::google::protobuf::Arena* arena) const {
  ClientTriggerEventNotify* n = new ClientTriggerEventNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientTriggerEventNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientTriggerEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_id_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(force_id_));
  _internal_metadata_.Clear();
}

bool ClientTriggerEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientTriggerEventNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.EventTriggerType event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event_type(static_cast< ::proto::EventTriggerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 force_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &force_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientTriggerEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientTriggerEventNotify)
  return false;
#undef DO_
}

void ClientTriggerEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientTriggerEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.EventTriggerType event_type = 1;
  if (this->event_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event_type(), output);
  }

  // uint32 force_id = 2;
  if (this->force_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->force_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientTriggerEventNotify)
}

::google::protobuf::uint8* ClientTriggerEventNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientTriggerEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.EventTriggerType event_type = 1;
  if (this->event_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event_type(), target);
  }

  // uint32 force_id = 2;
  if (this->force_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->force_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientTriggerEventNotify)
  return target;
}

size_t ClientTriggerEventNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientTriggerEventNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EventTriggerType event_type = 1;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
  }

  // uint32 force_id = 2;
  if (this->force_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->force_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientTriggerEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientTriggerEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientTriggerEventNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientTriggerEventNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientTriggerEventNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientTriggerEventNotify)
    MergeFrom(*source);
  }
}

void ClientTriggerEventNotify::MergeFrom(const ClientTriggerEventNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientTriggerEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_type() != 0) {
    set_event_type(from.event_type());
  }
  if (from.force_id() != 0) {
    set_force_id(from.force_id());
  }
}

void ClientTriggerEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientTriggerEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientTriggerEventNotify::CopyFrom(const ClientTriggerEventNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientTriggerEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientTriggerEventNotify::IsInitialized() const {
  return true;
}

void ClientTriggerEventNotify::Swap(ClientTriggerEventNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientTriggerEventNotify::InternalSwap(ClientTriggerEventNotify* other) {
  using std::swap;
  swap(event_type_, other->event_type_);
  swap(force_id_, other->force_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientTriggerEventNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientTriggerEventNotify

// .proto.EventTriggerType event_type = 1;
void ClientTriggerEventNotify::clear_event_type() {
  event_type_ = 0;
}
::proto::EventTriggerType ClientTriggerEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.event_type)
  return static_cast< ::proto::EventTriggerType >(event_type_);
}
void ClientTriggerEventNotify::set_event_type(::proto::EventTriggerType value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.event_type)
}

// uint32 force_id = 2;
void ClientTriggerEventNotify::clear_force_id() {
  force_id_ = 0u;
}
::google::protobuf::uint32 ClientTriggerEventNotify::force_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.force_id)
  return force_id_;
}
void ClientTriggerEventNotify::set_force_id(::google::protobuf::uint32 value) {
  
  force_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.force_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerPropReq::kPropListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerPropReq::SetPlayerPropReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerPropReq)
}
SetPlayerPropReq::SetPlayerPropReq(const SetPlayerPropReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prop_list_(from.prop_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerPropReq)
}

void SetPlayerPropReq::SharedCtor() {
  _cached_size_ = 0;
}

SetPlayerPropReq::~SetPlayerPropReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerPropReq)
  SharedDtor();
}

void SetPlayerPropReq::SharedDtor() {
}

void SetPlayerPropReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerPropReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerPropReq& SetPlayerPropReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerPropReq* SetPlayerPropReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerPropReq* n = new SetPlayerPropReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerPropReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerPropReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_list_.Clear();
  _internal_metadata_.Clear();
}

bool SetPlayerPropReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerPropReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.PropValue prop_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prop_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerPropReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerPropReq)
  return false;
#undef DO_
}

void SetPlayerPropReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerPropReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PropValue prop_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prop_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prop_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerPropReq)
}

::google::protobuf::uint8* SetPlayerPropReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerPropReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PropValue prop_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prop_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prop_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerPropReq)
  return target;
}

size_t SetPlayerPropReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerPropReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PropValue prop_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prop_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerPropReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerPropReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerPropReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerPropReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerPropReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerPropReq)
    MergeFrom(*source);
  }
}

void SetPlayerPropReq::MergeFrom(const SetPlayerPropReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerPropReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_list_.MergeFrom(from.prop_list_);
}

void SetPlayerPropReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerPropReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerPropReq::CopyFrom(const SetPlayerPropReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerPropReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerPropReq::IsInitialized() const {
  return true;
}

void SetPlayerPropReq::Swap(SetPlayerPropReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerPropReq::InternalSwap(SetPlayerPropReq* other) {
  using std::swap;
  prop_list_.InternalSwap(&other->prop_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerPropReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerPropReq

// repeated .proto.PropValue prop_list = 1;
int SetPlayerPropReq::prop_list_size() const {
  return prop_list_.size();
}
void SetPlayerPropReq::clear_prop_list() {
  prop_list_.Clear();
}
const ::proto::PropValue& SetPlayerPropReq::prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Get(index);
}
::proto::PropValue* SetPlayerPropReq::mutable_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Mutable(index);
}
::proto::PropValue* SetPlayerPropReq::add_prop_list() {
  // @@protoc_insertion_point(field_add:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PropValue >*
SetPlayerPropReq::mutable_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetPlayerPropReq.prop_list)
  return &prop_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PropValue >&
SetPlayerPropReq::prop_list() const {
  // @@protoc_insertion_point(field_list:proto.SetPlayerPropReq.prop_list)
  return prop_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerPropRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerPropRsp::SetPlayerPropRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerPropRsp)
}
SetPlayerPropRsp::SetPlayerPropRsp(const SetPlayerPropRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerPropRsp)
}

void SetPlayerPropRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerPropRsp::~SetPlayerPropRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerPropRsp)
  SharedDtor();
}

void SetPlayerPropRsp::SharedDtor() {
}

void SetPlayerPropRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerPropRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerPropRsp& SetPlayerPropRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerPropRsp* SetPlayerPropRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerPropRsp* n = new SetPlayerPropRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerPropRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerPropRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerPropRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerPropRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerPropRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerPropRsp)
  return false;
#undef DO_
}

void SetPlayerPropRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerPropRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerPropRsp)
}

::google::protobuf::uint8* SetPlayerPropRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerPropRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerPropRsp)
  return target;
}

size_t SetPlayerPropRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerPropRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerPropRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerPropRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerPropRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerPropRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerPropRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerPropRsp)
    MergeFrom(*source);
  }
}

void SetPlayerPropRsp::MergeFrom(const SetPlayerPropRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerPropRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerPropRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerPropRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerPropRsp::CopyFrom(const SetPlayerPropRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerPropRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerPropRsp::IsInitialized() const {
  return true;
}

void SetPlayerPropRsp::Swap(SetPlayerPropRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerPropRsp::InternalSwap(SetPlayerPropRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerPropRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerPropRsp

// int32 retcode = 1;
void SetPlayerPropRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerPropRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropRsp.retcode)
  return retcode_;
}
void SetPlayerPropRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerPropRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBornDataReq::kAvatarIdFieldNumber;
const int SetPlayerBornDataReq::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBornDataReq::SetPlayerBornDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBornDataReq)
}
SetPlayerBornDataReq::SetPlayerBornDataReq(const SetPlayerBornDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  avatar_id_ = from.avatar_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBornDataReq)
}

void SetPlayerBornDataReq::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_id_ = 0u;
  _cached_size_ = 0;
}

SetPlayerBornDataReq::~SetPlayerBornDataReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBornDataReq)
  SharedDtor();
}

void SetPlayerBornDataReq::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerBornDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBornDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBornDataReq& SetPlayerBornDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBornDataReq* SetPlayerBornDataReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerBornDataReq* n = new SetPlayerBornDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBornDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBornDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetPlayerBornDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBornDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerBornDataReq.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBornDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBornDataReq)
  return false;
#undef DO_
}

void SetPlayerBornDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBornDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerBornDataReq.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBornDataReq)
}

::google::protobuf::uint8* SetPlayerBornDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBornDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerBornDataReq.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBornDataReq)
  return target;
}

size_t SetPlayerBornDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBornDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBornDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBornDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBornDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBornDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBornDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBornDataReq)
    MergeFrom(*source);
  }
}

void SetPlayerBornDataReq::MergeFrom(const SetPlayerBornDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBornDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void SetPlayerBornDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBornDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBornDataReq::CopyFrom(const SetPlayerBornDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBornDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBornDataReq::IsInitialized() const {
  return true;
}

void SetPlayerBornDataReq::Swap(SetPlayerBornDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBornDataReq::InternalSwap(SetPlayerBornDataReq* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBornDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBornDataReq

// uint32 avatar_id = 1;
void SetPlayerBornDataReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SetPlayerBornDataReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.avatar_id)
  return avatar_id_;
}
void SetPlayerBornDataReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.avatar_id)
}

// string nick_name = 2;
void SetPlayerBornDataReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerBornDataReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerBornDataReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.nick_name)
}
#if LANG_CXX11
void SetPlayerBornDataReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerBornDataReq.nick_name)
}
#endif
void SetPlayerBornDataReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerBornDataReq.nick_name)
}
void SetPlayerBornDataReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerBornDataReq.nick_name)
}
::std::string* SetPlayerBornDataReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerBornDataReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBornDataReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerBornDataReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBornDataReq.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBornDataRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBornDataRsp::SetPlayerBornDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBornDataRsp)
}
SetPlayerBornDataRsp::SetPlayerBornDataRsp(const SetPlayerBornDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBornDataRsp)
}

void SetPlayerBornDataRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerBornDataRsp::~SetPlayerBornDataRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBornDataRsp)
  SharedDtor();
}

void SetPlayerBornDataRsp::SharedDtor() {
}

void SetPlayerBornDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBornDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBornDataRsp& SetPlayerBornDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBornDataRsp* SetPlayerBornDataRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerBornDataRsp* n = new SetPlayerBornDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBornDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBornDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerBornDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBornDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBornDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBornDataRsp)
  return false;
#undef DO_
}

void SetPlayerBornDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBornDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBornDataRsp)
}

::google::protobuf::uint8* SetPlayerBornDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBornDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBornDataRsp)
  return target;
}

size_t SetPlayerBornDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBornDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBornDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBornDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBornDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBornDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBornDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBornDataRsp)
    MergeFrom(*source);
  }
}

void SetPlayerBornDataRsp::MergeFrom(const SetPlayerBornDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBornDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerBornDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBornDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBornDataRsp::CopyFrom(const SetPlayerBornDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBornDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBornDataRsp::IsInitialized() const {
  return true;
}

void SetPlayerBornDataRsp::Swap(SetPlayerBornDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBornDataRsp::InternalSwap(SetPlayerBornDataRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBornDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBornDataRsp

// int32 retcode = 1;
void SetPlayerBornDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerBornDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataRsp.retcode)
  return retcode_;
}
void SetPlayerBornDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoSetPlayerBornDataNotify::DoSetPlayerBornDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DoSetPlayerBornDataNotify)
}
DoSetPlayerBornDataNotify::DoSetPlayerBornDataNotify(const DoSetPlayerBornDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DoSetPlayerBornDataNotify)
}

void DoSetPlayerBornDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

DoSetPlayerBornDataNotify::~DoSetPlayerBornDataNotify() {
  // @@protoc_insertion_point(destructor:proto.DoSetPlayerBornDataNotify)
  SharedDtor();
}

void DoSetPlayerBornDataNotify::SharedDtor() {
}

void DoSetPlayerBornDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoSetPlayerBornDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoSetPlayerBornDataNotify& DoSetPlayerBornDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DoSetPlayerBornDataNotify* DoSetPlayerBornDataNotify::New(::google::protobuf::Arena* arena) const {
  DoSetPlayerBornDataNotify* n = new DoSetPlayerBornDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoSetPlayerBornDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DoSetPlayerBornDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DoSetPlayerBornDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DoSetPlayerBornDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DoSetPlayerBornDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DoSetPlayerBornDataNotify)
  return false;
#undef DO_
}

void DoSetPlayerBornDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DoSetPlayerBornDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DoSetPlayerBornDataNotify)
}

::google::protobuf::uint8* DoSetPlayerBornDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DoSetPlayerBornDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DoSetPlayerBornDataNotify)
  return target;
}

size_t DoSetPlayerBornDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DoSetPlayerBornDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoSetPlayerBornDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DoSetPlayerBornDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DoSetPlayerBornDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoSetPlayerBornDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DoSetPlayerBornDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DoSetPlayerBornDataNotify)
    MergeFrom(*source);
  }
}

void DoSetPlayerBornDataNotify::MergeFrom(const DoSetPlayerBornDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DoSetPlayerBornDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DoSetPlayerBornDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DoSetPlayerBornDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoSetPlayerBornDataNotify::CopyFrom(const DoSetPlayerBornDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DoSetPlayerBornDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoSetPlayerBornDataNotify::IsInitialized() const {
  return true;
}

void DoSetPlayerBornDataNotify::Swap(DoSetPlayerBornDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoSetPlayerBornDataNotify::InternalSwap(DoSetPlayerBornDataNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoSetPlayerBornDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoSetPlayerBornDataNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropChangeNotify::kPropTypeFieldNumber;
const int PlayerPropChangeNotify::kPropDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropChangeNotify::PlayerPropChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerPropChangeNotify)
}
PlayerPropChangeNotify::PlayerPropChangeNotify(const PlayerPropChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&prop_type_, &from.prop_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&prop_delta_) -
    reinterpret_cast<char*>(&prop_type_)) + sizeof(prop_delta_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerPropChangeNotify)
}

void PlayerPropChangeNotify::SharedCtor() {
  ::memset(&prop_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_delta_) -
      reinterpret_cast<char*>(&prop_type_)) + sizeof(prop_delta_));
  _cached_size_ = 0;
}

PlayerPropChangeNotify::~PlayerPropChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerPropChangeNotify)
  SharedDtor();
}

void PlayerPropChangeNotify::SharedDtor() {
}

void PlayerPropChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropChangeNotify& PlayerPropChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerPropChangeNotify* PlayerPropChangeNotify::New(::google::protobuf::Arena* arena) const {
  PlayerPropChangeNotify* n = new PlayerPropChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPropChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerPropChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&prop_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_delta_) -
      reinterpret_cast<char*>(&prop_type_)) + sizeof(prop_delta_));
  _internal_metadata_.Clear();
}

bool PlayerPropChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerPropChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 prop_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 prop_delta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerPropChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerPropChangeNotify)
  return false;
#undef DO_
}

void PlayerPropChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerPropChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 prop_type = 1;
  if (this->prop_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prop_type(), output);
  }

  // uint32 prop_delta = 2;
  if (this->prop_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prop_delta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerPropChangeNotify)
}

::google::protobuf::uint8* PlayerPropChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerPropChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 prop_type = 1;
  if (this->prop_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prop_type(), target);
  }

  // uint32 prop_delta = 2;
  if (this->prop_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prop_delta(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerPropChangeNotify)
  return target;
}

size_t PlayerPropChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerPropChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 prop_type = 1;
  if (this->prop_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prop_type());
  }

  // uint32 prop_delta = 2;
  if (this->prop_delta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prop_delta());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerPropChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerPropChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerPropChangeNotify)
    MergeFrom(*source);
  }
}

void PlayerPropChangeNotify::MergeFrom(const PlayerPropChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerPropChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prop_type() != 0) {
    set_prop_type(from.prop_type());
  }
  if (from.prop_delta() != 0) {
    set_prop_delta(from.prop_delta());
  }
}

void PlayerPropChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerPropChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropChangeNotify::CopyFrom(const PlayerPropChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerPropChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropChangeNotify::IsInitialized() const {
  return true;
}

void PlayerPropChangeNotify::Swap(PlayerPropChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropChangeNotify::InternalSwap(PlayerPropChangeNotify* other) {
  using std::swap;
  swap(prop_type_, other->prop_type_);
  swap(prop_delta_, other->prop_delta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPropChangeNotify

// uint32 prop_type = 1;
void PlayerPropChangeNotify::clear_prop_type() {
  prop_type_ = 0u;
}
::google::protobuf::uint32 PlayerPropChangeNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_type)
  return prop_type_;
}
void PlayerPropChangeNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_type)
}

// uint32 prop_delta = 2;
void PlayerPropChangeNotify::clear_prop_delta() {
  prop_delta_ = 0u;
}
::google::protobuf::uint32 PlayerPropChangeNotify::prop_delta() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_delta)
  return prop_delta_;
}
void PlayerPropChangeNotify::set_prop_delta(::google::protobuf::uint32 value) {
  
  prop_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_delta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerNameReq::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerNameReq::SetPlayerNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerNameReq)
}
SetPlayerNameReq::SetPlayerNameReq(const SetPlayerNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerNameReq)
}

void SetPlayerNameReq::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetPlayerNameReq::~SetPlayerNameReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerNameReq)
  SharedDtor();
}

void SetPlayerNameReq::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerNameReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerNameReq& SetPlayerNameReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerNameReq* SetPlayerNameReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerNameReq* n = new SetPlayerNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetPlayerNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nick_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerNameReq.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerNameReq)
  return false;
#undef DO_
}

void SetPlayerNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameReq.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerNameReq)
}

::google::protobuf::uint8* SetPlayerNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameReq.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerNameReq)
  return target;
}

size_t SetPlayerNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerNameReq)
    MergeFrom(*source);
  }
}

void SetPlayerNameReq::MergeFrom(const SetPlayerNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
}

void SetPlayerNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerNameReq::CopyFrom(const SetPlayerNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerNameReq::IsInitialized() const {
  return true;
}

void SetPlayerNameReq::Swap(SetPlayerNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerNameReq::InternalSwap(SetPlayerNameReq* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerNameReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerNameReq

// string nick_name = 1;
void SetPlayerNameReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerNameReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameReq.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerNameReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameReq.nick_name)
}
#if LANG_CXX11
void SetPlayerNameReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameReq.nick_name)
}
#endif
void SetPlayerNameReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameReq.nick_name)
}
void SetPlayerNameReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameReq.nick_name)
}
::std::string* SetPlayerNameReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerNameReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerNameReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameReq.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerNameRsp::kRetcodeFieldNumber;
const int SetPlayerNameRsp::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerNameRsp::SetPlayerNameRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerNameRsp)
}
SetPlayerNameRsp::SetPlayerNameRsp(const SetPlayerNameRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerNameRsp)
}

void SetPlayerNameRsp::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerNameRsp::~SetPlayerNameRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerNameRsp)
  SharedDtor();
}

void SetPlayerNameRsp::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerNameRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerNameRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerNameRsp& SetPlayerNameRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerNameRsp* SetPlayerNameRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerNameRsp* n = new SetPlayerNameRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerNameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerNameRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerNameRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerNameRsp.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerNameRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerNameRsp)
  return false;
#undef DO_
}

void SetPlayerNameRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameRsp.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerNameRsp)
}

::google::protobuf::uint8* SetPlayerNameRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameRsp.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerNameRsp)
  return target;
}

size_t SetPlayerNameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerNameRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerNameRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerNameRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerNameRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerNameRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerNameRsp)
    MergeFrom(*source);
  }
}

void SetPlayerNameRsp::MergeFrom(const SetPlayerNameRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerNameRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerNameRsp::CopyFrom(const SetPlayerNameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerNameRsp::IsInitialized() const {
  return true;
}

void SetPlayerNameRsp::Swap(SetPlayerNameRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerNameRsp::InternalSwap(SetPlayerNameRsp* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerNameRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerNameRsp

// int32 retcode = 1;
void SetPlayerNameRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.retcode)
  return retcode_;
}
void SetPlayerNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.retcode)
}

// string nick_name = 2;
void SetPlayerNameRsp::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerNameRsp::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerNameRsp::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.nick_name)
}
#if LANG_CXX11
void SetPlayerNameRsp::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameRsp.nick_name)
}
#endif
void SetPlayerNameRsp::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameRsp.nick_name)
}
void SetPlayerNameRsp::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameRsp.nick_name)
}
::std::string* SetPlayerNameRsp::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerNameRsp::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameRsp.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerNameRsp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameRsp.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOpenStateReq::kKeyFieldNumber;
const int SetOpenStateReq::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOpenStateReq::SetOpenStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetOpenStateReq)
}
SetOpenStateReq::SetOpenStateReq(const SetOpenStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.SetOpenStateReq)
}

void SetOpenStateReq::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _cached_size_ = 0;
}

SetOpenStateReq::~SetOpenStateReq() {
  // @@protoc_insertion_point(destructor:proto.SetOpenStateReq)
  SharedDtor();
}

void SetOpenStateReq::SharedDtor() {
}

void SetOpenStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOpenStateReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOpenStateReq& SetOpenStateReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOpenStateReq* SetOpenStateReq::New(::google::protobuf::Arena* arena) const {
  SetOpenStateReq* n = new SetOpenStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOpenStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetOpenStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool SetOpenStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetOpenStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetOpenStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetOpenStateReq)
  return false;
#undef DO_
}

void SetOpenStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetOpenStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key(), output);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetOpenStateReq)
}

::google::protobuf::uint8* SetOpenStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetOpenStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key(), target);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetOpenStateReq)
  return target;
}

size_t SetOpenStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetOpenStateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOpenStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetOpenStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOpenStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOpenStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetOpenStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetOpenStateReq)
    MergeFrom(*source);
  }
}

void SetOpenStateReq::MergeFrom(const SetOpenStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetOpenStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetOpenStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetOpenStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOpenStateReq::CopyFrom(const SetOpenStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetOpenStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOpenStateReq::IsInitialized() const {
  return true;
}

void SetOpenStateReq::Swap(SetOpenStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOpenStateReq::InternalSwap(SetOpenStateReq* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOpenStateReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOpenStateReq

// uint32 key = 1;
void SetOpenStateReq::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 SetOpenStateReq::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.key)
  return key_;
}
void SetOpenStateReq::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.key)
}

// uint32 value = 2;
void SetOpenStateReq::clear_value() {
  value_ = 0u;
}
::google::protobuf::uint32 SetOpenStateReq::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.value)
  return value_;
}
void SetOpenStateReq::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOpenStateRsp::kRetcodeFieldNumber;
const int SetOpenStateRsp::kKeyFieldNumber;
const int SetOpenStateRsp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOpenStateRsp::SetOpenStateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetOpenStateRsp)
}
SetOpenStateRsp::SetOpenStateRsp(const SetOpenStateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.SetOpenStateRsp)
}

void SetOpenStateRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(value_));
  _cached_size_ = 0;
}

SetOpenStateRsp::~SetOpenStateRsp() {
  // @@protoc_insertion_point(destructor:proto.SetOpenStateRsp)
  SharedDtor();
}

void SetOpenStateRsp::SharedDtor() {
}

void SetOpenStateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOpenStateRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOpenStateRsp& SetOpenStateRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOpenStateRsp* SetOpenStateRsp::New(::google::protobuf::Arena* arena) const {
  SetOpenStateRsp* n = new SetOpenStateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOpenStateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetOpenStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool SetOpenStateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetOpenStateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetOpenStateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetOpenStateRsp)
  return false;
#undef DO_
}

void SetOpenStateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetOpenStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 key = 2;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->key(), output);
  }

  // uint32 value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetOpenStateRsp)
}

::google::protobuf::uint8* SetOpenStateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetOpenStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 key = 2;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->key(), target);
  }

  // uint32 value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetOpenStateRsp)
  return target;
}

size_t SetOpenStateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetOpenStateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 key = 2;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  // uint32 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOpenStateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetOpenStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOpenStateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOpenStateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetOpenStateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetOpenStateRsp)
    MergeFrom(*source);
  }
}

void SetOpenStateRsp::MergeFrom(const SetOpenStateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetOpenStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetOpenStateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetOpenStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOpenStateRsp::CopyFrom(const SetOpenStateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetOpenStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOpenStateRsp::IsInitialized() const {
  return true;
}

void SetOpenStateRsp::Swap(SetOpenStateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOpenStateRsp::InternalSwap(SetOpenStateRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOpenStateRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOpenStateRsp

// int32 retcode = 1;
void SetOpenStateRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetOpenStateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.retcode)
  return retcode_;
}
void SetOpenStateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.retcode)
}

// uint32 key = 2;
void SetOpenStateRsp::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 SetOpenStateRsp::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.key)
  return key_;
}
void SetOpenStateRsp::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.key)
}

// uint32 value = 3;
void SetOpenStateRsp::clear_value() {
  value_ = 0u;
}
::google::protobuf::uint32 SetOpenStateRsp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.value)
  return value_;
}
void SetOpenStateRsp::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::OpenStateUpdateNotify_OpenStateMapEntry() {}
OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::OpenStateUpdateNotify_OpenStateMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[27];
}
void OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::MergeFrom(const OpenStateUpdateNotify_OpenStateMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenStateUpdateNotify::kOpenStateMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenStateUpdateNotify::OpenStateUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OpenStateUpdateNotify)
}
OpenStateUpdateNotify::OpenStateUpdateNotify(const OpenStateUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  open_state_map_.MergeFrom(from.open_state_map_);
  // @@protoc_insertion_point(copy_constructor:proto.OpenStateUpdateNotify)
}

void OpenStateUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

OpenStateUpdateNotify::~OpenStateUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.OpenStateUpdateNotify)
  SharedDtor();
}

void OpenStateUpdateNotify::SharedDtor() {
}

void OpenStateUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenStateUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenStateUpdateNotify& OpenStateUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenStateUpdateNotify* OpenStateUpdateNotify::New(::google::protobuf::Arena* arena) const {
  OpenStateUpdateNotify* n = new OpenStateUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenStateUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OpenStateUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_state_map_.Clear();
  _internal_metadata_.Clear();
}

bool OpenStateUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OpenStateUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> open_state_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          OpenStateUpdateNotify_OpenStateMapEntry::Parser< ::google::protobuf::internal::MapField<
              OpenStateUpdateNotify_OpenStateMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&open_state_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OpenStateUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OpenStateUpdateNotify)
  return false;
#undef DO_
}

void OpenStateUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OpenStateUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 1;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OpenStateUpdateNotify)
}

::google::protobuf::uint8* OpenStateUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OpenStateUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 1;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OpenStateUpdateNotify)
  return target;
}

size_t OpenStateUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OpenStateUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> open_state_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->open_state_map_size());
  {
    ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->open_state_map().begin();
        it != this->open_state_map().end(); ++it) {
      entry.reset(open_state_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenStateUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OpenStateUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenStateUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenStateUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OpenStateUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OpenStateUpdateNotify)
    MergeFrom(*source);
  }
}

void OpenStateUpdateNotify::MergeFrom(const OpenStateUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OpenStateUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_state_map_.MergeFrom(from.open_state_map_);
}

void OpenStateUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OpenStateUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenStateUpdateNotify::CopyFrom(const OpenStateUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OpenStateUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenStateUpdateNotify::IsInitialized() const {
  return true;
}

void OpenStateUpdateNotify::Swap(OpenStateUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenStateUpdateNotify::InternalSwap(OpenStateUpdateNotify* other) {
  using std::swap;
  open_state_map_.Swap(&other->open_state_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenStateUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenStateUpdateNotify

// map<uint32, uint32> open_state_map = 1;
int OpenStateUpdateNotify::open_state_map_size() const {
  return open_state_map_.size();
}
void OpenStateUpdateNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateUpdateNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateUpdateNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::OpenStateChangeNotify_OpenStateMapEntry() {}
OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::OpenStateChangeNotify_OpenStateMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[29];
}
void OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::MergeFrom(const OpenStateChangeNotify_OpenStateMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenStateChangeNotify::kOpenStateMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenStateChangeNotify::OpenStateChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OpenStateChangeNotify)
}
OpenStateChangeNotify::OpenStateChangeNotify(const OpenStateChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  open_state_map_.MergeFrom(from.open_state_map_);
  // @@protoc_insertion_point(copy_constructor:proto.OpenStateChangeNotify)
}

void OpenStateChangeNotify::SharedCtor() {
  _cached_size_ = 0;
}

OpenStateChangeNotify::~OpenStateChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.OpenStateChangeNotify)
  SharedDtor();
}

void OpenStateChangeNotify::SharedDtor() {
}

void OpenStateChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenStateChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenStateChangeNotify& OpenStateChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenStateChangeNotify* OpenStateChangeNotify::New(::google::protobuf::Arena* arena) const {
  OpenStateChangeNotify* n = new OpenStateChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenStateChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OpenStateChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_state_map_.Clear();
  _internal_metadata_.Clear();
}

bool OpenStateChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OpenStateChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> open_state_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          OpenStateChangeNotify_OpenStateMapEntry::Parser< ::google::protobuf::internal::MapField<
              OpenStateChangeNotify_OpenStateMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&open_state_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OpenStateChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OpenStateChangeNotify)
  return false;
#undef DO_
}

void OpenStateChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OpenStateChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 1;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OpenStateChangeNotify)
}

::google::protobuf::uint8* OpenStateChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OpenStateChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 1;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OpenStateChangeNotify)
  return target;
}

size_t OpenStateChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OpenStateChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> open_state_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->open_state_map_size());
  {
    ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->open_state_map().begin();
        it != this->open_state_map().end(); ++it) {
      entry.reset(open_state_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenStateChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OpenStateChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenStateChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenStateChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OpenStateChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OpenStateChangeNotify)
    MergeFrom(*source);
  }
}

void OpenStateChangeNotify::MergeFrom(const OpenStateChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OpenStateChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_state_map_.MergeFrom(from.open_state_map_);
}

void OpenStateChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OpenStateChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenStateChangeNotify::CopyFrom(const OpenStateChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OpenStateChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenStateChangeNotify::IsInitialized() const {
  return true;
}

void OpenStateChangeNotify::Swap(OpenStateChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenStateChangeNotify::InternalSwap(OpenStateChangeNotify* other) {
  using std::swap;
  open_state_map_.Swap(&other->open_state_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenStateChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenStateChangeNotify

// map<uint32, uint32> open_state_map = 1;
int OpenStateChangeNotify::open_state_map_size() const {
  return open_state_map_.size();
}
void OpenStateChangeNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateChangeNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateChangeNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookReq::kRecipeIdFieldNumber;
const int PlayerCookReq::kQteQualityFieldNumber;
const int PlayerCookReq::kAssistAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookReq::PlayerCookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookReq)
}
PlayerCookReq::PlayerCookReq(const PlayerCookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recipe_id_, &from.recipe_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&assist_avatar_) -
    reinterpret_cast<char*>(&recipe_id_)) + sizeof(assist_avatar_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookReq)
}

void PlayerCookReq::SharedCtor() {
  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_avatar_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(assist_avatar_));
  _cached_size_ = 0;
}

PlayerCookReq::~PlayerCookReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookReq)
  SharedDtor();
}

void PlayerCookReq::SharedDtor() {
}

void PlayerCookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookReq& PlayerCookReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookReq* PlayerCookReq::New(::google::protobuf::Arena* arena) const {
  PlayerCookReq* n = new PlayerCookReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_avatar_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(assist_avatar_));
  _internal_metadata_.Clear();
}

bool PlayerCookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 recipe_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qte_quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qte_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 assist_avatar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assist_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookReq)
  return false;
#undef DO_
}

void PlayerCookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recipe_id(), output);
  }

  // uint32 qte_quality = 2;
  if (this->qte_quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->qte_quality(), output);
  }

  // uint32 assist_avatar = 3;
  if (this->assist_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->assist_avatar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookReq)
}

::google::protobuf::uint8* PlayerCookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recipe_id(), target);
  }

  // uint32 qte_quality = 2;
  if (this->qte_quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->qte_quality(), target);
  }

  // uint32 assist_avatar = 3;
  if (this->assist_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->assist_avatar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookReq)
  return target;
}

size_t PlayerCookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_id());
  }

  // uint32 qte_quality = 2;
  if (this->qte_quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qte_quality());
  }

  // uint32 assist_avatar = 3;
  if (this->assist_avatar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->assist_avatar());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookReq)
    MergeFrom(*source);
  }
}

void PlayerCookReq::MergeFrom(const PlayerCookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipe_id() != 0) {
    set_recipe_id(from.recipe_id());
  }
  if (from.qte_quality() != 0) {
    set_qte_quality(from.qte_quality());
  }
  if (from.assist_avatar() != 0) {
    set_assist_avatar(from.assist_avatar());
  }
}

void PlayerCookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookReq::CopyFrom(const PlayerCookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookReq::IsInitialized() const {
  return true;
}

void PlayerCookReq::Swap(PlayerCookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookReq::InternalSwap(PlayerCookReq* other) {
  using std::swap;
  swap(recipe_id_, other->recipe_id_);
  swap(qte_quality_, other->qte_quality_);
  swap(assist_avatar_, other->assist_avatar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookReq

// uint32 recipe_id = 1;
void PlayerCookReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.recipe_id)
  return recipe_id_;
}
void PlayerCookReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.recipe_id)
}

// uint32 qte_quality = 2;
void PlayerCookReq::clear_qte_quality() {
  qte_quality_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.qte_quality)
  return qte_quality_;
}
void PlayerCookReq::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.qte_quality)
}

// uint32 assist_avatar = 3;
void PlayerCookReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.assist_avatar)
  return assist_avatar_;
}
void PlayerCookReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.assist_avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookRsp::kRetcodeFieldNumber;
const int PlayerCookRsp::kRecipeDataFieldNumber;
const int PlayerCookRsp::kItemFieldNumber;
const int PlayerCookRsp::kQteQualityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookRsp::PlayerCookRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookRsp)
}
PlayerCookRsp::PlayerCookRsp(const PlayerCookRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_recipe_data()) {
    recipe_data_ = new ::proto::CookRecipeData(*from.recipe_data_);
  } else {
    recipe_data_ = NULL;
  }
  if (from.has_item()) {
    item_ = new ::proto::ItemParam(*from.item_);
  } else {
    item_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&qte_quality_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(qte_quality_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookRsp)
}

void PlayerCookRsp::SharedCtor() {
  ::memset(&recipe_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qte_quality_) -
      reinterpret_cast<char*>(&recipe_data_)) + sizeof(qte_quality_));
  _cached_size_ = 0;
}

PlayerCookRsp::~PlayerCookRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookRsp)
  SharedDtor();
}

void PlayerCookRsp::SharedDtor() {
  if (this != internal_default_instance()) delete recipe_data_;
  if (this != internal_default_instance()) delete item_;
}

void PlayerCookRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookRsp& PlayerCookRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookRsp* PlayerCookRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCookRsp* n = new PlayerCookRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) {
    delete recipe_data_;
  }
  recipe_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qte_quality_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(qte_quality_));
  _internal_metadata_.Clear();
}

bool PlayerCookRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CookRecipeData recipe_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recipe_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ItemParam item = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qte_quality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qte_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookRsp)
  return false;
#undef DO_
}

void PlayerCookRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // .proto.CookRecipeData recipe_data = 2;
  if (this->has_recipe_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->recipe_data_, output);
  }

  // .proto.ItemParam item = 3;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->item_, output);
  }

  // uint32 qte_quality = 4;
  if (this->qte_quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->qte_quality(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookRsp)
}

::google::protobuf::uint8* PlayerCookRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // .proto.CookRecipeData recipe_data = 2;
  if (this->has_recipe_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->recipe_data_, deterministic, target);
  }

  // .proto.ItemParam item = 3;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->item_, deterministic, target);
  }

  // uint32 qte_quality = 4;
  if (this->qte_quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->qte_quality(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookRsp)
  return target;
}

size_t PlayerCookRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CookRecipeData recipe_data = 2;
  if (this->has_recipe_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->recipe_data_);
  }

  // .proto.ItemParam item = 3;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->item_);
  }

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 qte_quality = 4;
  if (this->qte_quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qte_quality());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookRsp)
    MergeFrom(*source);
  }
}

void PlayerCookRsp::MergeFrom(const PlayerCookRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recipe_data()) {
    mutable_recipe_data()->::proto::CookRecipeData::MergeFrom(from.recipe_data());
  }
  if (from.has_item()) {
    mutable_item()->::proto::ItemParam::MergeFrom(from.item());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.qte_quality() != 0) {
    set_qte_quality(from.qte_quality());
  }
}

void PlayerCookRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookRsp::CopyFrom(const PlayerCookRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookRsp::IsInitialized() const {
  return true;
}

void PlayerCookRsp::Swap(PlayerCookRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookRsp::InternalSwap(PlayerCookRsp* other) {
  using std::swap;
  swap(recipe_data_, other->recipe_data_);
  swap(item_, other->item_);
  swap(retcode_, other->retcode_);
  swap(qte_quality_, other->qte_quality_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookRsp

// uint32 retcode = 1;
void PlayerCookRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 PlayerCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.retcode)
  return retcode_;
}
void PlayerCookRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.retcode)
}

// .proto.CookRecipeData recipe_data = 2;
bool PlayerCookRsp::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
void PlayerCookRsp::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
const ::proto::CookRecipeData& PlayerCookRsp::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
::proto::CookRecipeData* PlayerCookRsp::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.recipe_data)
  return recipe_data_;
}
::proto::CookRecipeData* PlayerCookRsp::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCookRsp.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
void PlayerCookRsp::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCookRsp.recipe_data)
}

// .proto.ItemParam item = 3;
bool PlayerCookRsp::has_item() const {
  return this != internal_default_instance() && item_ != NULL;
}
void PlayerCookRsp::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) delete item_;
  item_ = NULL;
}
const ::proto::ItemParam& PlayerCookRsp::item() const {
  const ::proto::ItemParam* p = item_;
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.item)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ItemParam*>(
      &::proto::_ItemParam_default_instance_);
}
::proto::ItemParam* PlayerCookRsp::mutable_item() {
  
  if (item_ == NULL) {
    item_ = new ::proto::ItemParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.item)
  return item_;
}
::proto::ItemParam* PlayerCookRsp::release_item() {
  // @@protoc_insertion_point(field_release:proto.PlayerCookRsp.item)
  
  ::proto::ItemParam* temp = item_;
  item_ = NULL;
  return temp;
}
void PlayerCookRsp::set_allocated_item(::proto::ItemParam* item) {
  delete item_;
  item_ = item;
  if (item) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCookRsp.item)
}

// uint32 qte_quality = 4;
void PlayerCookRsp::clear_qte_quality() {
  qte_quality_ = 0u;
}
::google::protobuf::uint32 PlayerCookRsp::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.qte_quality)
  return qte_quality_;
}
void PlayerCookRsp::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.qte_quality)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRandomCookReq::kMaterialListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRandomCookReq::PlayerRandomCookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerRandomCookReq)
}
PlayerRandomCookReq::PlayerRandomCookReq(const PlayerRandomCookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      material_list_(from.material_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerRandomCookReq)
}

void PlayerRandomCookReq::SharedCtor() {
  _cached_size_ = 0;
}

PlayerRandomCookReq::~PlayerRandomCookReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerRandomCookReq)
  SharedDtor();
}

void PlayerRandomCookReq::SharedDtor() {
}

void PlayerRandomCookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRandomCookReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRandomCookReq& PlayerRandomCookReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerRandomCookReq* PlayerRandomCookReq::New(::google::protobuf::Arena* arena) const {
  PlayerRandomCookReq* n = new PlayerRandomCookReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRandomCookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerRandomCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerRandomCookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerRandomCookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ItemParam material_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_material_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerRandomCookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerRandomCookReq)
  return false;
#undef DO_
}

void PlayerRandomCookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerRandomCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam material_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->material_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->material_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerRandomCookReq)
}

::google::protobuf::uint8* PlayerRandomCookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerRandomCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam material_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->material_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->material_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerRandomCookReq)
  return target;
}

size_t PlayerRandomCookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerRandomCookReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam material_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->material_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->material_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRandomCookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerRandomCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRandomCookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRandomCookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerRandomCookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerRandomCookReq)
    MergeFrom(*source);
  }
}

void PlayerRandomCookReq::MergeFrom(const PlayerRandomCookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerRandomCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  material_list_.MergeFrom(from.material_list_);
}

void PlayerRandomCookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerRandomCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRandomCookReq::CopyFrom(const PlayerRandomCookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerRandomCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRandomCookReq::IsInitialized() const {
  return true;
}

void PlayerRandomCookReq::Swap(PlayerRandomCookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRandomCookReq::InternalSwap(PlayerRandomCookReq* other) {
  using std::swap;
  material_list_.InternalSwap(&other->material_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRandomCookReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRandomCookReq

// repeated .proto.ItemParam material_list = 1;
int PlayerRandomCookReq::material_list_size() const {
  return material_list_.size();
}
void PlayerRandomCookReq::clear_material_list() {
  material_list_.Clear();
}
const ::proto::ItemParam& PlayerRandomCookReq::material_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookReq.material_list)
  return material_list_.Get(index);
}
::proto::ItemParam* PlayerRandomCookReq::mutable_material_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerRandomCookReq.material_list)
  return material_list_.Mutable(index);
}
::proto::ItemParam* PlayerRandomCookReq::add_material_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerRandomCookReq.material_list)
  return material_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerRandomCookReq::mutable_material_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerRandomCookReq.material_list)
  return &material_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerRandomCookReq::material_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerRandomCookReq.material_list)
  return material_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRandomCookRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRandomCookRsp::PlayerRandomCookRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerRandomCookRsp)
}
PlayerRandomCookRsp::PlayerRandomCookRsp(const PlayerRandomCookRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerRandomCookRsp)
}

void PlayerRandomCookRsp::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

PlayerRandomCookRsp::~PlayerRandomCookRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerRandomCookRsp)
  SharedDtor();
}

void PlayerRandomCookRsp::SharedDtor() {
}

void PlayerRandomCookRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRandomCookRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRandomCookRsp& PlayerRandomCookRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerRandomCookRsp* PlayerRandomCookRsp::New(::google::protobuf::Arena* arena) const {
  PlayerRandomCookRsp* n = new PlayerRandomCookRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRandomCookRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerRandomCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerRandomCookRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerRandomCookRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerRandomCookRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerRandomCookRsp)
  return false;
#undef DO_
}

void PlayerRandomCookRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerRandomCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerRandomCookRsp)
}

::google::protobuf::uint8* PlayerRandomCookRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerRandomCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerRandomCookRsp)
  return target;
}

size_t PlayerRandomCookRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerRandomCookRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRandomCookRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerRandomCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRandomCookRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRandomCookRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerRandomCookRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerRandomCookRsp)
    MergeFrom(*source);
  }
}

void PlayerRandomCookRsp::MergeFrom(const PlayerRandomCookRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerRandomCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerRandomCookRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerRandomCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRandomCookRsp::CopyFrom(const PlayerRandomCookRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerRandomCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRandomCookRsp::IsInitialized() const {
  return true;
}

void PlayerRandomCookRsp::Swap(PlayerRandomCookRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRandomCookRsp::InternalSwap(PlayerRandomCookRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRandomCookRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRandomCookRsp

// uint32 retcode = 1;
void PlayerRandomCookRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 PlayerRandomCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookRsp.retcode)
  return retcode_;
}
void PlayerRandomCookRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRandomCookRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookRecipeData::kRecipeIdFieldNumber;
const int CookRecipeData::kProficiencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookRecipeData::CookRecipeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookRecipeData)
}
CookRecipeData::CookRecipeData(const CookRecipeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recipe_id_, &from.recipe_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&proficiency_) -
    reinterpret_cast<char*>(&recipe_id_)) + sizeof(proficiency_));
  // @@protoc_insertion_point(copy_constructor:proto.CookRecipeData)
}

void CookRecipeData::SharedCtor() {
  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proficiency_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(proficiency_));
  _cached_size_ = 0;
}

CookRecipeData::~CookRecipeData() {
  // @@protoc_insertion_point(destructor:proto.CookRecipeData)
  SharedDtor();
}

void CookRecipeData::SharedDtor() {
}

void CookRecipeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookRecipeData::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookRecipeData& CookRecipeData::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookRecipeData* CookRecipeData::New(::google::protobuf::Arena* arena) const {
  CookRecipeData* n = new CookRecipeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookRecipeData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookRecipeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proficiency_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(proficiency_));
  _internal_metadata_.Clear();
}

bool CookRecipeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookRecipeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 recipe_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 proficiency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proficiency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookRecipeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookRecipeData)
  return false;
#undef DO_
}

void CookRecipeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookRecipeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recipe_id(), output);
  }

  // uint32 proficiency = 2;
  if (this->proficiency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->proficiency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookRecipeData)
}

::google::protobuf::uint8* CookRecipeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookRecipeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recipe_id(), target);
  }

  // uint32 proficiency = 2;
  if (this->proficiency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->proficiency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookRecipeData)
  return target;
}

size_t CookRecipeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookRecipeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_id());
  }

  // uint32 proficiency = 2;
  if (this->proficiency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proficiency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookRecipeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookRecipeData)
  GOOGLE_DCHECK_NE(&from, this);
  const CookRecipeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookRecipeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookRecipeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookRecipeData)
    MergeFrom(*source);
  }
}

void CookRecipeData::MergeFrom(const CookRecipeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookRecipeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipe_id() != 0) {
    set_recipe_id(from.recipe_id());
  }
  if (from.proficiency() != 0) {
    set_proficiency(from.proficiency());
  }
}

void CookRecipeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookRecipeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookRecipeData::CopyFrom(const CookRecipeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookRecipeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookRecipeData::IsInitialized() const {
  return true;
}

void CookRecipeData::Swap(CookRecipeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookRecipeData::InternalSwap(CookRecipeData* other) {
  using std::swap;
  swap(recipe_id_, other->recipe_id_);
  swap(proficiency_, other->proficiency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookRecipeData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookRecipeData

// uint32 recipe_id = 1;
void CookRecipeData::clear_recipe_id() {
  recipe_id_ = 0u;
}
::google::protobuf::uint32 CookRecipeData::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.recipe_id)
  return recipe_id_;
}
void CookRecipeData::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.recipe_id)
}

// uint32 proficiency = 2;
void CookRecipeData::clear_proficiency() {
  proficiency_ = 0u;
}
::google::protobuf::uint32 CookRecipeData::proficiency() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.proficiency)
  return proficiency_;
}
void CookRecipeData::set_proficiency(::google::protobuf::uint32 value) {
  
  proficiency_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.proficiency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookDataNotify::kGradeFieldNumber;
const int CookDataNotify::kRecipeDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookDataNotify::CookDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookDataNotify)
}
CookDataNotify::CookDataNotify(const CookDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recipe_data_list_(from.recipe_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grade_ = from.grade_;
  // @@protoc_insertion_point(copy_constructor:proto.CookDataNotify)
}

void CookDataNotify::SharedCtor() {
  grade_ = 0u;
  _cached_size_ = 0;
}

CookDataNotify::~CookDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CookDataNotify)
  SharedDtor();
}

void CookDataNotify::SharedDtor() {
}

void CookDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookDataNotify& CookDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookDataNotify* CookDataNotify::New(::google::protobuf::Arena* arena) const {
  CookDataNotify* n = new CookDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipe_data_list_.Clear();
  grade_ = 0u;
  _internal_metadata_.Clear();
}

bool CookDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 grade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CookRecipeData recipe_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recipe_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookDataNotify)
  return false;
#undef DO_
}

void CookDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grade = 1;
  if (this->grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }

  // repeated .proto.CookRecipeData recipe_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recipe_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->recipe_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookDataNotify)
}

::google::protobuf::uint8* CookDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grade = 1;
  if (this->grade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }

  // repeated .proto.CookRecipeData recipe_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recipe_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->recipe_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookDataNotify)
  return target;
}

size_t CookDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CookRecipeData recipe_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->recipe_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recipe_data_list(static_cast<int>(i)));
    }
  }

  // uint32 grade = 1;
  if (this->grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CookDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookDataNotify)
    MergeFrom(*source);
  }
}

void CookDataNotify::MergeFrom(const CookDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recipe_data_list_.MergeFrom(from.recipe_data_list_);
  if (from.grade() != 0) {
    set_grade(from.grade());
  }
}

void CookDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookDataNotify::CopyFrom(const CookDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookDataNotify::IsInitialized() const {
  return true;
}

void CookDataNotify::Swap(CookDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookDataNotify::InternalSwap(CookDataNotify* other) {
  using std::swap;
  recipe_data_list_.InternalSwap(&other->recipe_data_list_);
  swap(grade_, other->grade_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookDataNotify

// uint32 grade = 1;
void CookDataNotify::clear_grade() {
  grade_ = 0u;
}
::google::protobuf::uint32 CookDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.grade)
  return grade_;
}
void CookDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookDataNotify.grade)
}

// repeated .proto.CookRecipeData recipe_data_list = 2;
int CookDataNotify::recipe_data_list_size() const {
  return recipe_data_list_.size();
}
void CookDataNotify::clear_recipe_data_list() {
  recipe_data_list_.Clear();
}
const ::proto::CookRecipeData& CookDataNotify::recipe_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Get(index);
}
::proto::CookRecipeData* CookDataNotify::mutable_recipe_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Mutable(index);
}
::proto::CookRecipeData* CookDataNotify::add_recipe_data_list() {
  // @@protoc_insertion_point(field_add:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >*
CookDataNotify::mutable_recipe_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CookDataNotify.recipe_data_list)
  return &recipe_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >&
CookDataNotify::recipe_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookRecipeDataNotify::kRecipeDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookRecipeDataNotify::CookRecipeDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookRecipeDataNotify)
}
CookRecipeDataNotify::CookRecipeDataNotify(const CookRecipeDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_recipe_data()) {
    recipe_data_ = new ::proto::CookRecipeData(*from.recipe_data_);
  } else {
    recipe_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.CookRecipeDataNotify)
}

void CookRecipeDataNotify::SharedCtor() {
  recipe_data_ = NULL;
  _cached_size_ = 0;
}

CookRecipeDataNotify::~CookRecipeDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CookRecipeDataNotify)
  SharedDtor();
}

void CookRecipeDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete recipe_data_;
}

void CookRecipeDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookRecipeDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookRecipeDataNotify& CookRecipeDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookRecipeDataNotify* CookRecipeDataNotify::New(::google::protobuf::Arena* arena) const {
  CookRecipeDataNotify* n = new CookRecipeDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookRecipeDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookRecipeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) {
    delete recipe_data_;
  }
  recipe_data_ = NULL;
  _internal_metadata_.Clear();
}

bool CookRecipeDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookRecipeDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CookRecipeData recipe_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recipe_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookRecipeDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookRecipeDataNotify)
  return false;
#undef DO_
}

void CookRecipeDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookRecipeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CookRecipeData recipe_data = 1;
  if (this->has_recipe_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->recipe_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookRecipeDataNotify)
}

::google::protobuf::uint8* CookRecipeDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookRecipeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CookRecipeData recipe_data = 1;
  if (this->has_recipe_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->recipe_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookRecipeDataNotify)
  return target;
}

size_t CookRecipeDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookRecipeDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CookRecipeData recipe_data = 1;
  if (this->has_recipe_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->recipe_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookRecipeDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookRecipeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CookRecipeDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookRecipeDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookRecipeDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookRecipeDataNotify)
    MergeFrom(*source);
  }
}

void CookRecipeDataNotify::MergeFrom(const CookRecipeDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookRecipeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recipe_data()) {
    mutable_recipe_data()->::proto::CookRecipeData::MergeFrom(from.recipe_data());
  }
}

void CookRecipeDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookRecipeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookRecipeDataNotify::CopyFrom(const CookRecipeDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookRecipeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookRecipeDataNotify::IsInitialized() const {
  return true;
}

void CookRecipeDataNotify::Swap(CookRecipeDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookRecipeDataNotify::InternalSwap(CookRecipeDataNotify* other) {
  using std::swap;
  swap(recipe_data_, other->recipe_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookRecipeDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookRecipeDataNotify

// .proto.CookRecipeData recipe_data = 1;
bool CookRecipeDataNotify::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
void CookRecipeDataNotify::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
const ::proto::CookRecipeData& CookRecipeDataNotify::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.CookRecipeDataNotify.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
::proto::CookRecipeData* CookRecipeDataNotify::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CookRecipeDataNotify.recipe_data)
  return recipe_data_;
}
::proto::CookRecipeData* CookRecipeDataNotify::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.CookRecipeDataNotify.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
void CookRecipeDataNotify::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CookRecipeDataNotify.recipe_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookGradeDataNotify::kGradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookGradeDataNotify::CookGradeDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookGradeDataNotify)
}
CookGradeDataNotify::CookGradeDataNotify(const CookGradeDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grade_ = from.grade_;
  // @@protoc_insertion_point(copy_constructor:proto.CookGradeDataNotify)
}

void CookGradeDataNotify::SharedCtor() {
  grade_ = 0u;
  _cached_size_ = 0;
}

CookGradeDataNotify::~CookGradeDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CookGradeDataNotify)
  SharedDtor();
}

void CookGradeDataNotify::SharedDtor() {
}

void CookGradeDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookGradeDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookGradeDataNotify& CookGradeDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookGradeDataNotify* CookGradeDataNotify::New(::google::protobuf::Arena* arena) const {
  CookGradeDataNotify* n = new CookGradeDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookGradeDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookGradeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grade_ = 0u;
  _internal_metadata_.Clear();
}

bool CookGradeDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookGradeDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 grade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookGradeDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookGradeDataNotify)
  return false;
#undef DO_
}

void CookGradeDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookGradeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grade = 1;
  if (this->grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grade(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookGradeDataNotify)
}

::google::protobuf::uint8* CookGradeDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookGradeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grade = 1;
  if (this->grade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grade(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookGradeDataNotify)
  return target;
}

size_t CookGradeDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookGradeDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 grade = 1;
  if (this->grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookGradeDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookGradeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CookGradeDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookGradeDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookGradeDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookGradeDataNotify)
    MergeFrom(*source);
  }
}

void CookGradeDataNotify::MergeFrom(const CookGradeDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookGradeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grade() != 0) {
    set_grade(from.grade());
  }
}

void CookGradeDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookGradeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookGradeDataNotify::CopyFrom(const CookGradeDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookGradeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookGradeDataNotify::IsInitialized() const {
  return true;
}

void CookGradeDataNotify::Swap(CookGradeDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookGradeDataNotify::InternalSwap(CookGradeDataNotify* other) {
  using std::swap;
  swap(grade_, other->grade_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookGradeDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookGradeDataNotify

// uint32 grade = 1;
void CookGradeDataNotify::clear_grade() {
  grade_ = 0u;
}
::google::protobuf::uint32 CookGradeDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookGradeDataNotify.grade)
  return grade_;
}
void CookGradeDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookGradeDataNotify.grade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCompoundMaterialReq::kCompoundIdFieldNumber;
const int PlayerCompoundMaterialReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCompoundMaterialReq::PlayerCompoundMaterialReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCompoundMaterialReq)
}
PlayerCompoundMaterialReq::PlayerCompoundMaterialReq(const PlayerCompoundMaterialReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&compound_id_, &from.compound_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&compound_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCompoundMaterialReq)
}

void PlayerCompoundMaterialReq::SharedCtor() {
  ::memset(&compound_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&compound_id_)) + sizeof(count_));
  _cached_size_ = 0;
}

PlayerCompoundMaterialReq::~PlayerCompoundMaterialReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCompoundMaterialReq)
  SharedDtor();
}

void PlayerCompoundMaterialReq::SharedDtor() {
}

void PlayerCompoundMaterialReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCompoundMaterialReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCompoundMaterialReq& PlayerCompoundMaterialReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCompoundMaterialReq* PlayerCompoundMaterialReq::New(::google::protobuf::Arena* arena) const {
  PlayerCompoundMaterialReq* n = new PlayerCompoundMaterialReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCompoundMaterialReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCompoundMaterialReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&compound_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&compound_id_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool PlayerCompoundMaterialReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCompoundMaterialReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compound_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCompoundMaterialReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCompoundMaterialReq)
  return false;
#undef DO_
}

void PlayerCompoundMaterialReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCompoundMaterialReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compound_id(), output);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCompoundMaterialReq)
}

::google::protobuf::uint8* PlayerCompoundMaterialReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCompoundMaterialReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compound_id(), target);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCompoundMaterialReq)
  return target;
}

size_t PlayerCompoundMaterialReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCompoundMaterialReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCompoundMaterialReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCompoundMaterialReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCompoundMaterialReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCompoundMaterialReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCompoundMaterialReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCompoundMaterialReq)
    MergeFrom(*source);
  }
}

void PlayerCompoundMaterialReq::MergeFrom(const PlayerCompoundMaterialReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCompoundMaterialReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PlayerCompoundMaterialReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCompoundMaterialReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCompoundMaterialReq::CopyFrom(const PlayerCompoundMaterialReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCompoundMaterialReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCompoundMaterialReq::IsInitialized() const {
  return true;
}

void PlayerCompoundMaterialReq::Swap(PlayerCompoundMaterialReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCompoundMaterialReq::InternalSwap(PlayerCompoundMaterialReq* other) {
  using std::swap;
  swap(compound_id_, other->compound_id_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCompoundMaterialReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCompoundMaterialReq

// uint32 compound_id = 1;
void PlayerCompoundMaterialReq::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.compound_id)
  return compound_id_;
}
void PlayerCompoundMaterialReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.compound_id)
}

// uint32 count = 2;
void PlayerCompoundMaterialReq::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialReq::count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.count)
  return count_;
}
void PlayerCompoundMaterialReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompoundQueueData::kCompoundIdFieldNumber;
const int CompoundQueueData::kOutputCountFieldNumber;
const int CompoundQueueData::kWaitCountFieldNumber;
const int CompoundQueueData::kOutputTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompoundQueueData::CompoundQueueData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CompoundQueueData)
}
CompoundQueueData::CompoundQueueData(const CompoundQueueData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&compound_id_, &from.compound_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_time_) -
    reinterpret_cast<char*>(&compound_id_)) + sizeof(output_time_));
  // @@protoc_insertion_point(copy_constructor:proto.CompoundQueueData)
}

void CompoundQueueData::SharedCtor() {
  ::memset(&compound_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_time_) -
      reinterpret_cast<char*>(&compound_id_)) + sizeof(output_time_));
  _cached_size_ = 0;
}

CompoundQueueData::~CompoundQueueData() {
  // @@protoc_insertion_point(destructor:proto.CompoundQueueData)
  SharedDtor();
}

void CompoundQueueData::SharedDtor() {
}

void CompoundQueueData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompoundQueueData::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompoundQueueData& CompoundQueueData::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompoundQueueData* CompoundQueueData::New(::google::protobuf::Arena* arena) const {
  CompoundQueueData* n = new CompoundQueueData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompoundQueueData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CompoundQueueData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&compound_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_time_) -
      reinterpret_cast<char*>(&compound_id_)) + sizeof(output_time_));
  _internal_metadata_.Clear();
}

bool CompoundQueueData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CompoundQueueData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compound_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 output_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &output_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wait_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wait_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 output_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &output_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CompoundQueueData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CompoundQueueData)
  return false;
#undef DO_
}

void CompoundQueueData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CompoundQueueData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compound_id(), output);
  }

  // uint32 output_count = 2;
  if (this->output_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->output_count(), output);
  }

  // uint32 wait_count = 3;
  if (this->wait_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->wait_count(), output);
  }

  // uint32 output_time = 4;
  if (this->output_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->output_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CompoundQueueData)
}

::google::protobuf::uint8* CompoundQueueData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CompoundQueueData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compound_id(), target);
  }

  // uint32 output_count = 2;
  if (this->output_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->output_count(), target);
  }

  // uint32 wait_count = 3;
  if (this->wait_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->wait_count(), target);
  }

  // uint32 output_time = 4;
  if (this->output_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->output_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CompoundQueueData)
  return target;
}

size_t CompoundQueueData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CompoundQueueData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  // uint32 output_count = 2;
  if (this->output_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->output_count());
  }

  // uint32 wait_count = 3;
  if (this->wait_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wait_count());
  }

  // uint32 output_time = 4;
  if (this->output_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->output_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompoundQueueData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CompoundQueueData)
  GOOGLE_DCHECK_NE(&from, this);
  const CompoundQueueData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompoundQueueData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CompoundQueueData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CompoundQueueData)
    MergeFrom(*source);
  }
}

void CompoundQueueData::MergeFrom(const CompoundQueueData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CompoundQueueData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
  if (from.output_count() != 0) {
    set_output_count(from.output_count());
  }
  if (from.wait_count() != 0) {
    set_wait_count(from.wait_count());
  }
  if (from.output_time() != 0) {
    set_output_time(from.output_time());
  }
}

void CompoundQueueData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CompoundQueueData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompoundQueueData::CopyFrom(const CompoundQueueData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CompoundQueueData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompoundQueueData::IsInitialized() const {
  return true;
}

void CompoundQueueData::Swap(CompoundQueueData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompoundQueueData::InternalSwap(CompoundQueueData* other) {
  using std::swap;
  swap(compound_id_, other->compound_id_);
  swap(output_count_, other->output_count_);
  swap(wait_count_, other->wait_count_);
  swap(output_time_, other->output_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompoundQueueData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompoundQueueData

// uint32 compound_id = 1;
void CompoundQueueData::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.compound_id)
  return compound_id_;
}
void CompoundQueueData::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.compound_id)
}

// uint32 output_count = 2;
void CompoundQueueData::clear_output_count() {
  output_count_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::output_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_count)
  return output_count_;
}
void CompoundQueueData::set_output_count(::google::protobuf::uint32 value) {
  
  output_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_count)
}

// uint32 wait_count = 3;
void CompoundQueueData::clear_wait_count() {
  wait_count_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::wait_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.wait_count)
  return wait_count_;
}
void CompoundQueueData::set_wait_count(::google::protobuf::uint32 value) {
  
  wait_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.wait_count)
}

// uint32 output_time = 4;
void CompoundQueueData::clear_output_time() {
  output_time_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::output_time() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_time)
  return output_time_;
}
void CompoundQueueData::set_output_time(::google::protobuf::uint32 value) {
  
  output_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCompoundMaterialRsp::kRetcodeFieldNumber;
const int PlayerCompoundMaterialRsp::kCompoundQueDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCompoundMaterialRsp::PlayerCompoundMaterialRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCompoundMaterialRsp)
}
PlayerCompoundMaterialRsp::PlayerCompoundMaterialRsp(const PlayerCompoundMaterialRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_compound_que_data()) {
    compound_que_data_ = new ::proto::CompoundQueueData(*from.compound_que_data_);
  } else {
    compound_que_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCompoundMaterialRsp)
}

void PlayerCompoundMaterialRsp::SharedCtor() {
  ::memset(&compound_que_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&compound_que_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

PlayerCompoundMaterialRsp::~PlayerCompoundMaterialRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCompoundMaterialRsp)
  SharedDtor();
}

void PlayerCompoundMaterialRsp::SharedDtor() {
  if (this != internal_default_instance()) delete compound_que_data_;
}

void PlayerCompoundMaterialRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCompoundMaterialRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCompoundMaterialRsp& PlayerCompoundMaterialRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCompoundMaterialRsp* PlayerCompoundMaterialRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCompoundMaterialRsp* n = new PlayerCompoundMaterialRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCompoundMaterialRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCompoundMaterialRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && compound_que_data_ != NULL) {
    delete compound_que_data_;
  }
  compound_que_data_ = NULL;
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerCompoundMaterialRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCompoundMaterialRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CompoundQueueData compound_que_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compound_que_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCompoundMaterialRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCompoundMaterialRsp)
  return false;
#undef DO_
}

void PlayerCompoundMaterialRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCompoundMaterialRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // .proto.CompoundQueueData compound_que_data = 2;
  if (this->has_compound_que_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->compound_que_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCompoundMaterialRsp)
}

::google::protobuf::uint8* PlayerCompoundMaterialRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCompoundMaterialRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // .proto.CompoundQueueData compound_que_data = 2;
  if (this->has_compound_que_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->compound_que_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCompoundMaterialRsp)
  return target;
}

size_t PlayerCompoundMaterialRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCompoundMaterialRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CompoundQueueData compound_que_data = 2;
  if (this->has_compound_que_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->compound_que_data_);
  }

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCompoundMaterialRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCompoundMaterialRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCompoundMaterialRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCompoundMaterialRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCompoundMaterialRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCompoundMaterialRsp)
    MergeFrom(*source);
  }
}

void PlayerCompoundMaterialRsp::MergeFrom(const PlayerCompoundMaterialRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCompoundMaterialRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_compound_que_data()) {
    mutable_compound_que_data()->::proto::CompoundQueueData::MergeFrom(from.compound_que_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerCompoundMaterialRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCompoundMaterialRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCompoundMaterialRsp::CopyFrom(const PlayerCompoundMaterialRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCompoundMaterialRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCompoundMaterialRsp::IsInitialized() const {
  return true;
}

void PlayerCompoundMaterialRsp::Swap(PlayerCompoundMaterialRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCompoundMaterialRsp::InternalSwap(PlayerCompoundMaterialRsp* other) {
  using std::swap;
  swap(compound_que_data_, other->compound_que_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCompoundMaterialRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCompoundMaterialRsp

// uint32 retcode = 1;
void PlayerCompoundMaterialRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.retcode)
  return retcode_;
}
void PlayerCompoundMaterialRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialRsp.retcode)
}

// .proto.CompoundQueueData compound_que_data = 2;
bool PlayerCompoundMaterialRsp::has_compound_que_data() const {
  return this != internal_default_instance() && compound_que_data_ != NULL;
}
void PlayerCompoundMaterialRsp::clear_compound_que_data() {
  if (GetArenaNoVirtual() == NULL && compound_que_data_ != NULL) delete compound_que_data_;
  compound_que_data_ = NULL;
}
const ::proto::CompoundQueueData& PlayerCompoundMaterialRsp::compound_que_data() const {
  const ::proto::CompoundQueueData* p = compound_que_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CompoundQueueData*>(
      &::proto::_CompoundQueueData_default_instance_);
}
::proto::CompoundQueueData* PlayerCompoundMaterialRsp::mutable_compound_que_data() {
  
  if (compound_que_data_ == NULL) {
    compound_que_data_ = new ::proto::CompoundQueueData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return compound_que_data_;
}
::proto::CompoundQueueData* PlayerCompoundMaterialRsp::release_compound_que_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCompoundMaterialRsp.compound_que_data)
  
  ::proto::CompoundQueueData* temp = compound_que_data_;
  compound_que_data_ = NULL;
  return temp;
}
void PlayerCompoundMaterialRsp::set_allocated_compound_que_data(::proto::CompoundQueueData* compound_que_data) {
  delete compound_que_data_;
  compound_que_data_ = compound_que_data;
  if (compound_que_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCompoundMaterialRsp.compound_que_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeCompoundOutputReq::kCompoundIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeCompoundOutputReq::TakeCompoundOutputReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeCompoundOutputReq)
}
TakeCompoundOutputReq::TakeCompoundOutputReq(const TakeCompoundOutputReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compound_id_ = from.compound_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeCompoundOutputReq)
}

void TakeCompoundOutputReq::SharedCtor() {
  compound_id_ = 0u;
  _cached_size_ = 0;
}

TakeCompoundOutputReq::~TakeCompoundOutputReq() {
  // @@protoc_insertion_point(destructor:proto.TakeCompoundOutputReq)
  SharedDtor();
}

void TakeCompoundOutputReq::SharedDtor() {
}

void TakeCompoundOutputReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeCompoundOutputReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeCompoundOutputReq& TakeCompoundOutputReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeCompoundOutputReq* TakeCompoundOutputReq::New(::google::protobuf::Arena* arena) const {
  TakeCompoundOutputReq* n = new TakeCompoundOutputReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeCompoundOutputReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeCompoundOutputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compound_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TakeCompoundOutputReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeCompoundOutputReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compound_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeCompoundOutputReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeCompoundOutputReq)
  return false;
#undef DO_
}

void TakeCompoundOutputReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeCompoundOutputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compound_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeCompoundOutputReq)
}

::google::protobuf::uint8* TakeCompoundOutputReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeCompoundOutputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compound_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeCompoundOutputReq)
  return target;
}

size_t TakeCompoundOutputReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeCompoundOutputReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compound_id = 1;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeCompoundOutputReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeCompoundOutputReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeCompoundOutputReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeCompoundOutputReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeCompoundOutputReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeCompoundOutputReq)
    MergeFrom(*source);
  }
}

void TakeCompoundOutputReq::MergeFrom(const TakeCompoundOutputReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeCompoundOutputReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
}

void TakeCompoundOutputReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeCompoundOutputReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeCompoundOutputReq::CopyFrom(const TakeCompoundOutputReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeCompoundOutputReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeCompoundOutputReq::IsInitialized() const {
  return true;
}

void TakeCompoundOutputReq::Swap(TakeCompoundOutputReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeCompoundOutputReq::InternalSwap(TakeCompoundOutputReq* other) {
  using std::swap;
  swap(compound_id_, other->compound_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeCompoundOutputReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeCompoundOutputReq

// uint32 compound_id = 1;
void TakeCompoundOutputReq::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 TakeCompoundOutputReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputReq.compound_id)
  return compound_id_;
}
void TakeCompoundOutputReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputReq.compound_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeCompoundOutputRsp::kRetcodeFieldNumber;
const int TakeCompoundOutputRsp::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeCompoundOutputRsp::TakeCompoundOutputRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeCompoundOutputRsp)
}
TakeCompoundOutputRsp::TakeCompoundOutputRsp(const TakeCompoundOutputRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeCompoundOutputRsp)
}

void TakeCompoundOutputRsp::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

TakeCompoundOutputRsp::~TakeCompoundOutputRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeCompoundOutputRsp)
  SharedDtor();
}

void TakeCompoundOutputRsp::SharedDtor() {
}

void TakeCompoundOutputRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeCompoundOutputRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeCompoundOutputRsp& TakeCompoundOutputRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeCompoundOutputRsp* TakeCompoundOutputRsp::New(::google::protobuf::Arena* arena) const {
  TakeCompoundOutputRsp* n = new TakeCompoundOutputRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeCompoundOutputRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeCompoundOutputRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool TakeCompoundOutputRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeCompoundOutputRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeCompoundOutputRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeCompoundOutputRsp)
  return false;
#undef DO_
}

void TakeCompoundOutputRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeCompoundOutputRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // repeated .proto.ItemParam item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeCompoundOutputRsp)
}

::google::protobuf::uint8* TakeCompoundOutputRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeCompoundOutputRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.ItemParam item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeCompoundOutputRsp)
  return target;
}

size_t TakeCompoundOutputRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeCompoundOutputRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeCompoundOutputRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeCompoundOutputRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeCompoundOutputRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeCompoundOutputRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeCompoundOutputRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeCompoundOutputRsp)
    MergeFrom(*source);
  }
}

void TakeCompoundOutputRsp::MergeFrom(const TakeCompoundOutputRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeCompoundOutputRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TakeCompoundOutputRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeCompoundOutputRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeCompoundOutputRsp::CopyFrom(const TakeCompoundOutputRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeCompoundOutputRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeCompoundOutputRsp::IsInitialized() const {
  return true;
}

void TakeCompoundOutputRsp::Swap(TakeCompoundOutputRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeCompoundOutputRsp::InternalSwap(TakeCompoundOutputRsp* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeCompoundOutputRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeCompoundOutputRsp

// uint32 retcode = 1;
void TakeCompoundOutputRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 TakeCompoundOutputRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.retcode)
  return retcode_;
}
void TakeCompoundOutputRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputRsp.retcode)
}

// repeated .proto.ItemParam item_list = 2;
int TakeCompoundOutputRsp::item_list_size() const {
  return item_list_.size();
}
void TakeCompoundOutputRsp::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& TakeCompoundOutputRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* TakeCompoundOutputRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* TakeCompoundOutputRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeCompoundOutputRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeCompoundOutputRsp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeCompoundOutputRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeCompoundOutputRsp.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompoundDataNotify::kUnlockCompoundListFieldNumber;
const int CompoundDataNotify::kCompoundQueDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompoundDataNotify::CompoundDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CompoundDataNotify)
}
CompoundDataNotify::CompoundDataNotify(const CompoundDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlock_compound_list_(from.unlock_compound_list_),
      compound_que_data_list_(from.compound_que_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CompoundDataNotify)
}

void CompoundDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

CompoundDataNotify::~CompoundDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CompoundDataNotify)
  SharedDtor();
}

void CompoundDataNotify::SharedDtor() {
}

void CompoundDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompoundDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompoundDataNotify& CompoundDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompoundDataNotify* CompoundDataNotify::New(::google::protobuf::Arena* arena) const {
  CompoundDataNotify* n = new CompoundDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompoundDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CompoundDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlock_compound_list_.Clear();
  compound_que_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool CompoundDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CompoundDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 unlock_compound_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlock_compound_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_unlock_compound_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CompoundQueueData compound_que_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_compound_que_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CompoundDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CompoundDataNotify)
  return false;
#undef DO_
}

void CompoundDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CompoundDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlock_compound_list = 1;
  if (this->unlock_compound_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlock_compound_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlock_compound_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlock_compound_list(i), output);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compound_que_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CompoundDataNotify)
}

::google::protobuf::uint8* CompoundDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CompoundDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlock_compound_list = 1;
  if (this->unlock_compound_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlock_compound_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlock_compound_list_, target);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->compound_que_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CompoundDataNotify)
  return target;
}

size_t CompoundDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CompoundDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlock_compound_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlock_compound_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlock_compound_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->compound_que_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compound_que_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompoundDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CompoundDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CompoundDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompoundDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CompoundDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CompoundDataNotify)
    MergeFrom(*source);
  }
}

void CompoundDataNotify::MergeFrom(const CompoundDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CompoundDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlock_compound_list_.MergeFrom(from.unlock_compound_list_);
  compound_que_data_list_.MergeFrom(from.compound_que_data_list_);
}

void CompoundDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CompoundDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompoundDataNotify::CopyFrom(const CompoundDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CompoundDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompoundDataNotify::IsInitialized() const {
  return true;
}

void CompoundDataNotify::Swap(CompoundDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompoundDataNotify::InternalSwap(CompoundDataNotify* other) {
  using std::swap;
  unlock_compound_list_.InternalSwap(&other->unlock_compound_list_);
  compound_que_data_list_.InternalSwap(&other->compound_que_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompoundDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompoundDataNotify

// repeated uint32 unlock_compound_list = 1;
int CompoundDataNotify::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
void CompoundDataNotify::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
::google::protobuf::uint32 CompoundDataNotify::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
void CompoundDataNotify::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CompoundDataNotify.unlock_compound_list)
}
void CompoundDataNotify::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.unlock_compound_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CompoundDataNotify::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CompoundDataNotify::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 2;
int CompoundDataNotify::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
void CompoundDataNotify::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
const ::proto::CompoundQueueData& CompoundDataNotify::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
::proto::CompoundQueueData* CompoundDataNotify::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
::proto::CompoundQueueData* CompoundDataNotify::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
CompoundDataNotify::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.compound_que_data_list)
  return &compound_que_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
CompoundDataNotify::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCompoundDataReq::GetCompoundDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetCompoundDataReq)
}
GetCompoundDataReq::GetCompoundDataReq(const GetCompoundDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetCompoundDataReq)
}

void GetCompoundDataReq::SharedCtor() {
  _cached_size_ = 0;
}

GetCompoundDataReq::~GetCompoundDataReq() {
  // @@protoc_insertion_point(destructor:proto.GetCompoundDataReq)
  SharedDtor();
}

void GetCompoundDataReq::SharedDtor() {
}

void GetCompoundDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCompoundDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCompoundDataReq& GetCompoundDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetCompoundDataReq* GetCompoundDataReq::New(::google::protobuf::Arena* arena) const {
  GetCompoundDataReq* n = new GetCompoundDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCompoundDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetCompoundDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetCompoundDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetCompoundDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetCompoundDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetCompoundDataReq)
  return false;
#undef DO_
}

void GetCompoundDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetCompoundDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetCompoundDataReq)
}

::google::protobuf::uint8* GetCompoundDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetCompoundDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetCompoundDataReq)
  return target;
}

size_t GetCompoundDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetCompoundDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCompoundDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetCompoundDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCompoundDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCompoundDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetCompoundDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetCompoundDataReq)
    MergeFrom(*source);
  }
}

void GetCompoundDataReq::MergeFrom(const GetCompoundDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetCompoundDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetCompoundDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetCompoundDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCompoundDataReq::CopyFrom(const GetCompoundDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetCompoundDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCompoundDataReq::IsInitialized() const {
  return true;
}

void GetCompoundDataReq::Swap(GetCompoundDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCompoundDataReq::InternalSwap(GetCompoundDataReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCompoundDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCompoundDataReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCompoundDataRsp::kRetcodeFieldNumber;
const int GetCompoundDataRsp::kUnlockCompoundListFieldNumber;
const int GetCompoundDataRsp::kCompoundQueDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCompoundDataRsp::GetCompoundDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetCompoundDataRsp)
}
GetCompoundDataRsp::GetCompoundDataRsp(const GetCompoundDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlock_compound_list_(from.unlock_compound_list_),
      compound_que_data_list_(from.compound_que_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetCompoundDataRsp)
}

void GetCompoundDataRsp::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

GetCompoundDataRsp::~GetCompoundDataRsp() {
  // @@protoc_insertion_point(destructor:proto.GetCompoundDataRsp)
  SharedDtor();
}

void GetCompoundDataRsp::SharedDtor() {
}

void GetCompoundDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCompoundDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCompoundDataRsp& GetCompoundDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetCompoundDataRsp* GetCompoundDataRsp::New(::google::protobuf::Arena* arena) const {
  GetCompoundDataRsp* n = new GetCompoundDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCompoundDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetCompoundDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlock_compound_list_.Clear();
  compound_que_data_list_.Clear();
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool GetCompoundDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetCompoundDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlock_compound_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlock_compound_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_unlock_compound_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CompoundQueueData compound_que_data_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_compound_que_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetCompoundDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetCompoundDataRsp)
  return false;
#undef DO_
}

void GetCompoundDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetCompoundDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // repeated uint32 unlock_compound_list = 2;
  if (this->unlock_compound_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlock_compound_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlock_compound_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlock_compound_list(i), output);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->compound_que_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetCompoundDataRsp)
}

::google::protobuf::uint8* GetCompoundDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetCompoundDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 unlock_compound_list = 2;
  if (this->unlock_compound_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlock_compound_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlock_compound_list_, target);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->compound_que_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetCompoundDataRsp)
  return target;
}

size_t GetCompoundDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetCompoundDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlock_compound_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlock_compound_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlock_compound_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->compound_que_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compound_que_data_list(static_cast<int>(i)));
    }
  }

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCompoundDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetCompoundDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCompoundDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCompoundDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetCompoundDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetCompoundDataRsp)
    MergeFrom(*source);
  }
}

void GetCompoundDataRsp::MergeFrom(const GetCompoundDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetCompoundDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlock_compound_list_.MergeFrom(from.unlock_compound_list_);
  compound_que_data_list_.MergeFrom(from.compound_que_data_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetCompoundDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetCompoundDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCompoundDataRsp::CopyFrom(const GetCompoundDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetCompoundDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCompoundDataRsp::IsInitialized() const {
  return true;
}

void GetCompoundDataRsp::Swap(GetCompoundDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCompoundDataRsp::InternalSwap(GetCompoundDataRsp* other) {
  using std::swap;
  unlock_compound_list_.InternalSwap(&other->unlock_compound_list_);
  compound_que_data_list_.InternalSwap(&other->compound_que_data_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCompoundDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCompoundDataRsp

// uint32 retcode = 1;
void GetCompoundDataRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 GetCompoundDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.retcode)
  return retcode_;
}
void GetCompoundDataRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.retcode)
}

// repeated uint32 unlock_compound_list = 2;
int GetCompoundDataRsp::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
void GetCompoundDataRsp::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
::google::protobuf::uint32 GetCompoundDataRsp::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
void GetCompoundDataRsp::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.unlock_compound_list)
}
void GetCompoundDataRsp::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.unlock_compound_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetCompoundDataRsp::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetCompoundDataRsp::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 3;
int GetCompoundDataRsp::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
void GetCompoundDataRsp::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
const ::proto::CompoundQueueData& GetCompoundDataRsp::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
::proto::CompoundQueueData* GetCompoundDataRsp::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
::proto::CompoundQueueData* GetCompoundDataRsp::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
GetCompoundDataRsp::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return &compound_que_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
GetCompoundDataRsp::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerTimeNotify::kIsPausedFieldNumber;
const int PlayerTimeNotify::kPlayerTimeFieldNumber;
const int PlayerTimeNotify::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerTimeNotify::PlayerTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerTimeNotify)
}
PlayerTimeNotify::PlayerTimeNotify(const PlayerTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_time_, &from.player_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_paused_) -
    reinterpret_cast<char*>(&player_time_)) + sizeof(is_paused_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerTimeNotify)
}

void PlayerTimeNotify::SharedCtor() {
  ::memset(&player_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_paused_) -
      reinterpret_cast<char*>(&player_time_)) + sizeof(is_paused_));
  _cached_size_ = 0;
}

PlayerTimeNotify::~PlayerTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerTimeNotify)
  SharedDtor();
}

void PlayerTimeNotify::SharedDtor() {
}

void PlayerTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerTimeNotify& PlayerTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerTimeNotify* PlayerTimeNotify::New(::google::protobuf::Arena* arena) const {
  PlayerTimeNotify* n = new PlayerTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_paused_) -
      reinterpret_cast<char*>(&player_time_)) + sizeof(is_paused_));
  _internal_metadata_.Clear();
}

bool PlayerTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_paused = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 server_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerTimeNotify)
  return false;
#undef DO_
}

void PlayerTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_paused(), output);
  }

  // uint64 player_time = 2;
  if (this->player_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_time(), output);
  }

  // uint64 server_time = 3;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->server_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerTimeNotify)
}

::google::protobuf::uint8* PlayerTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_paused(), target);
  }

  // uint64 player_time = 2;
  if (this->player_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_time(), target);
  }

  // uint64 server_time = 3;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->server_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerTimeNotify)
  return target;
}

size_t PlayerTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_time = 2;
  if (this->player_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_time());
  }

  // uint64 server_time = 3;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerTimeNotify)
    MergeFrom(*source);
  }
}

void PlayerTimeNotify::MergeFrom(const PlayerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_time() != 0) {
    set_player_time(from.player_time());
  }
  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
  if (from.is_paused() != 0) {
    set_is_paused(from.is_paused());
  }
}

void PlayerTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerTimeNotify::CopyFrom(const PlayerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerTimeNotify::IsInitialized() const {
  return true;
}

void PlayerTimeNotify::Swap(PlayerTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerTimeNotify::InternalSwap(PlayerTimeNotify* other) {
  using std::swap;
  swap(player_time_, other->player_time_);
  swap(server_time_, other->server_time_);
  swap(is_paused_, other->is_paused_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerTimeNotify

// bool is_paused = 1;
void PlayerTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
bool PlayerTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.is_paused)
  return is_paused_;
}
void PlayerTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.is_paused)
}

// uint64 player_time = 2;
void PlayerTimeNotify::clear_player_time() {
  player_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerTimeNotify::player_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.player_time)
  return player_time_;
}
void PlayerTimeNotify::set_player_time(::google::protobuf::uint64 value) {
  
  player_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.player_time)
}

// uint64 server_time = 3;
void PlayerTimeNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerTimeNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.server_time)
  return server_time_;
}
void PlayerTimeNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.server_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetPauseReq::kIsPausedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetPauseReq::PlayerSetPauseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetPauseReq)
}
PlayerSetPauseReq::PlayerSetPauseReq(const PlayerSetPauseReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_paused_ = from.is_paused_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetPauseReq)
}

void PlayerSetPauseReq::SharedCtor() {
  is_paused_ = false;
  _cached_size_ = 0;
}

PlayerSetPauseReq::~PlayerSetPauseReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetPauseReq)
  SharedDtor();
}

void PlayerSetPauseReq::SharedDtor() {
}

void PlayerSetPauseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetPauseReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetPauseReq& PlayerSetPauseReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetPauseReq* PlayerSetPauseReq::New(::google::protobuf::Arena* arena) const {
  PlayerSetPauseReq* n = new PlayerSetPauseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetPauseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetPauseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_paused_ = false;
  _internal_metadata_.Clear();
}

bool PlayerSetPauseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetPauseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_paused = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetPauseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetPauseReq)
  return false;
#undef DO_
}

void PlayerSetPauseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetPauseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_paused(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetPauseReq)
}

::google::protobuf::uint8* PlayerSetPauseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetPauseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_paused(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetPauseReq)
  return target;
}

size_t PlayerSetPauseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetPauseReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetPauseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetPauseReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetPauseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetPauseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetPauseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetPauseReq)
    MergeFrom(*source);
  }
}

void PlayerSetPauseReq::MergeFrom(const PlayerSetPauseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetPauseReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_paused() != 0) {
    set_is_paused(from.is_paused());
  }
}

void PlayerSetPauseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetPauseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetPauseReq::CopyFrom(const PlayerSetPauseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetPauseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetPauseReq::IsInitialized() const {
  return true;
}

void PlayerSetPauseReq::Swap(PlayerSetPauseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetPauseReq::InternalSwap(PlayerSetPauseReq* other) {
  using std::swap;
  swap(is_paused_, other->is_paused_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetPauseReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetPauseReq

// bool is_paused = 1;
void PlayerSetPauseReq::clear_is_paused() {
  is_paused_ = false;
}
bool PlayerSetPauseReq::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseReq.is_paused)
  return is_paused_;
}
void PlayerSetPauseReq::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseReq.is_paused)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetPauseRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetPauseRsp::PlayerSetPauseRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetPauseRsp)
}
PlayerSetPauseRsp::PlayerSetPauseRsp(const PlayerSetPauseRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetPauseRsp)
}

void PlayerSetPauseRsp::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

PlayerSetPauseRsp::~PlayerSetPauseRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetPauseRsp)
  SharedDtor();
}

void PlayerSetPauseRsp::SharedDtor() {
}

void PlayerSetPauseRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetPauseRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetPauseRsp& PlayerSetPauseRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetPauseRsp* PlayerSetPauseRsp::New(::google::protobuf::Arena* arena) const {
  PlayerSetPauseRsp* n = new PlayerSetPauseRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetPauseRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetPauseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerSetPauseRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetPauseRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetPauseRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetPauseRsp)
  return false;
#undef DO_
}

void PlayerSetPauseRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetPauseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetPauseRsp)
}

::google::protobuf::uint8* PlayerSetPauseRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetPauseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetPauseRsp)
  return target;
}

size_t PlayerSetPauseRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetPauseRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetPauseRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetPauseRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetPauseRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetPauseRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetPauseRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetPauseRsp)
    MergeFrom(*source);
  }
}

void PlayerSetPauseRsp::MergeFrom(const PlayerSetPauseRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetPauseRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerSetPauseRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetPauseRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetPauseRsp::CopyFrom(const PlayerSetPauseRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetPauseRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetPauseRsp::IsInitialized() const {
  return true;
}

void PlayerSetPauseRsp::Swap(PlayerSetPauseRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetPauseRsp::InternalSwap(PlayerSetPauseRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetPauseRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetPauseRsp

// uint32 retcode = 1;
void PlayerSetPauseRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 PlayerSetPauseRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseRsp.retcode)
  return retcode_;
}
void PlayerSetPauseRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetLanguageReq::kLanguageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetLanguageReq::PlayerSetLanguageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetLanguageReq)
}
PlayerSetLanguageReq::PlayerSetLanguageReq(const PlayerSetLanguageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_type_ = from.language_type_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetLanguageReq)
}

void PlayerSetLanguageReq::SharedCtor() {
  language_type_ = 0u;
  _cached_size_ = 0;
}

PlayerSetLanguageReq::~PlayerSetLanguageReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetLanguageReq)
  SharedDtor();
}

void PlayerSetLanguageReq::SharedDtor() {
}

void PlayerSetLanguageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetLanguageReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetLanguageReq& PlayerSetLanguageReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetLanguageReq* PlayerSetLanguageReq::New(::google::protobuf::Arena* arena) const {
  PlayerSetLanguageReq* n = new PlayerSetLanguageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetLanguageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetLanguageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_type_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerSetLanguageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetLanguageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 language_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetLanguageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetLanguageReq)
  return false;
#undef DO_
}

void PlayerSetLanguageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetLanguageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 language_type = 1;
  if (this->language_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->language_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetLanguageReq)
}

::google::protobuf::uint8* PlayerSetLanguageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetLanguageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 language_type = 1;
  if (this->language_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->language_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetLanguageReq)
  return target;
}

size_t PlayerSetLanguageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetLanguageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 language_type = 1;
  if (this->language_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->language_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetLanguageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetLanguageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetLanguageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetLanguageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetLanguageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetLanguageReq)
    MergeFrom(*source);
  }
}

void PlayerSetLanguageReq::MergeFrom(const PlayerSetLanguageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetLanguageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_type() != 0) {
    set_language_type(from.language_type());
  }
}

void PlayerSetLanguageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetLanguageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetLanguageReq::CopyFrom(const PlayerSetLanguageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetLanguageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetLanguageReq::IsInitialized() const {
  return true;
}

void PlayerSetLanguageReq::Swap(PlayerSetLanguageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetLanguageReq::InternalSwap(PlayerSetLanguageReq* other) {
  using std::swap;
  swap(language_type_, other->language_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetLanguageReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetLanguageReq

// uint32 language_type = 1;
void PlayerSetLanguageReq::clear_language_type() {
  language_type_ = 0u;
}
::google::protobuf::uint32 PlayerSetLanguageReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageReq.language_type)
  return language_type_;
}
void PlayerSetLanguageReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageReq.language_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetLanguageRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetLanguageRsp::PlayerSetLanguageRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetLanguageRsp)
}
PlayerSetLanguageRsp::PlayerSetLanguageRsp(const PlayerSetLanguageRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetLanguageRsp)
}

void PlayerSetLanguageRsp::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

PlayerSetLanguageRsp::~PlayerSetLanguageRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetLanguageRsp)
  SharedDtor();
}

void PlayerSetLanguageRsp::SharedDtor() {
}

void PlayerSetLanguageRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetLanguageRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetLanguageRsp& PlayerSetLanguageRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetLanguageRsp* PlayerSetLanguageRsp::New(::google::protobuf::Arena* arena) const {
  PlayerSetLanguageRsp* n = new PlayerSetLanguageRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetLanguageRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetLanguageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerSetLanguageRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetLanguageRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetLanguageRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetLanguageRsp)
  return false;
#undef DO_
}

void PlayerSetLanguageRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetLanguageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetLanguageRsp)
}

::google::protobuf::uint8* PlayerSetLanguageRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetLanguageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetLanguageRsp)
  return target;
}

size_t PlayerSetLanguageRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetLanguageRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetLanguageRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetLanguageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetLanguageRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetLanguageRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetLanguageRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetLanguageRsp)
    MergeFrom(*source);
  }
}

void PlayerSetLanguageRsp::MergeFrom(const PlayerSetLanguageRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetLanguageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerSetLanguageRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetLanguageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetLanguageRsp::CopyFrom(const PlayerSetLanguageRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetLanguageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetLanguageRsp::IsInitialized() const {
  return true;
}

void PlayerSetLanguageRsp::Swap(PlayerSetLanguageRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetLanguageRsp::InternalSwap(PlayerSetLanguageRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetLanguageRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetLanguageRsp

// uint32 retcode = 1;
void PlayerSetLanguageRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 PlayerSetLanguageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageRsp.retcode)
  return retcode_;
}
void PlayerSetLanguageRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataResVersionNotify::kClientDataVersionFieldNumber;
const int DataResVersionNotify::kClientSilenceDataVersionFieldNumber;
const int DataResVersionNotify::kResVersionFieldNumber;
const int DataResVersionNotify::kClientMd5FieldNumber;
const int DataResVersionNotify::kClientSilenceMd5FieldNumber;
const int DataResVersionNotify::kResMd5FieldNumber;
const int DataResVersionNotify::kIsResNeedReloginFieldNumber;
const int DataResVersionNotify::kResVersionConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataResVersionNotify::DataResVersionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DataResVersionNotify)
}
DataResVersionNotify::DataResVersionNotify(const DataResVersionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_md5().size() > 0) {
    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_md5().size() > 0) {
    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  res_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.res_md5().size() > 0) {
    res_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_md5_);
  }
  if (from.has_res_version_config()) {
    res_version_config_ = new ::proto::ResVersionConfig(*from.res_version_config_);
  } else {
    res_version_config_ = NULL;
  }
  ::memcpy(&client_data_version_, &from.client_data_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_res_need_relogin_) -
    reinterpret_cast<char*>(&client_data_version_)) + sizeof(is_res_need_relogin_));
  // @@protoc_insertion_point(copy_constructor:proto.DataResVersionNotify)
}

void DataResVersionNotify::SharedCtor() {
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&res_version_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_res_need_relogin_) -
      reinterpret_cast<char*>(&res_version_config_)) + sizeof(is_res_need_relogin_));
  _cached_size_ = 0;
}

DataResVersionNotify::~DataResVersionNotify() {
  // @@protoc_insertion_point(destructor:proto.DataResVersionNotify)
  SharedDtor();
}

void DataResVersionNotify::SharedDtor() {
  client_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete res_version_config_;
}

void DataResVersionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataResVersionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataResVersionNotify& DataResVersionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataResVersionNotify* DataResVersionNotify::New(::google::protobuf::Arena* arena) const {
  DataResVersionNotify* n = new DataResVersionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataResVersionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DataResVersionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) {
    delete res_version_config_;
  }
  res_version_config_ = NULL;
  ::memset(&client_data_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_res_need_relogin_) -
      reinterpret_cast<char*>(&client_data_version_)) + sizeof(is_res_need_relogin_));
  _internal_metadata_.Clear();
}

bool DataResVersionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DataResVersionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 client_data_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_silence_data_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_silence_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 res_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &res_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_md5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_md5().data(), static_cast<int>(this->client_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.client_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_md5 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.client_silence_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string res_md5 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->res_md5().data(), static_cast<int>(this->res_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.res_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_res_need_relogin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_res_need_relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResVersionConfig res_version_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DataResVersionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DataResVersionNotify)
  return false;
#undef DO_
}

void DataResVersionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DataResVersionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client_data_version = 1;
  if (this->client_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_data_version(), output);
  }

  // uint32 client_silence_data_version = 2;
  if (this->client_silence_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_silence_data_version(), output);
  }

  // uint32 res_version = 3;
  if (this->res_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->res_version(), output);
  }

  // string client_md5 = 5;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_md5(), output);
  }

  // string client_silence_md5 = 6;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_silence_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->client_silence_md5(), output);
  }

  // string res_md5 = 7;
  if (this->res_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_md5().data(), static_cast<int>(this->res_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.res_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->res_md5(), output);
  }

  // bool is_res_need_relogin = 9;
  if (this->is_res_need_relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_res_need_relogin(), output);
  }

  // .proto.ResVersionConfig res_version_config = 10;
  if (this->has_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->res_version_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DataResVersionNotify)
}

::google::protobuf::uint8* DataResVersionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DataResVersionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client_data_version = 1;
  if (this->client_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_data_version(), target);
  }

  // uint32 client_silence_data_version = 2;
  if (this->client_silence_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_silence_data_version(), target);
  }

  // uint32 res_version = 3;
  if (this->res_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->res_version(), target);
  }

  // string client_md5 = 5;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_md5(), target);
  }

  // string client_silence_md5 = 6;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_silence_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->client_silence_md5(), target);
  }

  // string res_md5 = 7;
  if (this->res_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_md5().data(), static_cast<int>(this->res_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.res_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->res_md5(), target);
  }

  // bool is_res_need_relogin = 9;
  if (this->is_res_need_relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_res_need_relogin(), target);
  }

  // .proto.ResVersionConfig res_version_config = 10;
  if (this->has_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->res_version_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DataResVersionNotify)
  return target;
}

size_t DataResVersionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DataResVersionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_md5 = 5;
  if (this->client_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_md5());
  }

  // string client_silence_md5 = 6;
  if (this->client_silence_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_md5());
  }

  // string res_md5 = 7;
  if (this->res_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res_md5());
  }

  // .proto.ResVersionConfig res_version_config = 10;
  if (this->has_res_version_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_version_config_);
  }

  // uint32 client_data_version = 1;
  if (this->client_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_data_version());
  }

  // uint32 client_silence_data_version = 2;
  if (this->client_silence_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_silence_data_version());
  }

  // uint32 res_version = 3;
  if (this->res_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->res_version());
  }

  // bool is_res_need_relogin = 9;
  if (this->is_res_need_relogin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataResVersionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DataResVersionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DataResVersionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataResVersionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DataResVersionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DataResVersionNotify)
    MergeFrom(*source);
  }
}

void DataResVersionNotify::MergeFrom(const DataResVersionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DataResVersionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_md5().size() > 0) {

    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  if (from.client_silence_md5().size() > 0) {

    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  if (from.res_md5().size() > 0) {

    res_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_md5_);
  }
  if (from.has_res_version_config()) {
    mutable_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.res_version_config());
  }
  if (from.client_data_version() != 0) {
    set_client_data_version(from.client_data_version());
  }
  if (from.client_silence_data_version() != 0) {
    set_client_silence_data_version(from.client_silence_data_version());
  }
  if (from.res_version() != 0) {
    set_res_version(from.res_version());
  }
  if (from.is_res_need_relogin() != 0) {
    set_is_res_need_relogin(from.is_res_need_relogin());
  }
}

void DataResVersionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DataResVersionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataResVersionNotify::CopyFrom(const DataResVersionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DataResVersionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataResVersionNotify::IsInitialized() const {
  return true;
}

void DataResVersionNotify::Swap(DataResVersionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataResVersionNotify::InternalSwap(DataResVersionNotify* other) {
  using std::swap;
  client_md5_.Swap(&other->client_md5_);
  client_silence_md5_.Swap(&other->client_silence_md5_);
  res_md5_.Swap(&other->res_md5_);
  swap(res_version_config_, other->res_version_config_);
  swap(client_data_version_, other->client_data_version_);
  swap(client_silence_data_version_, other->client_silence_data_version_);
  swap(res_version_, other->res_version_);
  swap(is_res_need_relogin_, other->is_res_need_relogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataResVersionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataResVersionNotify

// uint32 client_data_version = 1;
void DataResVersionNotify::clear_client_data_version() {
  client_data_version_ = 0u;
}
::google::protobuf::uint32 DataResVersionNotify::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_data_version)
  return client_data_version_;
}
void DataResVersionNotify::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_data_version)
}

// uint32 client_silence_data_version = 2;
void DataResVersionNotify::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
::google::protobuf::uint32 DataResVersionNotify::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_data_version)
  return client_silence_data_version_;
}
void DataResVersionNotify::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_data_version)
}

// uint32 res_version = 3;
void DataResVersionNotify::clear_res_version() {
  res_version_ = 0u;
}
::google::protobuf::uint32 DataResVersionNotify::res_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_version)
  return res_version_;
}
void DataResVersionNotify::set_res_version(::google::protobuf::uint32 value) {
  
  res_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.res_version)
}

// string client_md5 = 5;
void DataResVersionNotify::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_md5)
  return client_md5_.GetNoArena();
}
void DataResVersionNotify::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_md5)
}
#if LANG_CXX11
void DataResVersionNotify::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_md5)
}
#endif
void DataResVersionNotify::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_md5)
}
void DataResVersionNotify::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_md5)
}
::std::string* DataResVersionNotify::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_md5)
}

// string client_silence_md5 = 6;
void DataResVersionNotify::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
void DataResVersionNotify::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_md5)
}
#if LANG_CXX11
void DataResVersionNotify::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_silence_md5)
}
#endif
void DataResVersionNotify::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_silence_md5)
}
void DataResVersionNotify::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_silence_md5)
}
::std::string* DataResVersionNotify::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_silence_md5)
}

// string res_md5 = 7;
void DataResVersionNotify::clear_res_md5() {
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::res_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_md5)
  return res_md5_.GetNoArena();
}
void DataResVersionNotify::set_res_md5(const ::std::string& value) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.res_md5)
}
#if LANG_CXX11
void DataResVersionNotify::set_res_md5(::std::string&& value) {
  
  res_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.res_md5)
}
#endif
void DataResVersionNotify::set_res_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.res_md5)
}
void DataResVersionNotify::set_res_md5(const char* value, size_t size) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.res_md5)
}
::std::string* DataResVersionNotify::mutable_res_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.res_md5)
  return res_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_res_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.res_md5)
  
  return res_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_res_md5(::std::string* res_md5) {
  if (res_md5 != NULL) {
    
  } else {
    
  }
  res_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.res_md5)
}

// bool is_res_need_relogin = 9;
void DataResVersionNotify::clear_is_res_need_relogin() {
  is_res_need_relogin_ = false;
}
bool DataResVersionNotify::is_res_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.is_res_need_relogin)
  return is_res_need_relogin_;
}
void DataResVersionNotify::set_is_res_need_relogin(bool value) {
  
  is_res_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.is_res_need_relogin)
}

// .proto.ResVersionConfig res_version_config = 10;
bool DataResVersionNotify::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
void DataResVersionNotify::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& DataResVersionNotify::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* DataResVersionNotify::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.res_version_config)
  return res_version_config_;
}
::proto::ResVersionConfig* DataResVersionNotify::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
void DataResVersionNotify::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.res_version_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskInfo::kDailyTaskIdFieldNumber;
const int DailyTaskInfo::kRewardIdFieldNumber;
const int DailyTaskInfo::kProgressFieldNumber;
const int DailyTaskInfo::kFinishProgressFieldNumber;
const int DailyTaskInfo::kIsFinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskInfo::DailyTaskInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskInfo)
}
DailyTaskInfo::DailyTaskInfo(const DailyTaskInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&daily_task_id_, &from.daily_task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_finished_) -
    reinterpret_cast<char*>(&daily_task_id_)) + sizeof(is_finished_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskInfo)
}

void DailyTaskInfo::SharedCtor() {
  ::memset(&daily_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finished_) -
      reinterpret_cast<char*>(&daily_task_id_)) + sizeof(is_finished_));
  _cached_size_ = 0;
}

DailyTaskInfo::~DailyTaskInfo() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskInfo)
  SharedDtor();
}

void DailyTaskInfo::SharedDtor() {
}

void DailyTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskInfo::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskInfo& DailyTaskInfo::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskInfo* DailyTaskInfo::New(::google::protobuf::Arena* arena) const {
  DailyTaskInfo* n = new DailyTaskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&daily_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finished_) -
      reinterpret_cast<char*>(&daily_task_id_)) + sizeof(is_finished_));
  _internal_metadata_.Clear();
}

bool DailyTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 daily_task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finish_progress = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskInfo)
  return false;
#undef DO_
}

void DailyTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->daily_task_id(), output);
  }

  // uint32 reward_id = 2;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reward_id(), output);
  }

  // uint32 progress = 3;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->progress(), output);
  }

  // uint32 finish_progress = 4;
  if (this->finish_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->finish_progress(), output);
  }

  // bool is_finished = 5;
  if (this->is_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_finished(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskInfo)
}

::google::protobuf::uint8* DailyTaskInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->daily_task_id(), target);
  }

  // uint32 reward_id = 2;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reward_id(), target);
  }

  // uint32 progress = 3;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->progress(), target);
  }

  // uint32 finish_progress = 4;
  if (this->finish_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->finish_progress(), target);
  }

  // bool is_finished = 5;
  if (this->is_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_finished(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskInfo)
  return target;
}

size_t DailyTaskInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_task_id());
  }

  // uint32 reward_id = 2;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  // uint32 progress = 3;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  // uint32 finish_progress = 4;
  if (this->finish_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_progress());
  }

  // bool is_finished = 5;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskInfo)
    MergeFrom(*source);
  }
}

void DailyTaskInfo::MergeFrom(const DailyTaskInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.daily_task_id() != 0) {
    set_daily_task_id(from.daily_task_id());
  }
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
  if (from.finish_progress() != 0) {
    set_finish_progress(from.finish_progress());
  }
  if (from.is_finished() != 0) {
    set_is_finished(from.is_finished());
  }
}

void DailyTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskInfo::CopyFrom(const DailyTaskInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskInfo::IsInitialized() const {
  return true;
}

void DailyTaskInfo::Swap(DailyTaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskInfo::InternalSwap(DailyTaskInfo* other) {
  using std::swap;
  swap(daily_task_id_, other->daily_task_id_);
  swap(reward_id_, other->reward_id_);
  swap(progress_, other->progress_);
  swap(finish_progress_, other->finish_progress_);
  swap(is_finished_, other->is_finished_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskInfo

// uint32 daily_task_id = 1;
void DailyTaskInfo::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.daily_task_id)
  return daily_task_id_;
}
void DailyTaskInfo::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.daily_task_id)
}

// uint32 reward_id = 2;
void DailyTaskInfo::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.reward_id)
  return reward_id_;
}
void DailyTaskInfo::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.reward_id)
}

// uint32 progress = 3;
void DailyTaskInfo::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.progress)
  return progress_;
}
void DailyTaskInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.progress)
}

// uint32 finish_progress = 4;
void DailyTaskInfo::clear_finish_progress() {
  finish_progress_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::finish_progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.finish_progress)
  return finish_progress_;
}
void DailyTaskInfo::set_finish_progress(::google::protobuf::uint32 value) {
  
  finish_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.finish_progress)
}

// bool is_finished = 5;
void DailyTaskInfo::clear_is_finished() {
  is_finished_ = false;
}
bool DailyTaskInfo::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.is_finished)
  return is_finished_;
}
void DailyTaskInfo::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.is_finished)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskDataNotify::kScoreRewardIdFieldNumber;
const int DailyTaskDataNotify::kIsTakenScoreRewardFieldNumber;
const int DailyTaskDataNotify::kFinishedNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskDataNotify::DailyTaskDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskDataNotify)
}
DailyTaskDataNotify::DailyTaskDataNotify(const DailyTaskDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_reward_id_, &from.score_reward_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&finished_num_) -
    reinterpret_cast<char*>(&score_reward_id_)) + sizeof(finished_num_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskDataNotify)
}

void DailyTaskDataNotify::SharedCtor() {
  ::memset(&score_reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_num_) -
      reinterpret_cast<char*>(&score_reward_id_)) + sizeof(finished_num_));
  _cached_size_ = 0;
}

DailyTaskDataNotify::~DailyTaskDataNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskDataNotify)
  SharedDtor();
}

void DailyTaskDataNotify::SharedDtor() {
}

void DailyTaskDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskDataNotify& DailyTaskDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskDataNotify* DailyTaskDataNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskDataNotify* n = new DailyTaskDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&score_reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_num_) -
      reinterpret_cast<char*>(&score_reward_id_)) + sizeof(finished_num_));
  _internal_metadata_.Clear();
}

bool DailyTaskDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 score_reward_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_taken_score_reward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_taken_score_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finished_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finished_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskDataNotify)
  return false;
#undef DO_
}

void DailyTaskDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 score_reward_id = 3;
  if (this->score_reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->score_reward_id(), output);
  }

  // bool is_taken_score_reward = 4;
  if (this->is_taken_score_reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_taken_score_reward(), output);
  }

  // uint32 finished_num = 5;
  if (this->finished_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->finished_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskDataNotify)
}

::google::protobuf::uint8* DailyTaskDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 score_reward_id = 3;
  if (this->score_reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->score_reward_id(), target);
  }

  // bool is_taken_score_reward = 4;
  if (this->is_taken_score_reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_taken_score_reward(), target);
  }

  // uint32 finished_num = 5;
  if (this->finished_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->finished_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskDataNotify)
  return target;
}

size_t DailyTaskDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 score_reward_id = 3;
  if (this->score_reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score_reward_id());
  }

  // bool is_taken_score_reward = 4;
  if (this->is_taken_score_reward() != 0) {
    total_size += 1 + 1;
  }

  // uint32 finished_num = 5;
  if (this->finished_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finished_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskDataNotify)
    MergeFrom(*source);
  }
}

void DailyTaskDataNotify::MergeFrom(const DailyTaskDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score_reward_id() != 0) {
    set_score_reward_id(from.score_reward_id());
  }
  if (from.is_taken_score_reward() != 0) {
    set_is_taken_score_reward(from.is_taken_score_reward());
  }
  if (from.finished_num() != 0) {
    set_finished_num(from.finished_num());
  }
}

void DailyTaskDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskDataNotify::CopyFrom(const DailyTaskDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskDataNotify::IsInitialized() const {
  return true;
}

void DailyTaskDataNotify::Swap(DailyTaskDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskDataNotify::InternalSwap(DailyTaskDataNotify* other) {
  using std::swap;
  swap(score_reward_id_, other->score_reward_id_);
  swap(is_taken_score_reward_, other->is_taken_score_reward_);
  swap(finished_num_, other->finished_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskDataNotify

// uint32 score_reward_id = 3;
void DailyTaskDataNotify::clear_score_reward_id() {
  score_reward_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskDataNotify::score_reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.score_reward_id)
  return score_reward_id_;
}
void DailyTaskDataNotify::set_score_reward_id(::google::protobuf::uint32 value) {
  
  score_reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.score_reward_id)
}

// bool is_taken_score_reward = 4;
void DailyTaskDataNotify::clear_is_taken_score_reward() {
  is_taken_score_reward_ = false;
}
bool DailyTaskDataNotify::is_taken_score_reward() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.is_taken_score_reward)
  return is_taken_score_reward_;
}
void DailyTaskDataNotify::set_is_taken_score_reward(bool value) {
  
  is_taken_score_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.is_taken_score_reward)
}

// uint32 finished_num = 5;
void DailyTaskDataNotify::clear_finished_num() {
  finished_num_ = 0u;
}
::google::protobuf::uint32 DailyTaskDataNotify::finished_num() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.finished_num)
  return finished_num_;
}
void DailyTaskDataNotify::set_finished_num(::google::protobuf::uint32 value) {
  
  finished_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.finished_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskProgressNotify::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskProgressNotify::DailyTaskProgressNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskProgressNotify)
}
DailyTaskProgressNotify::DailyTaskProgressNotify(const DailyTaskProgressNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::proto::DailyTaskInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskProgressNotify)
}

void DailyTaskProgressNotify::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

DailyTaskProgressNotify::~DailyTaskProgressNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskProgressNotify)
  SharedDtor();
}

void DailyTaskProgressNotify::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void DailyTaskProgressNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskProgressNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskProgressNotify& DailyTaskProgressNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskProgressNotify* DailyTaskProgressNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskProgressNotify* n = new DailyTaskProgressNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskProgressNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool DailyTaskProgressNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskProgressNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DailyTaskInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskProgressNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskProgressNotify)
  return false;
#undef DO_
}

void DailyTaskProgressNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DailyTaskInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskProgressNotify)
}

::google::protobuf::uint8* DailyTaskProgressNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DailyTaskInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskProgressNotify)
  return target;
}

size_t DailyTaskProgressNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskProgressNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DailyTaskInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskProgressNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskProgressNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskProgressNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskProgressNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskProgressNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskProgressNotify)
    MergeFrom(*source);
  }
}

void DailyTaskProgressNotify::MergeFrom(const DailyTaskProgressNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskProgressNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::proto::DailyTaskInfo::MergeFrom(from.info());
  }
}

void DailyTaskProgressNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskProgressNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskProgressNotify::CopyFrom(const DailyTaskProgressNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskProgressNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskProgressNotify::IsInitialized() const {
  return true;
}

void DailyTaskProgressNotify::Swap(DailyTaskProgressNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskProgressNotify::InternalSwap(DailyTaskProgressNotify* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskProgressNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskProgressNotify

// .proto.DailyTaskInfo info = 1;
bool DailyTaskProgressNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void DailyTaskProgressNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::proto::DailyTaskInfo& DailyTaskProgressNotify::info() const {
  const ::proto::DailyTaskInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.DailyTaskProgressNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DailyTaskInfo*>(
      &::proto::_DailyTaskInfo_default_instance_);
}
::proto::DailyTaskInfo* DailyTaskProgressNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::DailyTaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.DailyTaskProgressNotify.info)
  return info_;
}
::proto::DailyTaskInfo* DailyTaskProgressNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.DailyTaskProgressNotify.info)
  
  ::proto::DailyTaskInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void DailyTaskProgressNotify::set_allocated_info(::proto::DailyTaskInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DailyTaskProgressNotify.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskScoreRewardNotify::kRewardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskScoreRewardNotify::DailyTaskScoreRewardNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskScoreRewardNotify)
}
DailyTaskScoreRewardNotify::DailyTaskScoreRewardNotify(const DailyTaskScoreRewardNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_id_ = from.reward_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskScoreRewardNotify)
}

void DailyTaskScoreRewardNotify::SharedCtor() {
  reward_id_ = 0u;
  _cached_size_ = 0;
}

DailyTaskScoreRewardNotify::~DailyTaskScoreRewardNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskScoreRewardNotify)
  SharedDtor();
}

void DailyTaskScoreRewardNotify::SharedDtor() {
}

void DailyTaskScoreRewardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskScoreRewardNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskScoreRewardNotify& DailyTaskScoreRewardNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskScoreRewardNotify* DailyTaskScoreRewardNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskScoreRewardNotify* n = new DailyTaskScoreRewardNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskScoreRewardNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskScoreRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DailyTaskScoreRewardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskScoreRewardNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reward_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskScoreRewardNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskScoreRewardNotify)
  return false;
#undef DO_
}

void DailyTaskScoreRewardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskScoreRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reward_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskScoreRewardNotify)
}

::google::protobuf::uint8* DailyTaskScoreRewardNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskScoreRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reward_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskScoreRewardNotify)
  return target;
}

size_t DailyTaskScoreRewardNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskScoreRewardNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskScoreRewardNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskScoreRewardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskScoreRewardNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskScoreRewardNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskScoreRewardNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskScoreRewardNotify)
    MergeFrom(*source);
  }
}

void DailyTaskScoreRewardNotify::MergeFrom(const DailyTaskScoreRewardNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskScoreRewardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
}

void DailyTaskScoreRewardNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskScoreRewardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskScoreRewardNotify::CopyFrom(const DailyTaskScoreRewardNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskScoreRewardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskScoreRewardNotify::IsInitialized() const {
  return true;
}

void DailyTaskScoreRewardNotify::Swap(DailyTaskScoreRewardNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskScoreRewardNotify::InternalSwap(DailyTaskScoreRewardNotify* other) {
  using std::swap;
  swap(reward_id_, other->reward_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskScoreRewardNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskScoreRewardNotify

// uint32 reward_id = 1;
void DailyTaskScoreRewardNotify::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskScoreRewardNotify::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskScoreRewardNotify.reward_id)
  return reward_id_;
}
void DailyTaskScoreRewardNotify::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskScoreRewardNotify.reward_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldOwnerDailyTaskNotify::kTaskListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldOwnerDailyTaskNotify::WorldOwnerDailyTaskNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldOwnerDailyTaskNotify)
}
WorldOwnerDailyTaskNotify::WorldOwnerDailyTaskNotify(const WorldOwnerDailyTaskNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      task_list_(from.task_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldOwnerDailyTaskNotify)
}

void WorldOwnerDailyTaskNotify::SharedCtor() {
  _cached_size_ = 0;
}

WorldOwnerDailyTaskNotify::~WorldOwnerDailyTaskNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldOwnerDailyTaskNotify)
  SharedDtor();
}

void WorldOwnerDailyTaskNotify::SharedDtor() {
}

void WorldOwnerDailyTaskNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldOwnerDailyTaskNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldOwnerDailyTaskNotify& WorldOwnerDailyTaskNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldOwnerDailyTaskNotify* WorldOwnerDailyTaskNotify::New(::google::protobuf::Arena* arena) const {
  WorldOwnerDailyTaskNotify* n = new WorldOwnerDailyTaskNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldOwnerDailyTaskNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldOwnerDailyTaskNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_list_.Clear();
  _internal_metadata_.Clear();
}

bool WorldOwnerDailyTaskNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldOwnerDailyTaskNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.DailyTaskInfo task_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldOwnerDailyTaskNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldOwnerDailyTaskNotify)
  return false;
#undef DO_
}

void WorldOwnerDailyTaskNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldOwnerDailyTaskNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DailyTaskInfo task_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->task_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldOwnerDailyTaskNotify)
}

::google::protobuf::uint8* WorldOwnerDailyTaskNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldOwnerDailyTaskNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DailyTaskInfo task_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->task_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldOwnerDailyTaskNotify)
  return target;
}

size_t WorldOwnerDailyTaskNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldOwnerDailyTaskNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.DailyTaskInfo task_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->task_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->task_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldOwnerDailyTaskNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldOwnerDailyTaskNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldOwnerDailyTaskNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldOwnerDailyTaskNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldOwnerDailyTaskNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldOwnerDailyTaskNotify)
    MergeFrom(*source);
  }
}

void WorldOwnerDailyTaskNotify::MergeFrom(const WorldOwnerDailyTaskNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldOwnerDailyTaskNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_list_.MergeFrom(from.task_list_);
}

void WorldOwnerDailyTaskNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldOwnerDailyTaskNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldOwnerDailyTaskNotify::CopyFrom(const WorldOwnerDailyTaskNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldOwnerDailyTaskNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldOwnerDailyTaskNotify::IsInitialized() const {
  return true;
}

void WorldOwnerDailyTaskNotify::Swap(WorldOwnerDailyTaskNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldOwnerDailyTaskNotify::InternalSwap(WorldOwnerDailyTaskNotify* other) {
  using std::swap;
  task_list_.InternalSwap(&other->task_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldOwnerDailyTaskNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldOwnerDailyTaskNotify

// repeated .proto.DailyTaskInfo task_list = 1;
int WorldOwnerDailyTaskNotify::task_list_size() const {
  return task_list_.size();
}
void WorldOwnerDailyTaskNotify::clear_task_list() {
  task_list_.Clear();
}
const ::proto::DailyTaskInfo& WorldOwnerDailyTaskNotify::task_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Get(index);
}
::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::mutable_task_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Mutable(index);
}
::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::add_task_list() {
  // @@protoc_insertion_point(field_add:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >*
WorldOwnerDailyTaskNotify::mutable_task_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return &task_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >&
WorldOwnerDailyTaskNotify::task_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRandTaskInfoNotify::kRandTaskIdFieldNumber;
const int AddRandTaskInfoNotify::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRandTaskInfoNotify::AddRandTaskInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddRandTaskInfoNotify)
}
AddRandTaskInfoNotify::AddRandTaskInfoNotify(const AddRandTaskInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  rand_task_id_ = from.rand_task_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AddRandTaskInfoNotify)
}

void AddRandTaskInfoNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rand_task_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(rand_task_id_));
  _cached_size_ = 0;
}

AddRandTaskInfoNotify::~AddRandTaskInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.AddRandTaskInfoNotify)
  SharedDtor();
}

void AddRandTaskInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void AddRandTaskInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRandTaskInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRandTaskInfoNotify& AddRandTaskInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddRandTaskInfoNotify* AddRandTaskInfoNotify::New(::google::protobuf::Arena* arena) const {
  AddRandTaskInfoNotify* n = new AddRandTaskInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRandTaskInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  rand_task_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddRandTaskInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddRandTaskInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rand_task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rand_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddRandTaskInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddRandTaskInfoNotify)
  return false;
#undef DO_
}

void AddRandTaskInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rand_task_id = 1;
  if (this->rand_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rand_task_id(), output);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddRandTaskInfoNotify)
}

::google::protobuf::uint8* AddRandTaskInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rand_task_id = 1;
  if (this->rand_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rand_task_id(), target);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddRandTaskInfoNotify)
  return target;
}

size_t AddRandTaskInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddRandTaskInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 rand_task_id = 1;
  if (this->rand_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rand_task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRandTaskInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRandTaskInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRandTaskInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddRandTaskInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddRandTaskInfoNotify)
    MergeFrom(*source);
  }
}

void AddRandTaskInfoNotify::MergeFrom(const AddRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.rand_task_id() != 0) {
    set_rand_task_id(from.rand_task_id());
  }
}

void AddRandTaskInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRandTaskInfoNotify::CopyFrom(const AddRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRandTaskInfoNotify::IsInitialized() const {
  return true;
}

void AddRandTaskInfoNotify::Swap(AddRandTaskInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRandTaskInfoNotify::InternalSwap(AddRandTaskInfoNotify* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rand_task_id_, other->rand_task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRandTaskInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRandTaskInfoNotify

// uint32 rand_task_id = 1;
void AddRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
::google::protobuf::uint32 AddRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
void AddRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRandTaskInfoNotify.rand_task_id)
}

// .proto.Vector pos = 2;
bool AddRandTaskInfoNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void AddRandTaskInfoNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& AddRandTaskInfoNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* AddRandTaskInfoNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddRandTaskInfoNotify.pos)
  return pos_;
}
::proto::Vector* AddRandTaskInfoNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AddRandTaskInfoNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void AddRandTaskInfoNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddRandTaskInfoNotify.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveRandTaskInfoNotify::kRandTaskIdFieldNumber;
const int RemoveRandTaskInfoNotify::kIsSuccFieldNumber;
const int RemoveRandTaskInfoNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveRandTaskInfoNotify::RemoveRandTaskInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveRandTaskInfoNotify)
}
RemoveRandTaskInfoNotify::RemoveRandTaskInfoNotify(const RemoveRandTaskInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rand_task_id_, &from.rand_task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&rand_task_id_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.RemoveRandTaskInfoNotify)
}

void RemoveRandTaskInfoNotify::SharedCtor() {
  ::memset(&rand_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&rand_task_id_)) + sizeof(reason_));
  _cached_size_ = 0;
}

RemoveRandTaskInfoNotify::~RemoveRandTaskInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.RemoveRandTaskInfoNotify)
  SharedDtor();
}

void RemoveRandTaskInfoNotify::SharedDtor() {
}

void RemoveRandTaskInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveRandTaskInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveRandTaskInfoNotify& RemoveRandTaskInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveRandTaskInfoNotify* RemoveRandTaskInfoNotify::New(::google::protobuf::Arena* arena) const {
  RemoveRandTaskInfoNotify* n = new RemoveRandTaskInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveRandTaskInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rand_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&rand_task_id_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool RemoveRandTaskInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveRandTaskInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rand_task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rand_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::RemoveRandTaskInfoNotify_FinishReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveRandTaskInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveRandTaskInfoNotify)
  return false;
#undef DO_
}

void RemoveRandTaskInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rand_task_id = 1;
  if (this->rand_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rand_task_id(), output);
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_succ(), output);
  }

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveRandTaskInfoNotify)
}

::google::protobuf::uint8* RemoveRandTaskInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rand_task_id = 1;
  if (this->rand_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rand_task_id(), target);
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_succ(), target);
  }

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveRandTaskInfoNotify)
  return target;
}

size_t RemoveRandTaskInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveRandTaskInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rand_task_id = 1;
  if (this->rand_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rand_task_id());
  }

  // bool is_succ = 2;
  if (this->is_succ() != 0) {
    total_size += 1 + 1;
  }

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveRandTaskInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRandTaskInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveRandTaskInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveRandTaskInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveRandTaskInfoNotify)
    MergeFrom(*source);
  }
}

void RemoveRandTaskInfoNotify::MergeFrom(const RemoveRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rand_task_id() != 0) {
    set_rand_task_id(from.rand_task_id());
  }
  if (from.is_succ() != 0) {
    set_is_succ(from.is_succ());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void RemoveRandTaskInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRandTaskInfoNotify::CopyFrom(const RemoveRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRandTaskInfoNotify::IsInitialized() const {
  return true;
}

void RemoveRandTaskInfoNotify::Swap(RemoveRandTaskInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveRandTaskInfoNotify::InternalSwap(RemoveRandTaskInfoNotify* other) {
  using std::swap;
  swap(rand_task_id_, other->rand_task_id_);
  swap(is_succ_, other->is_succ_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveRandTaskInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveRandTaskInfoNotify

// uint32 rand_task_id = 1;
void RemoveRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
::google::protobuf::uint32 RemoveRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
void RemoveRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.rand_task_id)
}

// bool is_succ = 2;
void RemoveRandTaskInfoNotify::clear_is_succ() {
  is_succ_ = false;
}
bool RemoveRandTaskInfoNotify::is_succ() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.is_succ)
  return is_succ_;
}
void RemoveRandTaskInfoNotify::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.is_succ)
}

// .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
void RemoveRandTaskInfoNotify::clear_reason() {
  reason_ = 0;
}
::proto::RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.reason)
  return static_cast< ::proto::RemoveRandTaskInfoNotify_FinishReason >(reason_);
}
void RemoveRandTaskInfoNotify::set_reason(::proto::RemoveRandTaskInfoNotify_FinishReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakePlayerLevelRewardReq::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakePlayerLevelRewardReq::TakePlayerLevelRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakePlayerLevelRewardReq)
}
TakePlayerLevelRewardReq::TakePlayerLevelRewardReq(const TakePlayerLevelRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:proto.TakePlayerLevelRewardReq)
}

void TakePlayerLevelRewardReq::SharedCtor() {
  level_ = 0u;
  _cached_size_ = 0;
}

TakePlayerLevelRewardReq::~TakePlayerLevelRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakePlayerLevelRewardReq)
  SharedDtor();
}

void TakePlayerLevelRewardReq::SharedDtor() {
}

void TakePlayerLevelRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakePlayerLevelRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakePlayerLevelRewardReq& TakePlayerLevelRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakePlayerLevelRewardReq* TakePlayerLevelRewardReq::New(::google::protobuf::Arena* arena) const {
  TakePlayerLevelRewardReq* n = new TakePlayerLevelRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakePlayerLevelRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakePlayerLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_ = 0u;
  _internal_metadata_.Clear();
}

bool TakePlayerLevelRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakePlayerLevelRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakePlayerLevelRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakePlayerLevelRewardReq)
  return false;
#undef DO_
}

void TakePlayerLevelRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakePlayerLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakePlayerLevelRewardReq)
}

::google::protobuf::uint8* TakePlayerLevelRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakePlayerLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakePlayerLevelRewardReq)
  return target;
}

size_t TakePlayerLevelRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakePlayerLevelRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakePlayerLevelRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakePlayerLevelRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakePlayerLevelRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakePlayerLevelRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakePlayerLevelRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakePlayerLevelRewardReq)
    MergeFrom(*source);
  }
}

void TakePlayerLevelRewardReq::MergeFrom(const TakePlayerLevelRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakePlayerLevelRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TakePlayerLevelRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakePlayerLevelRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakePlayerLevelRewardReq::CopyFrom(const TakePlayerLevelRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakePlayerLevelRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakePlayerLevelRewardReq::IsInitialized() const {
  return true;
}

void TakePlayerLevelRewardReq::Swap(TakePlayerLevelRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakePlayerLevelRewardReq::InternalSwap(TakePlayerLevelRewardReq* other) {
  using std::swap;
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakePlayerLevelRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakePlayerLevelRewardReq

// uint32 level = 1;
void TakePlayerLevelRewardReq::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 TakePlayerLevelRewardReq::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardReq.level)
  return level_;
}
void TakePlayerLevelRewardReq::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardReq.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakePlayerLevelRewardRsp::kRetcodeFieldNumber;
const int TakePlayerLevelRewardRsp::kLevelFieldNumber;
const int TakePlayerLevelRewardRsp::kRewardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakePlayerLevelRewardRsp::TakePlayerLevelRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakePlayerLevelRewardRsp)
}
TakePlayerLevelRewardRsp::TakePlayerLevelRewardRsp(const TakePlayerLevelRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(reward_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakePlayerLevelRewardRsp)
}

void TakePlayerLevelRewardRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reward_id_));
  _cached_size_ = 0;
}

TakePlayerLevelRewardRsp::~TakePlayerLevelRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakePlayerLevelRewardRsp)
  SharedDtor();
}

void TakePlayerLevelRewardRsp::SharedDtor() {
}

void TakePlayerLevelRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakePlayerLevelRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakePlayerLevelRewardRsp& TakePlayerLevelRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakePlayerLevelRewardRsp* TakePlayerLevelRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakePlayerLevelRewardRsp* n = new TakePlayerLevelRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakePlayerLevelRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakePlayerLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reward_id_));
  _internal_metadata_.Clear();
}

bool TakePlayerLevelRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakePlayerLevelRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakePlayerLevelRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakePlayerLevelRewardRsp)
  return false;
#undef DO_
}

void TakePlayerLevelRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakePlayerLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // uint32 reward_id = 3;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->reward_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakePlayerLevelRewardRsp)
}

::google::protobuf::uint8* TakePlayerLevelRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakePlayerLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // uint32 reward_id = 3;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->reward_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakePlayerLevelRewardRsp)
  return target;
}

size_t TakePlayerLevelRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakePlayerLevelRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 reward_id = 3;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakePlayerLevelRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakePlayerLevelRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakePlayerLevelRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakePlayerLevelRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakePlayerLevelRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakePlayerLevelRewardRsp)
    MergeFrom(*source);
  }
}

void TakePlayerLevelRewardRsp::MergeFrom(const TakePlayerLevelRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakePlayerLevelRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
}

void TakePlayerLevelRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakePlayerLevelRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakePlayerLevelRewardRsp::CopyFrom(const TakePlayerLevelRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakePlayerLevelRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakePlayerLevelRewardRsp::IsInitialized() const {
  return true;
}

void TakePlayerLevelRewardRsp::Swap(TakePlayerLevelRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakePlayerLevelRewardRsp::InternalSwap(TakePlayerLevelRewardRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(level_, other->level_);
  swap(reward_id_, other->reward_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakePlayerLevelRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakePlayerLevelRewardRsp

// int32 retcode = 1;
void TakePlayerLevelRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakePlayerLevelRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.retcode)
  return retcode_;
}
void TakePlayerLevelRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.retcode)
}

// uint32 level = 2;
void TakePlayerLevelRewardRsp::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 TakePlayerLevelRewardRsp::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.level)
  return level_;
}
void TakePlayerLevelRewardRsp::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.level)
}

// uint32 reward_id = 3;
void TakePlayerLevelRewardRsp::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 TakePlayerLevelRewardRsp::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.reward_id)
  return reward_id_;
}
void TakePlayerLevelRewardRsp::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.reward_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLevelRewardUpdateNotify::kLevelListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLevelRewardUpdateNotify::PlayerLevelRewardUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLevelRewardUpdateNotify)
}
PlayerLevelRewardUpdateNotify::PlayerLevelRewardUpdateNotify(const PlayerLevelRewardUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      level_list_(from.level_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLevelRewardUpdateNotify)
}

void PlayerLevelRewardUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerLevelRewardUpdateNotify::~PlayerLevelRewardUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerLevelRewardUpdateNotify)
  SharedDtor();
}

void PlayerLevelRewardUpdateNotify::SharedDtor() {
}

void PlayerLevelRewardUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLevelRewardUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLevelRewardUpdateNotify& PlayerLevelRewardUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLevelRewardUpdateNotify* PlayerLevelRewardUpdateNotify::New(::google::protobuf::Arena* arena) const {
  PlayerLevelRewardUpdateNotify* n = new PlayerLevelRewardUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLevelRewardUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLevelRewardUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerLevelRewardUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLevelRewardUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 level_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_level_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_level_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLevelRewardUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLevelRewardUpdateNotify)
  return false;
#undef DO_
}

void PlayerLevelRewardUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLevelRewardUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 level_list = 1;
  if (this->level_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _level_list_cached_byte_size_));
  }
  for (int i = 0, n = this->level_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->level_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLevelRewardUpdateNotify)
}

::google::protobuf::uint8* PlayerLevelRewardUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLevelRewardUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 level_list = 1;
  if (this->level_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _level_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->level_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLevelRewardUpdateNotify)
  return target;
}

size_t PlayerLevelRewardUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLevelRewardUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 level_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->level_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _level_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLevelRewardUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLevelRewardUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLevelRewardUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLevelRewardUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLevelRewardUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLevelRewardUpdateNotify)
    MergeFrom(*source);
  }
}

void PlayerLevelRewardUpdateNotify::MergeFrom(const PlayerLevelRewardUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLevelRewardUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  level_list_.MergeFrom(from.level_list_);
}

void PlayerLevelRewardUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLevelRewardUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLevelRewardUpdateNotify::CopyFrom(const PlayerLevelRewardUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLevelRewardUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLevelRewardUpdateNotify::IsInitialized() const {
  return true;
}

void PlayerLevelRewardUpdateNotify::Swap(PlayerLevelRewardUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLevelRewardUpdateNotify::InternalSwap(PlayerLevelRewardUpdateNotify* other) {
  using std::swap;
  level_list_.InternalSwap(&other->level_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLevelRewardUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLevelRewardUpdateNotify

// repeated uint32 level_list = 1;
int PlayerLevelRewardUpdateNotify::level_list_size() const {
  return level_list_.size();
}
void PlayerLevelRewardUpdateNotify::clear_level_list() {
  level_list_.Clear();
}
::google::protobuf::uint32 PlayerLevelRewardUpdateNotify::level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_.Get(index);
}
void PlayerLevelRewardUpdateNotify::set_level_list(int index, ::google::protobuf::uint32 value) {
  level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerLevelRewardUpdateNotify.level_list)
}
void PlayerLevelRewardUpdateNotify::add_level_list(::google::protobuf::uint32 value) {
  level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerLevelRewardUpdateNotify.level_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerLevelRewardUpdateNotify::level_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerLevelRewardUpdateNotify::mutable_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return &level_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GivingRecord::kGivingIdFieldNumber;
const int GivingRecord::kIsFinishedFieldNumber;
const int GivingRecord::kLastGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GivingRecord::GivingRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GivingRecord)
}
GivingRecord::GivingRecord(const GivingRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&giving_id_, &from.giving_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_group_id_) -
    reinterpret_cast<char*>(&giving_id_)) + sizeof(last_group_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GivingRecord)
}

void GivingRecord::SharedCtor() {
  ::memset(&giving_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_group_id_) -
      reinterpret_cast<char*>(&giving_id_)) + sizeof(last_group_id_));
  _cached_size_ = 0;
}

GivingRecord::~GivingRecord() {
  // @@protoc_insertion_point(destructor:proto.GivingRecord)
  SharedDtor();
}

void GivingRecord::SharedDtor() {
}

void GivingRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GivingRecord::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GivingRecord& GivingRecord::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GivingRecord* GivingRecord::New(::google::protobuf::Arena* arena) const {
  GivingRecord* n = new GivingRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GivingRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GivingRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&giving_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_group_id_) -
      reinterpret_cast<char*>(&giving_id_)) + sizeof(last_group_id_));
  _internal_metadata_.Clear();
}

bool GivingRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GivingRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 giving_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GivingRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GivingRecord)
  return false;
#undef DO_
}

void GivingRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GivingRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_id = 1;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giving_id(), output);
  }

  // bool is_finished = 2;
  if (this->is_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_finished(), output);
  }

  // uint32 last_group_id = 3;
  if (this->last_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GivingRecord)
}

::google::protobuf::uint8* GivingRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GivingRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_id = 1;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giving_id(), target);
  }

  // bool is_finished = 2;
  if (this->is_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_finished(), target);
  }

  // uint32 last_group_id = 3;
  if (this->last_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GivingRecord)
  return target;
}

size_t GivingRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GivingRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 giving_id = 1;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  // bool is_finished = 2;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  // uint32 last_group_id = 3;
  if (this->last_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GivingRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GivingRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const GivingRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GivingRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GivingRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GivingRecord)
    MergeFrom(*source);
  }
}

void GivingRecord::MergeFrom(const GivingRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GivingRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
  if (from.is_finished() != 0) {
    set_is_finished(from.is_finished());
  }
  if (from.last_group_id() != 0) {
    set_last_group_id(from.last_group_id());
  }
}

void GivingRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GivingRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GivingRecord::CopyFrom(const GivingRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GivingRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GivingRecord::IsInitialized() const {
  return true;
}

void GivingRecord::Swap(GivingRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GivingRecord::InternalSwap(GivingRecord* other) {
  using std::swap;
  swap(giving_id_, other->giving_id_);
  swap(is_finished_, other->is_finished_);
  swap(last_group_id_, other->last_group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GivingRecord::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GivingRecord

// uint32 giving_id = 1;
void GivingRecord::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 GivingRecord::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.giving_id)
  return giving_id_;
}
void GivingRecord::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.giving_id)
}

// bool is_finished = 2;
void GivingRecord::clear_is_finished() {
  is_finished_ = false;
}
bool GivingRecord::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.is_finished)
  return is_finished_;
}
void GivingRecord::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.is_finished)
}

// uint32 last_group_id = 3;
void GivingRecord::clear_last_group_id() {
  last_group_id_ = 0u;
}
::google::protobuf::uint32 GivingRecord::last_group_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.last_group_id)
  return last_group_id_;
}
void GivingRecord::set_last_group_id(::google::protobuf::uint32 value) {
  
  last_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.last_group_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GivingRecordNotify::kGivingRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GivingRecordNotify::GivingRecordNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GivingRecordNotify)
}
GivingRecordNotify::GivingRecordNotify(const GivingRecordNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      giving_record_list_(from.giving_record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GivingRecordNotify)
}

void GivingRecordNotify::SharedCtor() {
  _cached_size_ = 0;
}

GivingRecordNotify::~GivingRecordNotify() {
  // @@protoc_insertion_point(destructor:proto.GivingRecordNotify)
  SharedDtor();
}

void GivingRecordNotify::SharedDtor() {
}

void GivingRecordNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GivingRecordNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GivingRecordNotify& GivingRecordNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GivingRecordNotify* GivingRecordNotify::New(::google::protobuf::Arena* arena) const {
  GivingRecordNotify* n = new GivingRecordNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GivingRecordNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GivingRecordNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  giving_record_list_.Clear();
  _internal_metadata_.Clear();
}

bool GivingRecordNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GivingRecordNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.GivingRecord giving_record_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_giving_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GivingRecordNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GivingRecordNotify)
  return false;
#undef DO_
}

void GivingRecordNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GivingRecordNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GivingRecord giving_record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->giving_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->giving_record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GivingRecordNotify)
}

::google::protobuf::uint8* GivingRecordNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GivingRecordNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GivingRecord giving_record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->giving_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->giving_record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GivingRecordNotify)
  return target;
}

size_t GivingRecordNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GivingRecordNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.GivingRecord giving_record_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->giving_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->giving_record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GivingRecordNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GivingRecordNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GivingRecordNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GivingRecordNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GivingRecordNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GivingRecordNotify)
    MergeFrom(*source);
  }
}

void GivingRecordNotify::MergeFrom(const GivingRecordNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GivingRecordNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  giving_record_list_.MergeFrom(from.giving_record_list_);
}

void GivingRecordNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GivingRecordNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GivingRecordNotify::CopyFrom(const GivingRecordNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GivingRecordNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GivingRecordNotify::IsInitialized() const {
  return true;
}

void GivingRecordNotify::Swap(GivingRecordNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GivingRecordNotify::InternalSwap(GivingRecordNotify* other) {
  using std::swap;
  giving_record_list_.InternalSwap(&other->giving_record_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GivingRecordNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GivingRecordNotify

// repeated .proto.GivingRecord giving_record_list = 1;
int GivingRecordNotify::giving_record_list_size() const {
  return giving_record_list_.size();
}
void GivingRecordNotify::clear_giving_record_list() {
  giving_record_list_.Clear();
}
const ::proto::GivingRecord& GivingRecordNotify::giving_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Get(index);
}
::proto::GivingRecord* GivingRecordNotify::mutable_giving_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Mutable(index);
}
::proto::GivingRecord* GivingRecordNotify::add_giving_record_list() {
  // @@protoc_insertion_point(field_add:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >*
GivingRecordNotify::mutable_giving_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GivingRecordNotify.giving_record_list)
  return &giving_record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >&
GivingRecordNotify::giving_record_list() const {
  // @@protoc_insertion_point(field_list:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GivingRecordChangeNotify::kGivingRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GivingRecordChangeNotify::GivingRecordChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GivingRecordChangeNotify)
}
GivingRecordChangeNotify::GivingRecordChangeNotify(const GivingRecordChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_giving_record()) {
    giving_record_ = new ::proto::GivingRecord(*from.giving_record_);
  } else {
    giving_record_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.GivingRecordChangeNotify)
}

void GivingRecordChangeNotify::SharedCtor() {
  giving_record_ = NULL;
  _cached_size_ = 0;
}

GivingRecordChangeNotify::~GivingRecordChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.GivingRecordChangeNotify)
  SharedDtor();
}

void GivingRecordChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete giving_record_;
}

void GivingRecordChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GivingRecordChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GivingRecordChangeNotify& GivingRecordChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GivingRecordChangeNotify* GivingRecordChangeNotify::New(::google::protobuf::Arena* arena) const {
  GivingRecordChangeNotify* n = new GivingRecordChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GivingRecordChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GivingRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && giving_record_ != NULL) {
    delete giving_record_;
  }
  giving_record_ = NULL;
  _internal_metadata_.Clear();
}

bool GivingRecordChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GivingRecordChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.GivingRecord giving_record = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_giving_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GivingRecordChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GivingRecordChangeNotify)
  return false;
#undef DO_
}

void GivingRecordChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GivingRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GivingRecord giving_record = 1;
  if (this->has_giving_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->giving_record_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GivingRecordChangeNotify)
}

::google::protobuf::uint8* GivingRecordChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GivingRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GivingRecord giving_record = 1;
  if (this->has_giving_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->giving_record_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GivingRecordChangeNotify)
  return target;
}

size_t GivingRecordChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GivingRecordChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.GivingRecord giving_record = 1;
  if (this->has_giving_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->giving_record_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GivingRecordChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GivingRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GivingRecordChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GivingRecordChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GivingRecordChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GivingRecordChangeNotify)
    MergeFrom(*source);
  }
}

void GivingRecordChangeNotify::MergeFrom(const GivingRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GivingRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_giving_record()) {
    mutable_giving_record()->::proto::GivingRecord::MergeFrom(from.giving_record());
  }
}

void GivingRecordChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GivingRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GivingRecordChangeNotify::CopyFrom(const GivingRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GivingRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GivingRecordChangeNotify::IsInitialized() const {
  return true;
}

void GivingRecordChangeNotify::Swap(GivingRecordChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GivingRecordChangeNotify::InternalSwap(GivingRecordChangeNotify* other) {
  using std::swap;
  swap(giving_record_, other->giving_record_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GivingRecordChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GivingRecordChangeNotify

// .proto.GivingRecord giving_record = 1;
bool GivingRecordChangeNotify::has_giving_record() const {
  return this != internal_default_instance() && giving_record_ != NULL;
}
void GivingRecordChangeNotify::clear_giving_record() {
  if (GetArenaNoVirtual() == NULL && giving_record_ != NULL) delete giving_record_;
  giving_record_ = NULL;
}
const ::proto::GivingRecord& GivingRecordChangeNotify::giving_record() const {
  const ::proto::GivingRecord* p = giving_record_;
  // @@protoc_insertion_point(field_get:proto.GivingRecordChangeNotify.giving_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GivingRecord*>(
      &::proto::_GivingRecord_default_instance_);
}
::proto::GivingRecord* GivingRecordChangeNotify::mutable_giving_record() {
  
  if (giving_record_ == NULL) {
    giving_record_ = new ::proto::GivingRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordChangeNotify.giving_record)
  return giving_record_;
}
::proto::GivingRecord* GivingRecordChangeNotify::release_giving_record() {
  // @@protoc_insertion_point(field_release:proto.GivingRecordChangeNotify.giving_record)
  
  ::proto::GivingRecord* temp = giving_record_;
  giving_record_ = NULL;
  return temp;
}
void GivingRecordChangeNotify::set_allocated_giving_record(::proto::GivingRecord* giving_record) {
  delete giving_record_;
  giving_record_ = giving_record;
  if (giving_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GivingRecordChangeNotify.giving_record)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::ItemGivingReq_ItemGuidCountMapEntry() {}
ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::ItemGivingReq_ItemGuidCountMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[66];
}
void ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::MergeFrom(const ItemGivingReq_ItemGuidCountMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemGivingReq::kGivingIdFieldNumber;
const int ItemGivingReq::kItemParamListFieldNumber;
const int ItemGivingReq::kItemGuidCountMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemGivingReq::ItemGivingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemGivingReq)
}
ItemGivingReq::ItemGivingReq(const ItemGivingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_param_list_(from.item_param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_guid_count_map_.MergeFrom(from.item_guid_count_map_);
  giving_id_ = from.giving_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ItemGivingReq)
}

void ItemGivingReq::SharedCtor() {
  giving_id_ = 0u;
  _cached_size_ = 0;
}

ItemGivingReq::~ItemGivingReq() {
  // @@protoc_insertion_point(destructor:proto.ItemGivingReq)
  SharedDtor();
}

void ItemGivingReq::SharedDtor() {
}

void ItemGivingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGivingReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemGivingReq& ItemGivingReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemGivingReq* ItemGivingReq::New(::google::protobuf::Arena* arena) const {
  ItemGivingReq* n = new ItemGivingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemGivingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemGivingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_param_list_.Clear();
  item_guid_count_map_.Clear();
  giving_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ItemGivingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemGivingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 giving_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_param_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_param_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, uint32> item_guid_count_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ItemGivingReq_ItemGuidCountMapEntry::Parser< ::google::protobuf::internal::MapField<
              ItemGivingReq_ItemGuidCountMapEntry,
              ::google::protobuf::uint64, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 > > parser(&item_guid_count_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemGivingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemGivingReq)
  return false;
#undef DO_
}

void ItemGivingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemGivingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_id = 1;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giving_id(), output);
  }

  // repeated .proto.ItemParam item_param_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_param_list(static_cast<int>(i)), output);
  }

  // map<uint64, uint32> item_guid_count_map = 3;
  if (!this->item_guid_count_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->item_guid_count_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->item_guid_count_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemGivingReq)
}

::google::protobuf::uint8* ItemGivingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemGivingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_id = 1;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giving_id(), target);
  }

  // repeated .proto.ItemParam item_param_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->item_param_list(static_cast<int>(i)), deterministic, target);
  }

  // map<uint64, uint32> item_guid_count_map = 3;
  if (!this->item_guid_count_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->item_guid_count_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->item_guid_count_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemGivingReq)
  return target;
}

size_t ItemGivingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemGivingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_param_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_param_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_param_list(static_cast<int>(i)));
    }
  }

  // map<uint64, uint32> item_guid_count_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->item_guid_count_map_size());
  {
    ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
        it = this->item_guid_count_map().begin();
        it != this->item_guid_count_map().end(); ++it) {
      entry.reset(item_guid_count_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 giving_id = 1;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGivingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemGivingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemGivingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemGivingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemGivingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemGivingReq)
    MergeFrom(*source);
  }
}

void ItemGivingReq::MergeFrom(const ItemGivingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemGivingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_param_list_.MergeFrom(from.item_param_list_);
  item_guid_count_map_.MergeFrom(from.item_guid_count_map_);
  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
}

void ItemGivingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemGivingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGivingReq::CopyFrom(const ItemGivingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemGivingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGivingReq::IsInitialized() const {
  return true;
}

void ItemGivingReq::Swap(ItemGivingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemGivingReq::InternalSwap(ItemGivingReq* other) {
  using std::swap;
  item_param_list_.InternalSwap(&other->item_param_list_);
  item_guid_count_map_.Swap(&other->item_guid_count_map_);
  swap(giving_id_, other->giving_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemGivingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemGivingReq

// uint32 giving_id = 1;
void ItemGivingReq::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 ItemGivingReq::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.giving_id)
  return giving_id_;
}
void ItemGivingReq::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingReq.giving_id)
}

// repeated .proto.ItemParam item_param_list = 2;
int ItemGivingReq::item_param_list_size() const {
  return item_param_list_.size();
}
void ItemGivingReq::clear_item_param_list() {
  item_param_list_.Clear();
}
const ::proto::ItemParam& ItemGivingReq::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Get(index);
}
::proto::ItemParam* ItemGivingReq::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Mutable(index);
}
::proto::ItemParam* ItemGivingReq::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ItemGivingReq::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ItemGivingReq.item_param_list)
  return &item_param_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ItemGivingReq::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.ItemGivingReq.item_param_list)
  return item_param_list_;
}

// map<uint64, uint32> item_guid_count_map = 3;
int ItemGivingReq::item_guid_count_map_size() const {
  return item_guid_count_map_.size();
}
void ItemGivingReq::clear_item_guid_count_map() {
  item_guid_count_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
ItemGivingReq::item_guid_count_map() const {
  // @@protoc_insertion_point(field_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
ItemGivingReq::mutable_item_guid_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemGivingRsp::kRetcodeFieldNumber;
const int ItemGivingRsp::kGivingIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemGivingRsp::ItemGivingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemGivingRsp)
}
ItemGivingRsp::ItemGivingRsp(const ItemGivingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&giving_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(giving_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ItemGivingRsp)
}

void ItemGivingRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(giving_id_));
  _cached_size_ = 0;
}

ItemGivingRsp::~ItemGivingRsp() {
  // @@protoc_insertion_point(destructor:proto.ItemGivingRsp)
  SharedDtor();
}

void ItemGivingRsp::SharedDtor() {
}

void ItemGivingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGivingRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemGivingRsp& ItemGivingRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemGivingRsp* ItemGivingRsp::New(::google::protobuf::Arena* arena) const {
  ItemGivingRsp* n = new ItemGivingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemGivingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemGivingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(giving_id_));
  _internal_metadata_.Clear();
}

bool ItemGivingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemGivingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 giving_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemGivingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemGivingRsp)
  return false;
#undef DO_
}

void ItemGivingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemGivingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 giving_id = 2;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->giving_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemGivingRsp)
}

::google::protobuf::uint8* ItemGivingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemGivingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 giving_id = 2;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->giving_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemGivingRsp)
  return target;
}

size_t ItemGivingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemGivingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 giving_id = 2;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGivingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemGivingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemGivingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemGivingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemGivingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemGivingRsp)
    MergeFrom(*source);
  }
}

void ItemGivingRsp::MergeFrom(const ItemGivingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemGivingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
}

void ItemGivingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemGivingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGivingRsp::CopyFrom(const ItemGivingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemGivingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGivingRsp::IsInitialized() const {
  return true;
}

void ItemGivingRsp::Swap(ItemGivingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemGivingRsp::InternalSwap(ItemGivingRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(giving_id_, other->giving_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemGivingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemGivingRsp

// int32 retcode = 1;
void ItemGivingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ItemGivingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.retcode)
  return retcode_;
}
void ItemGivingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.retcode)
}

// uint32 giving_id = 2;
void ItemGivingRsp::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 ItemGivingRsp::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.giving_id)
  return giving_id_;
}
void ItemGivingRsp::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.giving_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookArgsReq::kRecipeIdFieldNumber;
const int PlayerCookArgsReq::kAssistAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookArgsReq::PlayerCookArgsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookArgsReq)
}
PlayerCookArgsReq::PlayerCookArgsReq(const PlayerCookArgsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recipe_id_, &from.recipe_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&assist_avatar_) -
    reinterpret_cast<char*>(&recipe_id_)) + sizeof(assist_avatar_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookArgsReq)
}

void PlayerCookArgsReq::SharedCtor() {
  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_avatar_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(assist_avatar_));
  _cached_size_ = 0;
}

PlayerCookArgsReq::~PlayerCookArgsReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookArgsReq)
  SharedDtor();
}

void PlayerCookArgsReq::SharedDtor() {
}

void PlayerCookArgsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookArgsReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookArgsReq& PlayerCookArgsReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookArgsReq* PlayerCookArgsReq::New(::google::protobuf::Arena* arena) const {
  PlayerCookArgsReq* n = new PlayerCookArgsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookArgsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookArgsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_avatar_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(assist_avatar_));
  _internal_metadata_.Clear();
}

bool PlayerCookArgsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookArgsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 recipe_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 assist_avatar = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assist_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookArgsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookArgsReq)
  return false;
#undef DO_
}

void PlayerCookArgsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookArgsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recipe_id(), output);
  }

  // uint32 assist_avatar = 2;
  if (this->assist_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->assist_avatar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookArgsReq)
}

::google::protobuf::uint8* PlayerCookArgsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookArgsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recipe_id(), target);
  }

  // uint32 assist_avatar = 2;
  if (this->assist_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->assist_avatar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookArgsReq)
  return target;
}

size_t PlayerCookArgsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookArgsReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 recipe_id = 1;
  if (this->recipe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_id());
  }

  // uint32 assist_avatar = 2;
  if (this->assist_avatar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->assist_avatar());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookArgsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookArgsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookArgsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookArgsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookArgsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookArgsReq)
    MergeFrom(*source);
  }
}

void PlayerCookArgsReq::MergeFrom(const PlayerCookArgsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookArgsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipe_id() != 0) {
    set_recipe_id(from.recipe_id());
  }
  if (from.assist_avatar() != 0) {
    set_assist_avatar(from.assist_avatar());
  }
}

void PlayerCookArgsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookArgsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookArgsReq::CopyFrom(const PlayerCookArgsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookArgsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookArgsReq::IsInitialized() const {
  return true;
}

void PlayerCookArgsReq::Swap(PlayerCookArgsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookArgsReq::InternalSwap(PlayerCookArgsReq* other) {
  using std::swap;
  swap(recipe_id_, other->recipe_id_);
  swap(assist_avatar_, other->assist_avatar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookArgsReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookArgsReq

// uint32 recipe_id = 1;
void PlayerCookArgsReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
::google::protobuf::uint32 PlayerCookArgsReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.recipe_id)
  return recipe_id_;
}
void PlayerCookArgsReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.recipe_id)
}

// uint32 assist_avatar = 2;
void PlayerCookArgsReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
::google::protobuf::uint32 PlayerCookArgsReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.assist_avatar)
  return assist_avatar_;
}
void PlayerCookArgsReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.assist_avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookArgsRsp::kRetcodeFieldNumber;
const int PlayerCookArgsRsp::kQteRangeRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookArgsRsp::PlayerCookArgsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookArgsRsp)
}
PlayerCookArgsRsp::PlayerCookArgsRsp(const PlayerCookArgsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&qte_range_ratio_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(qte_range_ratio_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookArgsRsp)
}

void PlayerCookArgsRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qte_range_ratio_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(qte_range_ratio_));
  _cached_size_ = 0;
}

PlayerCookArgsRsp::~PlayerCookArgsRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookArgsRsp)
  SharedDtor();
}

void PlayerCookArgsRsp::SharedDtor() {
}

void PlayerCookArgsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookArgsRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookArgsRsp& PlayerCookArgsRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookArgsRsp* PlayerCookArgsRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCookArgsRsp* n = new PlayerCookArgsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookArgsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookArgsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qte_range_ratio_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(qte_range_ratio_));
  _internal_metadata_.Clear();
}

bool PlayerCookArgsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookArgsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qte_range_ratio = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qte_range_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookArgsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookArgsRsp)
  return false;
#undef DO_
}

void PlayerCookArgsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookArgsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // float qte_range_ratio = 2;
  if (this->qte_range_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->qte_range_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookArgsRsp)
}

::google::protobuf::uint8* PlayerCookArgsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookArgsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // float qte_range_ratio = 2;
  if (this->qte_range_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->qte_range_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookArgsRsp)
  return target;
}

size_t PlayerCookArgsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookArgsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // float qte_range_ratio = 2;
  if (this->qte_range_ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookArgsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookArgsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookArgsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookArgsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookArgsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookArgsRsp)
    MergeFrom(*source);
  }
}

void PlayerCookArgsRsp::MergeFrom(const PlayerCookArgsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookArgsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.qte_range_ratio() != 0) {
    set_qte_range_ratio(from.qte_range_ratio());
  }
}

void PlayerCookArgsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookArgsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookArgsRsp::CopyFrom(const PlayerCookArgsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookArgsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookArgsRsp::IsInitialized() const {
  return true;
}

void PlayerCookArgsRsp::Swap(PlayerCookArgsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookArgsRsp::InternalSwap(PlayerCookArgsRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(qte_range_ratio_, other->qte_range_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookArgsRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookArgsRsp

// uint32 retcode = 1;
void PlayerCookArgsRsp::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 PlayerCookArgsRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.retcode)
  return retcode_;
}
void PlayerCookArgsRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.retcode)
}

// float qte_range_ratio = 2;
void PlayerCookArgsRsp::clear_qte_range_ratio() {
  qte_range_ratio_ = 0;
}
float PlayerCookArgsRsp::qte_range_ratio() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.qte_range_ratio)
  return qte_range_ratio_;
}
void PlayerCookArgsRsp::set_qte_range_ratio(float value) {
  
  qte_range_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.qte_range_ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLuaShellNotify::kIdFieldNumber;
const int PlayerLuaShellNotify::kLuaShellFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLuaShellNotify::PlayerLuaShellNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLuaShellNotify)
}
PlayerLuaShellNotify::PlayerLuaShellNotify(const PlayerLuaShellNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lua_shell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lua_shell().size() > 0) {
    lua_shell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lua_shell_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLuaShellNotify)
}

void PlayerLuaShellNotify::SharedCtor() {
  lua_shell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _cached_size_ = 0;
}

PlayerLuaShellNotify::~PlayerLuaShellNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerLuaShellNotify)
  SharedDtor();
}

void PlayerLuaShellNotify::SharedDtor() {
  lua_shell_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerLuaShellNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLuaShellNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLuaShellNotify& PlayerLuaShellNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLuaShellNotify* PlayerLuaShellNotify::New(::google::protobuf::Arena* arena) const {
  PlayerLuaShellNotify* n = new PlayerLuaShellNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLuaShellNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLuaShellNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lua_shell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerLuaShellNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLuaShellNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes lua_shell = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_lua_shell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLuaShellNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLuaShellNotify)
  return false;
#undef DO_
}

void PlayerLuaShellNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLuaShellNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // bytes lua_shell = 2;
  if (this->lua_shell().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->lua_shell(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLuaShellNotify)
}

::google::protobuf::uint8* PlayerLuaShellNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLuaShellNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // bytes lua_shell = 2;
  if (this->lua_shell().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->lua_shell(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLuaShellNotify)
  return target;
}

size_t PlayerLuaShellNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLuaShellNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes lua_shell = 2;
  if (this->lua_shell().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->lua_shell());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLuaShellNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLuaShellNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLuaShellNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLuaShellNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLuaShellNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLuaShellNotify)
    MergeFrom(*source);
  }
}

void PlayerLuaShellNotify::MergeFrom(const PlayerLuaShellNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLuaShellNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lua_shell().size() > 0) {

    lua_shell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lua_shell_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PlayerLuaShellNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLuaShellNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLuaShellNotify::CopyFrom(const PlayerLuaShellNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLuaShellNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLuaShellNotify::IsInitialized() const {
  return true;
}

void PlayerLuaShellNotify::Swap(PlayerLuaShellNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLuaShellNotify::InternalSwap(PlayerLuaShellNotify* other) {
  using std::swap;
  lua_shell_.Swap(&other->lua_shell_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLuaShellNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLuaShellNotify

// uint32 id = 1;
void PlayerLuaShellNotify::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 PlayerLuaShellNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.id)
  return id_;
}
void PlayerLuaShellNotify::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.id)
}

// bytes lua_shell = 2;
void PlayerLuaShellNotify::clear_lua_shell() {
  lua_shell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLuaShellNotify::lua_shell() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.GetNoArena();
}
void PlayerLuaShellNotify::set_lua_shell(const ::std::string& value) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.lua_shell)
}
#if LANG_CXX11
void PlayerLuaShellNotify::set_lua_shell(::std::string&& value) {
  
  lua_shell_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLuaShellNotify.lua_shell)
}
#endif
void PlayerLuaShellNotify::set_lua_shell(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLuaShellNotify.lua_shell)
}
void PlayerLuaShellNotify::set_lua_shell(const void* value, size_t size) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLuaShellNotify.lua_shell)
}
::std::string* PlayerLuaShellNotify::mutable_lua_shell() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLuaShellNotify::release_lua_shell() {
  // @@protoc_insertion_point(field_release:proto.PlayerLuaShellNotify.lua_shell)
  
  return lua_shell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLuaShellNotify::set_allocated_lua_shell(::std::string* lua_shell) {
  if (lua_shell != NULL) {
    
  } else {
    
  }
  lua_shell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lua_shell);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLuaShellNotify.lua_shell)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDisconnectClientNotify::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDisconnectClientNotify::ServerDisconnectClientNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDisconnectClientNotify)
}
ServerDisconnectClientNotify::ServerDisconnectClientNotify(const ServerDisconnectClientNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerDisconnectClientNotify)
}

void ServerDisconnectClientNotify::SharedCtor() {
  data_ = 0u;
  _cached_size_ = 0;
}

ServerDisconnectClientNotify::~ServerDisconnectClientNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerDisconnectClientNotify)
  SharedDtor();
}

void ServerDisconnectClientNotify::SharedDtor() {
}

void ServerDisconnectClientNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDisconnectClientNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDisconnectClientNotify& ServerDisconnectClientNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDisconnectClientNotify* ServerDisconnectClientNotify::New(::google::protobuf::Arena* arena) const {
  ServerDisconnectClientNotify* n = new ServerDisconnectClientNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDisconnectClientNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDisconnectClientNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerDisconnectClientNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDisconnectClientNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDisconnectClientNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDisconnectClientNotify)
  return false;
#undef DO_
}

void ServerDisconnectClientNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDisconnectClientNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDisconnectClientNotify)
}

::google::protobuf::uint8* ServerDisconnectClientNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDisconnectClientNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDisconnectClientNotify)
  return target;
}

size_t ServerDisconnectClientNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDisconnectClientNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDisconnectClientNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDisconnectClientNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDisconnectClientNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDisconnectClientNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDisconnectClientNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDisconnectClientNotify)
    MergeFrom(*source);
  }
}

void ServerDisconnectClientNotify::MergeFrom(const ServerDisconnectClientNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDisconnectClientNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void ServerDisconnectClientNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDisconnectClientNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDisconnectClientNotify::CopyFrom(const ServerDisconnectClientNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDisconnectClientNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDisconnectClientNotify::IsInitialized() const {
  return true;
}

void ServerDisconnectClientNotify::Swap(ServerDisconnectClientNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDisconnectClientNotify::InternalSwap(ServerDisconnectClientNotify* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDisconnectClientNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDisconnectClientNotify

// uint32 data = 1;
void ServerDisconnectClientNotify::clear_data() {
  data_ = 0u;
}
::google::protobuf::uint32 ServerDisconnectClientNotify::data() const {
  // @@protoc_insertion_point(field_get:proto.ServerDisconnectClientNotify.data)
  return data_;
}
void ServerDisconnectClientNotify::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDisconnectClientNotify.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
