// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_ability.proto

#ifndef PROTOBUF_cmd_2fcmd_5fability_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fability_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "cmd/cmd_fight.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AbilityActionBlink;
class AbilityActionBlinkDefaultTypeInternal;
extern AbilityActionBlinkDefaultTypeInternal _AbilityActionBlink_default_instance_;
class AbilityActionCreateGadget;
class AbilityActionCreateGadgetDefaultTypeInternal;
extern AbilityActionCreateGadgetDefaultTypeInternal _AbilityActionCreateGadget_default_instance_;
class AbilityActionGenerateElemBall;
class AbilityActionGenerateElemBallDefaultTypeInternal;
extern AbilityActionGenerateElemBallDefaultTypeInternal _AbilityActionGenerateElemBall_default_instance_;
class AbilityActionSetCrashDamage;
class AbilityActionSetCrashDamageDefaultTypeInternal;
extern AbilityActionSetCrashDamageDefaultTypeInternal _AbilityActionSetCrashDamage_default_instance_;
class AbilityActionSummon;
class AbilityActionSummonDefaultTypeInternal;
extern AbilityActionSummonDefaultTypeInternal _AbilityActionSummon_default_instance_;
class AbilityActionTriggerAbility;
class AbilityActionTriggerAbilityDefaultTypeInternal;
extern AbilityActionTriggerAbilityDefaultTypeInternal _AbilityActionTriggerAbility_default_instance_;
class AbilityApplyLevelModifier;
class AbilityApplyLevelModifierDefaultTypeInternal;
extern AbilityApplyLevelModifierDefaultTypeInternal _AbilityApplyLevelModifier_default_instance_;
class AbilityBornType;
class AbilityBornTypeDefaultTypeInternal;
extern AbilityBornTypeDefaultTypeInternal _AbilityBornType_default_instance_;
class AbilityInvocationFailNotify;
class AbilityInvocationFailNotifyDefaultTypeInternal;
extern AbilityInvocationFailNotifyDefaultTypeInternal _AbilityInvocationFailNotify_default_instance_;
class AbilityInvocationFixedNotify;
class AbilityInvocationFixedNotifyDefaultTypeInternal;
extern AbilityInvocationFixedNotifyDefaultTypeInternal _AbilityInvocationFixedNotify_default_instance_;
class AbilityInvocationsNotify;
class AbilityInvocationsNotifyDefaultTypeInternal;
extern AbilityInvocationsNotifyDefaultTypeInternal _AbilityInvocationsNotify_default_instance_;
class AbilityInvokeEntry;
class AbilityInvokeEntryDefaultTypeInternal;
extern AbilityInvokeEntryDefaultTypeInternal _AbilityInvokeEntry_default_instance_;
class AbilityInvokeEntryHead;
class AbilityInvokeEntryHeadDefaultTypeInternal;
extern AbilityInvokeEntryHeadDefaultTypeInternal _AbilityInvokeEntryHead_default_instance_;
class AbilityMetaAddAbility;
class AbilityMetaAddAbilityDefaultTypeInternal;
extern AbilityMetaAddAbilityDefaultTypeInternal _AbilityMetaAddAbility_default_instance_;
class AbilityMetaAddOrGetAbilityAndTrigger;
class AbilityMetaAddOrGetAbilityAndTriggerDefaultTypeInternal;
extern AbilityMetaAddOrGetAbilityAndTriggerDefaultTypeInternal _AbilityMetaAddOrGetAbilityAndTrigger_default_instance_;
class AbilityMetaModifierChange;
class AbilityMetaModifierChangeDefaultTypeInternal;
extern AbilityMetaModifierChangeDefaultTypeInternal _AbilityMetaModifierChange_default_instance_;
class AbilityMetaModifierDurabilityChange;
class AbilityMetaModifierDurabilityChangeDefaultTypeInternal;
extern AbilityMetaModifierDurabilityChangeDefaultTypeInternal _AbilityMetaModifierDurabilityChange_default_instance_;
class AbilityMetaReInitOverrideMap;
class AbilityMetaReInitOverrideMapDefaultTypeInternal;
extern AbilityMetaReInitOverrideMapDefaultTypeInternal _AbilityMetaReInitOverrideMap_default_instance_;
class AbilityMetaSetAbilityTrigger;
class AbilityMetaSetAbilityTriggerDefaultTypeInternal;
extern AbilityMetaSetAbilityTriggerDefaultTypeInternal _AbilityMetaSetAbilityTrigger_default_instance_;
class AbilityMetaSetKilledState;
class AbilityMetaSetKilledStateDefaultTypeInternal;
extern AbilityMetaSetKilledStateDefaultTypeInternal _AbilityMetaSetKilledState_default_instance_;
class AbilityMetaSetModifierApplyEntityId;
class AbilityMetaSetModifierApplyEntityIdDefaultTypeInternal;
extern AbilityMetaSetModifierApplyEntityIdDefaultTypeInternal _AbilityMetaSetModifierApplyEntityId_default_instance_;
class AbilityMetaSpecialFloatArgument;
class AbilityMetaSpecialFloatArgumentDefaultTypeInternal;
extern AbilityMetaSpecialFloatArgumentDefaultTypeInternal _AbilityMetaSpecialFloatArgument_default_instance_;
class AbilityMixinAvatarSteerByCamera;
class AbilityMixinAvatarSteerByCameraDefaultTypeInternal;
extern AbilityMixinAvatarSteerByCameraDefaultTypeInternal _AbilityMixinAvatarSteerByCamera_default_instance_;
class AbilityMixinCostStamina;
class AbilityMixinCostStaminaDefaultTypeInternal;
extern AbilityMixinCostStaminaDefaultTypeInternal _AbilityMixinCostStamina_default_instance_;
class AbilityMixinElementShield;
class AbilityMixinElementShieldDefaultTypeInternal;
extern AbilityMixinElementShieldDefaultTypeInternal _AbilityMixinElementShield_default_instance_;
class AbilityMixinEliteShield;
class AbilityMixinEliteShieldDefaultTypeInternal;
extern AbilityMixinEliteShieldDefaultTypeInternal _AbilityMixinEliteShield_default_instance_;
class AbilityMixinEmpty;
class AbilityMixinEmptyDefaultTypeInternal;
extern AbilityMixinEmptyDefaultTypeInternal _AbilityMixinEmpty_default_instance_;
class AbilityMixinGlobalShield;
class AbilityMixinGlobalShieldDefaultTypeInternal;
extern AbilityMixinGlobalShieldDefaultTypeInternal _AbilityMixinGlobalShield_default_instance_;
class AbilityMixinShieldBar;
class AbilityMixinShieldBarDefaultTypeInternal;
extern AbilityMixinShieldBarDefaultTypeInternal _AbilityMixinShieldBar_default_instance_;
class AbilityMixinWindSeedSpawner;
class AbilityMixinWindSeedSpawnerDefaultTypeInternal;
extern AbilityMixinWindSeedSpawnerDefaultTypeInternal _AbilityMixinWindSeedSpawner_default_instance_;
class AbilityMixinWindSeedSpawner_AddSignal;
class AbilityMixinWindSeedSpawner_AddSignalDefaultTypeInternal;
extern AbilityMixinWindSeedSpawner_AddSignalDefaultTypeInternal _AbilityMixinWindSeedSpawner_AddSignal_default_instance_;
class AbilityMixinWindSeedSpawner_CatchSeed;
class AbilityMixinWindSeedSpawner_CatchSeedDefaultTypeInternal;
extern AbilityMixinWindSeedSpawner_CatchSeedDefaultTypeInternal _AbilityMixinWindSeedSpawner_CatchSeed_default_instance_;
class AbilityMixinWindSeedSpawner_RefreshSeed;
class AbilityMixinWindSeedSpawner_RefreshSeedDefaultTypeInternal;
extern AbilityMixinWindSeedSpawner_RefreshSeedDefaultTypeInternal _AbilityMixinWindSeedSpawner_RefreshSeed_default_instance_;
class AbilityMixinWindZone;
class AbilityMixinWindZoneDefaultTypeInternal;
extern AbilityMixinWindZoneDefaultTypeInternal _AbilityMixinWindZone_default_instance_;
class AbilityResetReason;
class AbilityResetReasonDefaultTypeInternal;
extern AbilityResetReasonDefaultTypeInternal _AbilityResetReason_default_instance_;
class AvatarAbilityResetFinishNotify;
class AvatarAbilityResetFinishNotifyDefaultTypeInternal;
extern AvatarAbilityResetFinishNotifyDefaultTypeInternal _AvatarAbilityResetFinishNotify_default_instance_;
class AvatarAbilityResetNotify;
class AvatarAbilityResetNotifyDefaultTypeInternal;
extern AvatarAbilityResetNotifyDefaultTypeInternal _AvatarAbilityResetNotify_default_instance_;
class ClientAbilitiesInitFinishCombineNotify;
class ClientAbilitiesInitFinishCombineNotifyDefaultTypeInternal;
extern ClientAbilitiesInitFinishCombineNotifyDefaultTypeInternal _ClientAbilitiesInitFinishCombineNotify_default_instance_;
class ClientAbilityInitBeginNotify;
class ClientAbilityInitBeginNotifyDefaultTypeInternal;
extern ClientAbilityInitBeginNotifyDefaultTypeInternal _ClientAbilityInitBeginNotify_default_instance_;
class ClientAbilityInitFinishNotify;
class ClientAbilityInitFinishNotifyDefaultTypeInternal;
extern ClientAbilityInitFinishNotifyDefaultTypeInternal _ClientAbilityInitFinishNotify_default_instance_;
class ElementReactionLog;
class ElementReactionLogDefaultTypeInternal;
extern ElementReactionLogDefaultTypeInternal _ElementReactionLog_default_instance_;
class ElementReactionLogNotify;
class ElementReactionLogNotifyDefaultTypeInternal;
extern ElementReactionLogNotifyDefaultTypeInternal _ElementReactionLogNotify_default_instance_;
class EntityAbilityInvokeEntry;
class EntityAbilityInvokeEntryDefaultTypeInternal;
extern EntityAbilityInvokeEntryDefaultTypeInternal _EntityAbilityInvokeEntry_default_instance_;
class ModifierProperty;
class ModifierPropertyDefaultTypeInternal;
extern ModifierPropertyDefaultTypeInternal _ModifierProperty_default_instance_;
class WindSeedClientNotify;
class WindSeedClientNotifyDefaultTypeInternal;
extern WindSeedClientNotifyDefaultTypeInternal _WindSeedClientNotify_default_instance_;
class WindSeedClientNotify_AddWindBulletNotify;
class WindSeedClientNotify_AddWindBulletNotifyDefaultTypeInternal;
extern WindSeedClientNotify_AddWindBulletNotifyDefaultTypeInternal _WindSeedClientNotify_AddWindBulletNotify_default_instance_;
class WindSeedClientNotify_RefreshNotify;
class WindSeedClientNotify_RefreshNotifyDefaultTypeInternal;
extern WindSeedClientNotify_RefreshNotifyDefaultTypeInternal _WindSeedClientNotify_RefreshNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fability_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fability_2eproto

enum AbilityInvocationFixedNotify_CmdId {
  AbilityInvocationFixedNotify_CmdId_NONE = 0,
  AbilityInvocationFixedNotify_CmdId_CMD_ID = 1101,
  AbilityInvocationFixedNotify_CmdId_ENET_CHANNEL_ID = 0,
  AbilityInvocationFixedNotify_CmdId_ENET_IS_RELIABLE = 1,
  AbilityInvocationFixedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AbilityInvocationFixedNotify_CmdId_AbilityInvocationFixedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityInvocationFixedNotify_CmdId_AbilityInvocationFixedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityInvocationFixedNotify_CmdId_IsValid(int value);
const AbilityInvocationFixedNotify_CmdId AbilityInvocationFixedNotify_CmdId_CmdId_MIN = AbilityInvocationFixedNotify_CmdId_NONE;
const AbilityInvocationFixedNotify_CmdId AbilityInvocationFixedNotify_CmdId_CmdId_MAX = AbilityInvocationFixedNotify_CmdId_CMD_ID;
const int AbilityInvocationFixedNotify_CmdId_CmdId_ARRAYSIZE = AbilityInvocationFixedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityInvocationFixedNotify_CmdId_descriptor();
inline const ::std::string& AbilityInvocationFixedNotify_CmdId_Name(AbilityInvocationFixedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityInvocationFixedNotify_CmdId_descriptor(), value);
}
inline bool AbilityInvocationFixedNotify_CmdId_Parse(
    const ::std::string& name, AbilityInvocationFixedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityInvocationFixedNotify_CmdId>(
    AbilityInvocationFixedNotify_CmdId_descriptor(), name, value);
}
enum AbilityInvocationsNotify_CmdId {
  AbilityInvocationsNotify_CmdId_NONE = 0,
  AbilityInvocationsNotify_CmdId_CMD_ID = 1102,
  AbilityInvocationsNotify_CmdId_ENET_CHANNEL_ID = 0,
  AbilityInvocationsNotify_CmdId_ENET_IS_RELIABLE = 1,
  AbilityInvocationsNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AbilityInvocationsNotify_CmdId_AbilityInvocationsNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityInvocationsNotify_CmdId_AbilityInvocationsNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityInvocationsNotify_CmdId_IsValid(int value);
const AbilityInvocationsNotify_CmdId AbilityInvocationsNotify_CmdId_CmdId_MIN = AbilityInvocationsNotify_CmdId_NONE;
const AbilityInvocationsNotify_CmdId AbilityInvocationsNotify_CmdId_CmdId_MAX = AbilityInvocationsNotify_CmdId_CMD_ID;
const int AbilityInvocationsNotify_CmdId_CmdId_ARRAYSIZE = AbilityInvocationsNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityInvocationsNotify_CmdId_descriptor();
inline const ::std::string& AbilityInvocationsNotify_CmdId_Name(AbilityInvocationsNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityInvocationsNotify_CmdId_descriptor(), value);
}
inline bool AbilityInvocationsNotify_CmdId_Parse(
    const ::std::string& name, AbilityInvocationsNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityInvocationsNotify_CmdId>(
    AbilityInvocationsNotify_CmdId_descriptor(), name, value);
}
enum ClientAbilityInitBeginNotify_CmdId {
  ClientAbilityInitBeginNotify_CmdId_NONE = 0,
  ClientAbilityInitBeginNotify_CmdId_CMD_ID = 1103,
  ClientAbilityInitBeginNotify_CmdId_ENET_CHANNEL_ID = 0,
  ClientAbilityInitBeginNotify_CmdId_ENET_IS_RELIABLE = 1,
  ClientAbilityInitBeginNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ClientAbilityInitBeginNotify_CmdId_ClientAbilityInitBeginNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientAbilityInitBeginNotify_CmdId_ClientAbilityInitBeginNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientAbilityInitBeginNotify_CmdId_IsValid(int value);
const ClientAbilityInitBeginNotify_CmdId ClientAbilityInitBeginNotify_CmdId_CmdId_MIN = ClientAbilityInitBeginNotify_CmdId_NONE;
const ClientAbilityInitBeginNotify_CmdId ClientAbilityInitBeginNotify_CmdId_CmdId_MAX = ClientAbilityInitBeginNotify_CmdId_CMD_ID;
const int ClientAbilityInitBeginNotify_CmdId_CmdId_ARRAYSIZE = ClientAbilityInitBeginNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientAbilityInitBeginNotify_CmdId_descriptor();
inline const ::std::string& ClientAbilityInitBeginNotify_CmdId_Name(ClientAbilityInitBeginNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientAbilityInitBeginNotify_CmdId_descriptor(), value);
}
inline bool ClientAbilityInitBeginNotify_CmdId_Parse(
    const ::std::string& name, ClientAbilityInitBeginNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientAbilityInitBeginNotify_CmdId>(
    ClientAbilityInitBeginNotify_CmdId_descriptor(), name, value);
}
enum ClientAbilityInitFinishNotify_CmdId {
  ClientAbilityInitFinishNotify_CmdId_NONE = 0,
  ClientAbilityInitFinishNotify_CmdId_CMD_ID = 1104,
  ClientAbilityInitFinishNotify_CmdId_ENET_CHANNEL_ID = 0,
  ClientAbilityInitFinishNotify_CmdId_ENET_IS_RELIABLE = 1,
  ClientAbilityInitFinishNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ClientAbilityInitFinishNotify_CmdId_ClientAbilityInitFinishNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientAbilityInitFinishNotify_CmdId_ClientAbilityInitFinishNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientAbilityInitFinishNotify_CmdId_IsValid(int value);
const ClientAbilityInitFinishNotify_CmdId ClientAbilityInitFinishNotify_CmdId_CmdId_MIN = ClientAbilityInitFinishNotify_CmdId_NONE;
const ClientAbilityInitFinishNotify_CmdId ClientAbilityInitFinishNotify_CmdId_CmdId_MAX = ClientAbilityInitFinishNotify_CmdId_CMD_ID;
const int ClientAbilityInitFinishNotify_CmdId_CmdId_ARRAYSIZE = ClientAbilityInitFinishNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientAbilityInitFinishNotify_CmdId_descriptor();
inline const ::std::string& ClientAbilityInitFinishNotify_CmdId_Name(ClientAbilityInitFinishNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientAbilityInitFinishNotify_CmdId_descriptor(), value);
}
inline bool ClientAbilityInitFinishNotify_CmdId_Parse(
    const ::std::string& name, ClientAbilityInitFinishNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientAbilityInitFinishNotify_CmdId>(
    ClientAbilityInitFinishNotify_CmdId_descriptor(), name, value);
}
enum AbilityInvocationFailNotify_CmdId {
  AbilityInvocationFailNotify_CmdId_NONE = 0,
  AbilityInvocationFailNotify_CmdId_CMD_ID = 1105,
  AbilityInvocationFailNotify_CmdId_ENET_CHANNEL_ID = 0,
  AbilityInvocationFailNotify_CmdId_ENET_IS_RELIABLE = 1,
  AbilityInvocationFailNotify_CmdId_AbilityInvocationFailNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityInvocationFailNotify_CmdId_AbilityInvocationFailNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityInvocationFailNotify_CmdId_IsValid(int value);
const AbilityInvocationFailNotify_CmdId AbilityInvocationFailNotify_CmdId_CmdId_MIN = AbilityInvocationFailNotify_CmdId_NONE;
const AbilityInvocationFailNotify_CmdId AbilityInvocationFailNotify_CmdId_CmdId_MAX = AbilityInvocationFailNotify_CmdId_CMD_ID;
const int AbilityInvocationFailNotify_CmdId_CmdId_ARRAYSIZE = AbilityInvocationFailNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityInvocationFailNotify_CmdId_descriptor();
inline const ::std::string& AbilityInvocationFailNotify_CmdId_Name(AbilityInvocationFailNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityInvocationFailNotify_CmdId_descriptor(), value);
}
inline bool AbilityInvocationFailNotify_CmdId_Parse(
    const ::std::string& name, AbilityInvocationFailNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityInvocationFailNotify_CmdId>(
    AbilityInvocationFailNotify_CmdId_descriptor(), name, value);
}
enum AvatarAbilityResetNotify_CmdId {
  AvatarAbilityResetNotify_CmdId_NONE = 0,
  AvatarAbilityResetNotify_CmdId_CMD_ID = 1106,
  AvatarAbilityResetNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarAbilityResetNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarAbilityResetNotify_CmdId_AvatarAbilityResetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarAbilityResetNotify_CmdId_AvatarAbilityResetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarAbilityResetNotify_CmdId_IsValid(int value);
const AvatarAbilityResetNotify_CmdId AvatarAbilityResetNotify_CmdId_CmdId_MIN = AvatarAbilityResetNotify_CmdId_NONE;
const AvatarAbilityResetNotify_CmdId AvatarAbilityResetNotify_CmdId_CmdId_MAX = AvatarAbilityResetNotify_CmdId_CMD_ID;
const int AvatarAbilityResetNotify_CmdId_CmdId_ARRAYSIZE = AvatarAbilityResetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarAbilityResetNotify_CmdId_descriptor();
inline const ::std::string& AvatarAbilityResetNotify_CmdId_Name(AvatarAbilityResetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarAbilityResetNotify_CmdId_descriptor(), value);
}
inline bool AvatarAbilityResetNotify_CmdId_Parse(
    const ::std::string& name, AvatarAbilityResetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarAbilityResetNotify_CmdId>(
    AvatarAbilityResetNotify_CmdId_descriptor(), name, value);
}
enum ClientAbilitiesInitFinishCombineNotify_CmdId {
  ClientAbilitiesInitFinishCombineNotify_CmdId_NONE = 0,
  ClientAbilitiesInitFinishCombineNotify_CmdId_CMD_ID = 1107,
  ClientAbilitiesInitFinishCombineNotify_CmdId_ENET_CHANNEL_ID = 0,
  ClientAbilitiesInitFinishCombineNotify_CmdId_ENET_IS_RELIABLE = 1,
  ClientAbilitiesInitFinishCombineNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ClientAbilitiesInitFinishCombineNotify_CmdId_ClientAbilitiesInitFinishCombineNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientAbilitiesInitFinishCombineNotify_CmdId_ClientAbilitiesInitFinishCombineNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientAbilitiesInitFinishCombineNotify_CmdId_IsValid(int value);
const ClientAbilitiesInitFinishCombineNotify_CmdId ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_MIN = ClientAbilitiesInitFinishCombineNotify_CmdId_NONE;
const ClientAbilitiesInitFinishCombineNotify_CmdId ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_MAX = ClientAbilitiesInitFinishCombineNotify_CmdId_CMD_ID;
const int ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_ARRAYSIZE = ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientAbilitiesInitFinishCombineNotify_CmdId_descriptor();
inline const ::std::string& ClientAbilitiesInitFinishCombineNotify_CmdId_Name(ClientAbilitiesInitFinishCombineNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientAbilitiesInitFinishCombineNotify_CmdId_descriptor(), value);
}
inline bool ClientAbilitiesInitFinishCombineNotify_CmdId_Parse(
    const ::std::string& name, ClientAbilitiesInitFinishCombineNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientAbilitiesInitFinishCombineNotify_CmdId>(
    ClientAbilitiesInitFinishCombineNotify_CmdId_descriptor(), name, value);
}
enum ElementReactionLogNotify_CmdId {
  ElementReactionLogNotify_CmdId_NONE = 0,
  ElementReactionLogNotify_CmdId_CMD_ID = 1108,
  ElementReactionLogNotify_CmdId_ENET_CHANNEL_ID = 0,
  ElementReactionLogNotify_CmdId_ENET_IS_RELIABLE = 1,
  ElementReactionLogNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ElementReactionLogNotify_CmdId_ElementReactionLogNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ElementReactionLogNotify_CmdId_ElementReactionLogNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ElementReactionLogNotify_CmdId_IsValid(int value);
const ElementReactionLogNotify_CmdId ElementReactionLogNotify_CmdId_CmdId_MIN = ElementReactionLogNotify_CmdId_NONE;
const ElementReactionLogNotify_CmdId ElementReactionLogNotify_CmdId_CmdId_MAX = ElementReactionLogNotify_CmdId_CMD_ID;
const int ElementReactionLogNotify_CmdId_CmdId_ARRAYSIZE = ElementReactionLogNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ElementReactionLogNotify_CmdId_descriptor();
inline const ::std::string& ElementReactionLogNotify_CmdId_Name(ElementReactionLogNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ElementReactionLogNotify_CmdId_descriptor(), value);
}
inline bool ElementReactionLogNotify_CmdId_Parse(
    const ::std::string& name, ElementReactionLogNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ElementReactionLogNotify_CmdId>(
    ElementReactionLogNotify_CmdId_descriptor(), name, value);
}
enum AvatarAbilityResetFinishNotify_CmdId {
  AvatarAbilityResetFinishNotify_CmdId_NONE = 0,
  AvatarAbilityResetFinishNotify_CmdId_CMD_ID = 1109,
  AvatarAbilityResetFinishNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarAbilityResetFinishNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarAbilityResetFinishNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarAbilityResetFinishNotify_CmdId_AvatarAbilityResetFinishNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarAbilityResetFinishNotify_CmdId_AvatarAbilityResetFinishNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarAbilityResetFinishNotify_CmdId_IsValid(int value);
const AvatarAbilityResetFinishNotify_CmdId AvatarAbilityResetFinishNotify_CmdId_CmdId_MIN = AvatarAbilityResetFinishNotify_CmdId_NONE;
const AvatarAbilityResetFinishNotify_CmdId AvatarAbilityResetFinishNotify_CmdId_CmdId_MAX = AvatarAbilityResetFinishNotify_CmdId_CMD_ID;
const int AvatarAbilityResetFinishNotify_CmdId_CmdId_ARRAYSIZE = AvatarAbilityResetFinishNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarAbilityResetFinishNotify_CmdId_descriptor();
inline const ::std::string& AvatarAbilityResetFinishNotify_CmdId_Name(AvatarAbilityResetFinishNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarAbilityResetFinishNotify_CmdId_descriptor(), value);
}
inline bool AvatarAbilityResetFinishNotify_CmdId_Parse(
    const ::std::string& name, AvatarAbilityResetFinishNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarAbilityResetFinishNotify_CmdId>(
    AvatarAbilityResetFinishNotify_CmdId_descriptor(), name, value);
}
enum WindSeedClientNotify_CmdId {
  WindSeedClientNotify_CmdId_NONE = 0,
  WindSeedClientNotify_CmdId_CMD_ID = 1110,
  WindSeedClientNotify_CmdId_ENET_CHANNEL_ID = 0,
  WindSeedClientNotify_CmdId_ENET_IS_RELIABLE = 1,
  WindSeedClientNotify_CmdId_WindSeedClientNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WindSeedClientNotify_CmdId_WindSeedClientNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WindSeedClientNotify_CmdId_IsValid(int value);
const WindSeedClientNotify_CmdId WindSeedClientNotify_CmdId_CmdId_MIN = WindSeedClientNotify_CmdId_NONE;
const WindSeedClientNotify_CmdId WindSeedClientNotify_CmdId_CmdId_MAX = WindSeedClientNotify_CmdId_CMD_ID;
const int WindSeedClientNotify_CmdId_CmdId_ARRAYSIZE = WindSeedClientNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WindSeedClientNotify_CmdId_descriptor();
inline const ::std::string& WindSeedClientNotify_CmdId_Name(WindSeedClientNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WindSeedClientNotify_CmdId_descriptor(), value);
}
inline bool WindSeedClientNotify_CmdId_Parse(
    const ::std::string& name, WindSeedClientNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WindSeedClientNotify_CmdId>(
    WindSeedClientNotify_CmdId_descriptor(), name, value);
}
enum AbilityInvokeArgument {
  ABILITY_NONE = 0,
  ABILITY_META_MODIFIER_CHANGE = 1,
  ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2,
  ABILITY_META_SPECIAL_FLOAT_ARGUMENT = 3,
  ABILITY_META_OVERRIDE_PARAM = 4,
  ABILITY_META_CLEAR_OVERRIDE_PARAM = 5,
  ABILITY_META_REINIT_OVERRIDEMAP = 6,
  ABILITY_META_GLOBAL_FLOAT_VALUE = 7,
  ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE = 8,
  ABILITY_META_ABILITY_ELEMENT_STRENGTH = 9,
  ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10,
  ABILITY_META_SET_KILLED_SETATE = 11,
  ABILITY_META_SET_ABILITY_TRIGGER = 12,
  ABILITY_META_ADD_NEW_ABILITY = 13,
  ABILITY_META_REMOVE_ABILITY = 14,
  ABILITY_META_SET_MODIFIER_APPLY_ENTITY = 15,
  ABILITY_META_MODIFIER_DURABILITY_CHANGE = 16,
  ABILITY_ACTION_TRIGGER_ABILITY = 50,
  ABILITY_ACTION_SET_CRASH_DAMAGE = 51,
  ABILITY_ACTION_EFFECT = 52,
  ABILITY_ACTION_SUMMON = 53,
  ABILITY_ACTION_BLINK = 54,
  ABILITY_ACTION_CREATE_GADGET = 55,
  ABILITY_ACTION_APPLY_LEVEL_MODIFIER = 56,
  ABILITY_ACTION_GENERATE_ELEM_BALL = 57,
  ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA = 100,
  ABILITY_MIXIN_MONSTER_DEFEND = 101,
  ABILITY_MIXIN_WIND_ZONE = 102,
  ABILITY_MIXIN_COST_STAMINA = 103,
  ABILITY_MIXIN_ELITE_SHIELD = 104,
  ABILITY_MIXIN_ELEMENT_SHIELD = 105,
  ABILITY_MIXIN_GLOBAL_SHIELD = 106,
  ABILITY_MIXIN_SHIELD_BAR = 107,
  ABILITY_MIXIN_WIND_SEED_SPAWNER = 108,
  AbilityInvokeArgument_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityInvokeArgument_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityInvokeArgument_IsValid(int value);
const AbilityInvokeArgument AbilityInvokeArgument_MIN = ABILITY_NONE;
const AbilityInvokeArgument AbilityInvokeArgument_MAX = ABILITY_MIXIN_WIND_SEED_SPAWNER;
const int AbilityInvokeArgument_ARRAYSIZE = AbilityInvokeArgument_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityInvokeArgument_descriptor();
inline const ::std::string& AbilityInvokeArgument_Name(AbilityInvokeArgument value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityInvokeArgument_descriptor(), value);
}
inline bool AbilityInvokeArgument_Parse(
    const ::std::string& name, AbilityInvokeArgument* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityInvokeArgument>(
    AbilityInvokeArgument_descriptor(), name, value);
}
enum ModifierAction {
  ADDED = 0,
  REMOVED = 1,
  ModifierAction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ModifierAction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ModifierAction_IsValid(int value);
const ModifierAction ModifierAction_MIN = ADDED;
const ModifierAction ModifierAction_MAX = REMOVED;
const int ModifierAction_ARRAYSIZE = ModifierAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModifierAction_descriptor();
inline const ::std::string& ModifierAction_Name(ModifierAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModifierAction_descriptor(), value);
}
inline bool ModifierAction_Parse(
    const ::std::string& name, ModifierAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModifierAction>(
    ModifierAction_descriptor(), name, value);
}
enum AbilityResetReasonType {
  ABILITY_CHANGE_SKILL_DEPOT = 0,
  ABILITY_UNLOCK_TALENT = 1,
  ABILITY_CHANGE_EQUIP = 2,
  ABILITY_PROUD_SKILL = 3,
  ABILITY_AVATAR_SKILL = 4,
  ABILITY_CORE_PROUD_SKILL = 5,
  ABILITY_TALENT_EXTRA_LEVEL = 6,
  AbilityResetReasonType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityResetReasonType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityResetReasonType_IsValid(int value);
const AbilityResetReasonType AbilityResetReasonType_MIN = ABILITY_CHANGE_SKILL_DEPOT;
const AbilityResetReasonType AbilityResetReasonType_MAX = ABILITY_TALENT_EXTRA_LEVEL;
const int AbilityResetReasonType_ARRAYSIZE = AbilityResetReasonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityResetReasonType_descriptor();
inline const ::std::string& AbilityResetReasonType_Name(AbilityResetReasonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityResetReasonType_descriptor(), value);
}
inline bool AbilityResetReasonType_Parse(
    const ::std::string& name, AbilityResetReasonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityResetReasonType>(
    AbilityResetReasonType_descriptor(), name, value);
}
// ===================================================================

class AbilityInvokeEntryHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityInvokeEntryHead) */ {
 public:
  AbilityInvokeEntryHead();
  virtual ~AbilityInvokeEntryHead();

  AbilityInvokeEntryHead(const AbilityInvokeEntryHead& from);

  inline AbilityInvokeEntryHead& operator=(const AbilityInvokeEntryHead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityInvokeEntryHead(AbilityInvokeEntryHead&& from) noexcept
    : AbilityInvokeEntryHead() {
    *this = ::std::move(from);
  }

  inline AbilityInvokeEntryHead& operator=(AbilityInvokeEntryHead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityInvokeEntryHead& default_instance();

  static inline const AbilityInvokeEntryHead* internal_default_instance() {
    return reinterpret_cast<const AbilityInvokeEntryHead*>(
               &_AbilityInvokeEntryHead_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AbilityInvokeEntryHead* other);
  friend void swap(AbilityInvokeEntryHead& a, AbilityInvokeEntryHead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityInvokeEntryHead* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityInvokeEntryHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityInvokeEntryHead& from);
  void MergeFrom(const AbilityInvokeEntryHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityInvokeEntryHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 instanced_ability_id = 1;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 2;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 2;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // int32 local_id = 3;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 3;
  ::google::protobuf::int32 local_id() const;
  void set_local_id(::google::protobuf::int32 value);

  // int32 modifier_config_local_id = 4;
  void clear_modifier_config_local_id();
  static const int kModifierConfigLocalIdFieldNumber = 4;
  ::google::protobuf::int32 modifier_config_local_id() const;
  void set_modifier_config_local_id(::google::protobuf::int32 value);

  // uint32 target_id = 5;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 5;
  ::google::protobuf::uint32 target_id() const;
  void set_target_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityInvokeEntryHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 instanced_ability_id_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  ::google::protobuf::int32 local_id_;
  ::google::protobuf::int32 modifier_config_local_id_;
  ::google::protobuf::uint32 target_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityInvokeEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityInvokeEntry) */ {
 public:
  AbilityInvokeEntry();
  virtual ~AbilityInvokeEntry();

  AbilityInvokeEntry(const AbilityInvokeEntry& from);

  inline AbilityInvokeEntry& operator=(const AbilityInvokeEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityInvokeEntry(AbilityInvokeEntry&& from) noexcept
    : AbilityInvokeEntry() {
    *this = ::std::move(from);
  }

  inline AbilityInvokeEntry& operator=(AbilityInvokeEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityInvokeEntry& default_instance();

  static inline const AbilityInvokeEntry* internal_default_instance() {
    return reinterpret_cast<const AbilityInvokeEntry*>(
               &_AbilityInvokeEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AbilityInvokeEntry* other);
  friend void swap(AbilityInvokeEntry& a, AbilityInvokeEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityInvokeEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityInvokeEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityInvokeEntry& from);
  void MergeFrom(const AbilityInvokeEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityInvokeEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ability_data = 3;
  void clear_ability_data();
  static const int kAbilityDataFieldNumber = 3;
  const ::std::string& ability_data() const;
  void set_ability_data(const ::std::string& value);
  #if LANG_CXX11
  void set_ability_data(::std::string&& value);
  #endif
  void set_ability_data(const char* value);
  void set_ability_data(const void* value, size_t size);
  ::std::string* mutable_ability_data();
  ::std::string* release_ability_data();
  void set_allocated_ability_data(::std::string* ability_data);

  // .proto.AbilityInvokeEntryHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::proto::AbilityInvokeEntryHead& head() const;
  ::proto::AbilityInvokeEntryHead* mutable_head();
  ::proto::AbilityInvokeEntryHead* release_head();
  void set_allocated_head(::proto::AbilityInvokeEntryHead* head);

  // .proto.AbilityInvokeArgument argument_type = 2;
  void clear_argument_type();
  static const int kArgumentTypeFieldNumber = 2;
  ::proto::AbilityInvokeArgument argument_type() const;
  void set_argument_type(::proto::AbilityInvokeArgument value);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.ForwardType forward_type = 5;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 5;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 forward_peer = 6;
  void clear_forward_peer();
  static const int kForwardPeerFieldNumber = 6;
  ::google::protobuf::uint32 forward_peer() const;
  void set_forward_peer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityInvokeEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ability_data_;
  ::proto::AbilityInvokeEntryHead* head_;
  int argument_type_;
  ::google::protobuf::uint32 entity_id_;
  int forward_type_;
  ::google::protobuf::uint32 forward_peer_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityInvocationFixedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityInvocationFixedNotify) */ {
 public:
  AbilityInvocationFixedNotify();
  virtual ~AbilityInvocationFixedNotify();

  AbilityInvocationFixedNotify(const AbilityInvocationFixedNotify& from);

  inline AbilityInvocationFixedNotify& operator=(const AbilityInvocationFixedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityInvocationFixedNotify(AbilityInvocationFixedNotify&& from) noexcept
    : AbilityInvocationFixedNotify() {
    *this = ::std::move(from);
  }

  inline AbilityInvocationFixedNotify& operator=(AbilityInvocationFixedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityInvocationFixedNotify& default_instance();

  static inline const AbilityInvocationFixedNotify* internal_default_instance() {
    return reinterpret_cast<const AbilityInvocationFixedNotify*>(
               &_AbilityInvocationFixedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AbilityInvocationFixedNotify* other);
  friend void swap(AbilityInvocationFixedNotify& a, AbilityInvocationFixedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityInvocationFixedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityInvocationFixedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityInvocationFixedNotify& from);
  void MergeFrom(const AbilityInvocationFixedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityInvocationFixedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AbilityInvocationFixedNotify_CmdId CmdId;
  static const CmdId NONE =
    AbilityInvocationFixedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AbilityInvocationFixedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AbilityInvocationFixedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AbilityInvocationFixedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AbilityInvocationFixedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AbilityInvocationFixedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AbilityInvocationFixedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AbilityInvocationFixedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AbilityInvocationFixedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AbilityInvocationFixedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AbilityInvocationFixedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AbilityInvocationFixedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.AbilityInvokeEntry invoke1st = 1;
  bool has_invoke1st() const;
  void clear_invoke1st();
  static const int kInvoke1StFieldNumber = 1;
  const ::proto::AbilityInvokeEntry& invoke1st() const;
  ::proto::AbilityInvokeEntry* mutable_invoke1st();
  ::proto::AbilityInvokeEntry* release_invoke1st();
  void set_allocated_invoke1st(::proto::AbilityInvokeEntry* invoke1st);

  // .proto.AbilityInvokeEntry invoke2nd = 2;
  bool has_invoke2nd() const;
  void clear_invoke2nd();
  static const int kInvoke2NdFieldNumber = 2;
  const ::proto::AbilityInvokeEntry& invoke2nd() const;
  ::proto::AbilityInvokeEntry* mutable_invoke2nd();
  ::proto::AbilityInvokeEntry* release_invoke2nd();
  void set_allocated_invoke2nd(::proto::AbilityInvokeEntry* invoke2nd);

  // .proto.AbilityInvokeEntry invoke3rd = 3;
  bool has_invoke3rd() const;
  void clear_invoke3rd();
  static const int kInvoke3RdFieldNumber = 3;
  const ::proto::AbilityInvokeEntry& invoke3rd() const;
  ::proto::AbilityInvokeEntry* mutable_invoke3rd();
  ::proto::AbilityInvokeEntry* release_invoke3rd();
  void set_allocated_invoke3rd(::proto::AbilityInvokeEntry* invoke3rd);

  // .proto.AbilityInvokeEntry invoke4th = 4;
  bool has_invoke4th() const;
  void clear_invoke4th();
  static const int kInvoke4ThFieldNumber = 4;
  const ::proto::AbilityInvokeEntry& invoke4th() const;
  ::proto::AbilityInvokeEntry* mutable_invoke4th();
  ::proto::AbilityInvokeEntry* release_invoke4th();
  void set_allocated_invoke4th(::proto::AbilityInvokeEntry* invoke4th);

  // .proto.AbilityInvokeEntry invoke5th = 5;
  bool has_invoke5th() const;
  void clear_invoke5th();
  static const int kInvoke5ThFieldNumber = 5;
  const ::proto::AbilityInvokeEntry& invoke5th() const;
  ::proto::AbilityInvokeEntry* mutable_invoke5th();
  ::proto::AbilityInvokeEntry* release_invoke5th();
  void set_allocated_invoke5th(::proto::AbilityInvokeEntry* invoke5th);

  // .proto.AbilityInvokeEntry invoke6th = 6;
  bool has_invoke6th() const;
  void clear_invoke6th();
  static const int kInvoke6ThFieldNumber = 6;
  const ::proto::AbilityInvokeEntry& invoke6th() const;
  ::proto::AbilityInvokeEntry* mutable_invoke6th();
  ::proto::AbilityInvokeEntry* release_invoke6th();
  void set_allocated_invoke6th(::proto::AbilityInvokeEntry* invoke6th);

  // @@protoc_insertion_point(class_scope:proto.AbilityInvocationFixedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityInvokeEntry* invoke1st_;
  ::proto::AbilityInvokeEntry* invoke2nd_;
  ::proto::AbilityInvokeEntry* invoke3rd_;
  ::proto::AbilityInvokeEntry* invoke4th_;
  ::proto::AbilityInvokeEntry* invoke5th_;
  ::proto::AbilityInvokeEntry* invoke6th_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityInvocationsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityInvocationsNotify) */ {
 public:
  AbilityInvocationsNotify();
  virtual ~AbilityInvocationsNotify();

  AbilityInvocationsNotify(const AbilityInvocationsNotify& from);

  inline AbilityInvocationsNotify& operator=(const AbilityInvocationsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityInvocationsNotify(AbilityInvocationsNotify&& from) noexcept
    : AbilityInvocationsNotify() {
    *this = ::std::move(from);
  }

  inline AbilityInvocationsNotify& operator=(AbilityInvocationsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityInvocationsNotify& default_instance();

  static inline const AbilityInvocationsNotify* internal_default_instance() {
    return reinterpret_cast<const AbilityInvocationsNotify*>(
               &_AbilityInvocationsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AbilityInvocationsNotify* other);
  friend void swap(AbilityInvocationsNotify& a, AbilityInvocationsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityInvocationsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityInvocationsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityInvocationsNotify& from);
  void MergeFrom(const AbilityInvocationsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityInvocationsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AbilityInvocationsNotify_CmdId CmdId;
  static const CmdId NONE =
    AbilityInvocationsNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AbilityInvocationsNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AbilityInvocationsNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AbilityInvocationsNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AbilityInvocationsNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AbilityInvocationsNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AbilityInvocationsNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AbilityInvocationsNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AbilityInvocationsNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AbilityInvocationsNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AbilityInvocationsNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AbilityInvocationsNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityInvokeEntry invokes = 1;
  int invokes_size() const;
  void clear_invokes();
  static const int kInvokesFieldNumber = 1;
  const ::proto::AbilityInvokeEntry& invokes(int index) const;
  ::proto::AbilityInvokeEntry* mutable_invokes(int index);
  ::proto::AbilityInvokeEntry* add_invokes();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >*
      mutable_invokes();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >&
      invokes() const;

  // @@protoc_insertion_point(class_scope:proto.AbilityInvocationsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry > invokes_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaReInitOverrideMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaReInitOverrideMap) */ {
 public:
  AbilityMetaReInitOverrideMap();
  virtual ~AbilityMetaReInitOverrideMap();

  AbilityMetaReInitOverrideMap(const AbilityMetaReInitOverrideMap& from);

  inline AbilityMetaReInitOverrideMap& operator=(const AbilityMetaReInitOverrideMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaReInitOverrideMap(AbilityMetaReInitOverrideMap&& from) noexcept
    : AbilityMetaReInitOverrideMap() {
    *this = ::std::move(from);
  }

  inline AbilityMetaReInitOverrideMap& operator=(AbilityMetaReInitOverrideMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaReInitOverrideMap& default_instance();

  static inline const AbilityMetaReInitOverrideMap* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaReInitOverrideMap*>(
               &_AbilityMetaReInitOverrideMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AbilityMetaReInitOverrideMap* other);
  friend void swap(AbilityMetaReInitOverrideMap& a, AbilityMetaReInitOverrideMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaReInitOverrideMap* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaReInitOverrideMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaReInitOverrideMap& from);
  void MergeFrom(const AbilityMetaReInitOverrideMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaReInitOverrideMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityScalarValueEntry override_map = 1;
  int override_map_size() const;
  void clear_override_map();
  static const int kOverrideMapFieldNumber = 1;
  const ::proto::AbilityScalarValueEntry& override_map(int index) const;
  ::proto::AbilityScalarValueEntry* mutable_override_map(int index);
  ::proto::AbilityScalarValueEntry* add_override_map();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
      mutable_override_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
      override_map() const;

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaReInitOverrideMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry > override_map_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaAddAbility : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaAddAbility) */ {
 public:
  AbilityMetaAddAbility();
  virtual ~AbilityMetaAddAbility();

  AbilityMetaAddAbility(const AbilityMetaAddAbility& from);

  inline AbilityMetaAddAbility& operator=(const AbilityMetaAddAbility& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaAddAbility(AbilityMetaAddAbility&& from) noexcept
    : AbilityMetaAddAbility() {
    *this = ::std::move(from);
  }

  inline AbilityMetaAddAbility& operator=(AbilityMetaAddAbility&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaAddAbility& default_instance();

  static inline const AbilityMetaAddAbility* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaAddAbility*>(
               &_AbilityMetaAddAbility_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AbilityMetaAddAbility* other);
  friend void swap(AbilityMetaAddAbility& a, AbilityMetaAddAbility& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaAddAbility* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaAddAbility* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaAddAbility& from);
  void MergeFrom(const AbilityMetaAddAbility& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaAddAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityAppliedAbility ability = 1;
  bool has_ability() const;
  void clear_ability();
  static const int kAbilityFieldNumber = 1;
  const ::proto::AbilityAppliedAbility& ability() const;
  ::proto::AbilityAppliedAbility* mutable_ability();
  ::proto::AbilityAppliedAbility* release_ability();
  void set_allocated_ability(::proto::AbilityAppliedAbility* ability);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaAddAbility)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityAppliedAbility* ability_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifierProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ModifierProperty) */ {
 public:
  ModifierProperty();
  virtual ~ModifierProperty();

  ModifierProperty(const ModifierProperty& from);

  inline ModifierProperty& operator=(const ModifierProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifierProperty(ModifierProperty&& from) noexcept
    : ModifierProperty() {
    *this = ::std::move(from);
  }

  inline ModifierProperty& operator=(ModifierProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifierProperty& default_instance();

  static inline const ModifierProperty* internal_default_instance() {
    return reinterpret_cast<const ModifierProperty*>(
               &_ModifierProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ModifierProperty* other);
  friend void swap(ModifierProperty& a, ModifierProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifierProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifierProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifierProperty& from);
  void MergeFrom(const ModifierProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifierProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityString key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::proto::AbilityString& key() const;
  ::proto::AbilityString* mutable_key();
  ::proto::AbilityString* release_key();
  void set_allocated_key(::proto::AbilityString* key);

  // float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:proto.ModifierProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityString* key_;
  float value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaModifierChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaModifierChange) */ {
 public:
  AbilityMetaModifierChange();
  virtual ~AbilityMetaModifierChange();

  AbilityMetaModifierChange(const AbilityMetaModifierChange& from);

  inline AbilityMetaModifierChange& operator=(const AbilityMetaModifierChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaModifierChange(AbilityMetaModifierChange&& from) noexcept
    : AbilityMetaModifierChange() {
    *this = ::std::move(from);
  }

  inline AbilityMetaModifierChange& operator=(AbilityMetaModifierChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaModifierChange& default_instance();

  static inline const AbilityMetaModifierChange* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaModifierChange*>(
               &_AbilityMetaModifierChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(AbilityMetaModifierChange* other);
  friend void swap(AbilityMetaModifierChange& a, AbilityMetaModifierChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaModifierChange* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaModifierChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaModifierChange& from);
  void MergeFrom(const AbilityMetaModifierChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaModifierChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ModifierProperty properties = 5;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 5;
  const ::proto::ModifierProperty& properties(int index) const;
  ::proto::ModifierProperty* mutable_properties(int index);
  ::proto::ModifierProperty* add_properties();
  ::google::protobuf::RepeatedPtrField< ::proto::ModifierProperty >*
      mutable_properties();
  const ::google::protobuf::RepeatedPtrField< ::proto::ModifierProperty >&
      properties() const;

  // .proto.AbilityString parent_ability_name = 2;
  bool has_parent_ability_name() const;
  void clear_parent_ability_name();
  static const int kParentAbilityNameFieldNumber = 2;
  const ::proto::AbilityString& parent_ability_name() const;
  ::proto::AbilityString* mutable_parent_ability_name();
  ::proto::AbilityString* release_parent_ability_name();
  void set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name);

  // .proto.AbilityString parent_ability_override = 3;
  bool has_parent_ability_override() const;
  void clear_parent_ability_override();
  static const int kParentAbilityOverrideFieldNumber = 3;
  const ::proto::AbilityString& parent_ability_override() const;
  ::proto::AbilityString* mutable_parent_ability_override();
  ::proto::AbilityString* release_parent_ability_override();
  void set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override);

  // .proto.AbilityAttachedModifier attached_instanced_modifier = 4;
  bool has_attached_instanced_modifier() const;
  void clear_attached_instanced_modifier();
  static const int kAttachedInstancedModifierFieldNumber = 4;
  const ::proto::AbilityAttachedModifier& attached_instanced_modifier() const;
  ::proto::AbilityAttachedModifier* mutable_attached_instanced_modifier();
  ::proto::AbilityAttachedModifier* release_attached_instanced_modifier();
  void set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier);

  // .proto.ModifierAction action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::proto::ModifierAction action() const;
  void set_action(::proto::ModifierAction value);

  // int32 modifier_local_id = 6;
  void clear_modifier_local_id();
  static const int kModifierLocalIdFieldNumber = 6;
  ::google::protobuf::int32 modifier_local_id() const;
  void set_modifier_local_id(::google::protobuf::int32 value);

  // uint32 apply_entity_id = 8;
  void clear_apply_entity_id();
  static const int kApplyEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 apply_entity_id() const;
  void set_apply_entity_id(::google::protobuf::uint32 value);

  // bool is_mute_remote = 7;
  void clear_is_mute_remote();
  static const int kIsMuteRemoteFieldNumber = 7;
  bool is_mute_remote() const;
  void set_is_mute_remote(bool value);

  // bool is_attached_parent_ability = 9;
  void clear_is_attached_parent_ability();
  static const int kIsAttachedParentAbilityFieldNumber = 9;
  bool is_attached_parent_ability() const;
  void set_is_attached_parent_ability(bool value);

  // uint32 server_buff_uid = 10;
  void clear_server_buff_uid();
  static const int kServerBuffUidFieldNumber = 10;
  ::google::protobuf::uint32 server_buff_uid() const;
  void set_server_buff_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaModifierChange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ModifierProperty > properties_;
  ::proto::AbilityString* parent_ability_name_;
  ::proto::AbilityString* parent_ability_override_;
  ::proto::AbilityAttachedModifier* attached_instanced_modifier_;
  int action_;
  ::google::protobuf::int32 modifier_local_id_;
  ::google::protobuf::uint32 apply_entity_id_;
  bool is_mute_remote_;
  bool is_attached_parent_ability_;
  ::google::protobuf::uint32 server_buff_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaSpecialFloatArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaSpecialFloatArgument) */ {
 public:
  AbilityMetaSpecialFloatArgument();
  virtual ~AbilityMetaSpecialFloatArgument();

  AbilityMetaSpecialFloatArgument(const AbilityMetaSpecialFloatArgument& from);

  inline AbilityMetaSpecialFloatArgument& operator=(const AbilityMetaSpecialFloatArgument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaSpecialFloatArgument(AbilityMetaSpecialFloatArgument&& from) noexcept
    : AbilityMetaSpecialFloatArgument() {
    *this = ::std::move(from);
  }

  inline AbilityMetaSpecialFloatArgument& operator=(AbilityMetaSpecialFloatArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaSpecialFloatArgument& default_instance();

  static inline const AbilityMetaSpecialFloatArgument* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaSpecialFloatArgument*>(
               &_AbilityMetaSpecialFloatArgument_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AbilityMetaSpecialFloatArgument* other);
  friend void swap(AbilityMetaSpecialFloatArgument& a, AbilityMetaSpecialFloatArgument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaSpecialFloatArgument* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaSpecialFloatArgument* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaSpecialFloatArgument& from);
  void MergeFrom(const AbilityMetaSpecialFloatArgument& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaSpecialFloatArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float argument_value = 1;
  void clear_argument_value();
  static const int kArgumentValueFieldNumber = 1;
  float argument_value() const;
  void set_argument_value(float value);

  // bool is_on = 2;
  void clear_is_on();
  static const int kIsOnFieldNumber = 2;
  bool is_on() const;
  void set_is_on(bool value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaSpecialFloatArgument)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float argument_value_;
  bool is_on_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaAddOrGetAbilityAndTrigger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaAddOrGetAbilityAndTrigger) */ {
 public:
  AbilityMetaAddOrGetAbilityAndTrigger();
  virtual ~AbilityMetaAddOrGetAbilityAndTrigger();

  AbilityMetaAddOrGetAbilityAndTrigger(const AbilityMetaAddOrGetAbilityAndTrigger& from);

  inline AbilityMetaAddOrGetAbilityAndTrigger& operator=(const AbilityMetaAddOrGetAbilityAndTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaAddOrGetAbilityAndTrigger(AbilityMetaAddOrGetAbilityAndTrigger&& from) noexcept
    : AbilityMetaAddOrGetAbilityAndTrigger() {
    *this = ::std::move(from);
  }

  inline AbilityMetaAddOrGetAbilityAndTrigger& operator=(AbilityMetaAddOrGetAbilityAndTrigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaAddOrGetAbilityAndTrigger& default_instance();

  static inline const AbilityMetaAddOrGetAbilityAndTrigger* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaAddOrGetAbilityAndTrigger*>(
               &_AbilityMetaAddOrGetAbilityAndTrigger_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(AbilityMetaAddOrGetAbilityAndTrigger* other);
  friend void swap(AbilityMetaAddOrGetAbilityAndTrigger& a, AbilityMetaAddOrGetAbilityAndTrigger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaAddOrGetAbilityAndTrigger* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaAddOrGetAbilityAndTrigger* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaAddOrGetAbilityAndTrigger& from);
  void MergeFrom(const AbilityMetaAddOrGetAbilityAndTrigger& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaAddOrGetAbilityAndTrigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityString ability_name = 1;
  bool has_ability_name() const;
  void clear_ability_name();
  static const int kAbilityNameFieldNumber = 1;
  const ::proto::AbilityString& ability_name() const;
  ::proto::AbilityString* mutable_ability_name();
  ::proto::AbilityString* release_ability_name();
  void set_allocated_ability_name(::proto::AbilityString* ability_name);

  // .proto.AbilityString ability_override = 2;
  bool has_ability_override() const;
  void clear_ability_override();
  static const int kAbilityOverrideFieldNumber = 2;
  const ::proto::AbilityString& ability_override() const;
  ::proto::AbilityString* mutable_ability_override();
  ::proto::AbilityString* release_ability_override();
  void set_allocated_ability_override(::proto::AbilityString* ability_override);

  // float trigger_argument = 3;
  void clear_trigger_argument();
  static const int kTriggerArgumentFieldNumber = 3;
  float trigger_argument() const;
  void set_trigger_argument(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaAddOrGetAbilityAndTrigger)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityString* ability_name_;
  ::proto::AbilityString* ability_override_;
  float trigger_argument_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaSetKilledState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaSetKilledState) */ {
 public:
  AbilityMetaSetKilledState();
  virtual ~AbilityMetaSetKilledState();

  AbilityMetaSetKilledState(const AbilityMetaSetKilledState& from);

  inline AbilityMetaSetKilledState& operator=(const AbilityMetaSetKilledState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaSetKilledState(AbilityMetaSetKilledState&& from) noexcept
    : AbilityMetaSetKilledState() {
    *this = ::std::move(from);
  }

  inline AbilityMetaSetKilledState& operator=(AbilityMetaSetKilledState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaSetKilledState& default_instance();

  static inline const AbilityMetaSetKilledState* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaSetKilledState*>(
               &_AbilityMetaSetKilledState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AbilityMetaSetKilledState* other);
  friend void swap(AbilityMetaSetKilledState& a, AbilityMetaSetKilledState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaSetKilledState* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaSetKilledState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaSetKilledState& from);
  void MergeFrom(const AbilityMetaSetKilledState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaSetKilledState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool killed = 1;
  void clear_killed();
  static const int kKilledFieldNumber = 1;
  bool killed() const;
  void set_killed(bool value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaSetKilledState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool killed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaSetAbilityTrigger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaSetAbilityTrigger) */ {
 public:
  AbilityMetaSetAbilityTrigger();
  virtual ~AbilityMetaSetAbilityTrigger();

  AbilityMetaSetAbilityTrigger(const AbilityMetaSetAbilityTrigger& from);

  inline AbilityMetaSetAbilityTrigger& operator=(const AbilityMetaSetAbilityTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaSetAbilityTrigger(AbilityMetaSetAbilityTrigger&& from) noexcept
    : AbilityMetaSetAbilityTrigger() {
    *this = ::std::move(from);
  }

  inline AbilityMetaSetAbilityTrigger& operator=(AbilityMetaSetAbilityTrigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaSetAbilityTrigger& default_instance();

  static inline const AbilityMetaSetAbilityTrigger* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaSetAbilityTrigger*>(
               &_AbilityMetaSetAbilityTrigger_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AbilityMetaSetAbilityTrigger* other);
  friend void swap(AbilityMetaSetAbilityTrigger& a, AbilityMetaSetAbilityTrigger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaSetAbilityTrigger* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaSetAbilityTrigger* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaSetAbilityTrigger& from);
  void MergeFrom(const AbilityMetaSetAbilityTrigger& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaSetAbilityTrigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 trigger_ability_entity_id = 1;
  void clear_trigger_ability_entity_id();
  static const int kTriggerAbilityEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 trigger_ability_entity_id() const;
  void set_trigger_ability_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaSetAbilityTrigger)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 trigger_ability_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaSetModifierApplyEntityId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaSetModifierApplyEntityId) */ {
 public:
  AbilityMetaSetModifierApplyEntityId();
  virtual ~AbilityMetaSetModifierApplyEntityId();

  AbilityMetaSetModifierApplyEntityId(const AbilityMetaSetModifierApplyEntityId& from);

  inline AbilityMetaSetModifierApplyEntityId& operator=(const AbilityMetaSetModifierApplyEntityId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaSetModifierApplyEntityId(AbilityMetaSetModifierApplyEntityId&& from) noexcept
    : AbilityMetaSetModifierApplyEntityId() {
    *this = ::std::move(from);
  }

  inline AbilityMetaSetModifierApplyEntityId& operator=(AbilityMetaSetModifierApplyEntityId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaSetModifierApplyEntityId& default_instance();

  static inline const AbilityMetaSetModifierApplyEntityId* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaSetModifierApplyEntityId*>(
               &_AbilityMetaSetModifierApplyEntityId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AbilityMetaSetModifierApplyEntityId* other);
  friend void swap(AbilityMetaSetModifierApplyEntityId& a, AbilityMetaSetModifierApplyEntityId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaSetModifierApplyEntityId* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaSetModifierApplyEntityId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaSetModifierApplyEntityId& from);
  void MergeFrom(const AbilityMetaSetModifierApplyEntityId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaSetModifierApplyEntityId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 apply_entity_id = 1;
  void clear_apply_entity_id();
  static const int kApplyEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 apply_entity_id() const;
  void set_apply_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaSetModifierApplyEntityId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 apply_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMetaModifierDurabilityChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMetaModifierDurabilityChange) */ {
 public:
  AbilityMetaModifierDurabilityChange();
  virtual ~AbilityMetaModifierDurabilityChange();

  AbilityMetaModifierDurabilityChange(const AbilityMetaModifierDurabilityChange& from);

  inline AbilityMetaModifierDurabilityChange& operator=(const AbilityMetaModifierDurabilityChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMetaModifierDurabilityChange(AbilityMetaModifierDurabilityChange&& from) noexcept
    : AbilityMetaModifierDurabilityChange() {
    *this = ::std::move(from);
  }

  inline AbilityMetaModifierDurabilityChange& operator=(AbilityMetaModifierDurabilityChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMetaModifierDurabilityChange& default_instance();

  static inline const AbilityMetaModifierDurabilityChange* internal_default_instance() {
    return reinterpret_cast<const AbilityMetaModifierDurabilityChange*>(
               &_AbilityMetaModifierDurabilityChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(AbilityMetaModifierDurabilityChange* other);
  friend void swap(AbilityMetaModifierDurabilityChange& a, AbilityMetaModifierDurabilityChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMetaModifierDurabilityChange* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMetaModifierDurabilityChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMetaModifierDurabilityChange& from);
  void MergeFrom(const AbilityMetaModifierDurabilityChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMetaModifierDurabilityChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float reduce_durability = 1;
  void clear_reduce_durability();
  static const int kReduceDurabilityFieldNumber = 1;
  float reduce_durability() const;
  void set_reduce_durability(float value);

  // float remain_durability = 2;
  void clear_remain_durability();
  static const int kRemainDurabilityFieldNumber = 2;
  float remain_durability() const;
  void set_remain_durability(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMetaModifierDurabilityChange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float reduce_durability_;
  float remain_durability_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityActionTriggerAbility : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityActionTriggerAbility) */ {
 public:
  AbilityActionTriggerAbility();
  virtual ~AbilityActionTriggerAbility();

  AbilityActionTriggerAbility(const AbilityActionTriggerAbility& from);

  inline AbilityActionTriggerAbility& operator=(const AbilityActionTriggerAbility& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityActionTriggerAbility(AbilityActionTriggerAbility&& from) noexcept
    : AbilityActionTriggerAbility() {
    *this = ::std::move(from);
  }

  inline AbilityActionTriggerAbility& operator=(AbilityActionTriggerAbility&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityActionTriggerAbility& default_instance();

  static inline const AbilityActionTriggerAbility* internal_default_instance() {
    return reinterpret_cast<const AbilityActionTriggerAbility*>(
               &_AbilityActionTriggerAbility_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(AbilityActionTriggerAbility* other);
  friend void swap(AbilityActionTriggerAbility& a, AbilityActionTriggerAbility& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityActionTriggerAbility* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityActionTriggerAbility* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityActionTriggerAbility& from);
  void MergeFrom(const AbilityActionTriggerAbility& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityActionTriggerAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 other_id = 1;
  void clear_other_id();
  static const int kOtherIdFieldNumber = 1;
  ::google::protobuf::uint32 other_id() const;
  void set_other_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityActionTriggerAbility)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 other_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityActionSetCrashDamage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityActionSetCrashDamage) */ {
 public:
  AbilityActionSetCrashDamage();
  virtual ~AbilityActionSetCrashDamage();

  AbilityActionSetCrashDamage(const AbilityActionSetCrashDamage& from);

  inline AbilityActionSetCrashDamage& operator=(const AbilityActionSetCrashDamage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityActionSetCrashDamage(AbilityActionSetCrashDamage&& from) noexcept
    : AbilityActionSetCrashDamage() {
    *this = ::std::move(from);
  }

  inline AbilityActionSetCrashDamage& operator=(AbilityActionSetCrashDamage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityActionSetCrashDamage& default_instance();

  static inline const AbilityActionSetCrashDamage* internal_default_instance() {
    return reinterpret_cast<const AbilityActionSetCrashDamage*>(
               &_AbilityActionSetCrashDamage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(AbilityActionSetCrashDamage* other);
  friend void swap(AbilityActionSetCrashDamage& a, AbilityActionSetCrashDamage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityActionSetCrashDamage* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityActionSetCrashDamage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityActionSetCrashDamage& from);
  void MergeFrom(const AbilityActionSetCrashDamage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityActionSetCrashDamage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector hit_pos = 2;
  bool has_hit_pos() const;
  void clear_hit_pos();
  static const int kHitPosFieldNumber = 2;
  const ::proto::Vector& hit_pos() const;
  ::proto::Vector* mutable_hit_pos();
  ::proto::Vector* release_hit_pos();
  void set_allocated_hit_pos(::proto::Vector* hit_pos);

  // float damage = 1;
  void clear_damage();
  static const int kDamageFieldNumber = 1;
  float damage() const;
  void set_damage(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityActionSetCrashDamage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* hit_pos_;
  float damage_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityBornType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityBornType) */ {
 public:
  AbilityBornType();
  virtual ~AbilityBornType();

  AbilityBornType(const AbilityBornType& from);

  inline AbilityBornType& operator=(const AbilityBornType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityBornType(AbilityBornType&& from) noexcept
    : AbilityBornType() {
    *this = ::std::move(from);
  }

  inline AbilityBornType& operator=(AbilityBornType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityBornType& default_instance();

  static inline const AbilityBornType* internal_default_instance() {
    return reinterpret_cast<const AbilityBornType*>(
               &_AbilityBornType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(AbilityBornType* other);
  friend void swap(AbilityBornType& a, AbilityBornType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityBornType* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityBornType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityBornType& from);
  void MergeFrom(const AbilityBornType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityBornType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // @@protoc_insertion_point(class_scope:proto.AbilityBornType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityActionSummon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityActionSummon) */ {
 public:
  AbilityActionSummon();
  virtual ~AbilityActionSummon();

  AbilityActionSummon(const AbilityActionSummon& from);

  inline AbilityActionSummon& operator=(const AbilityActionSummon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityActionSummon(AbilityActionSummon&& from) noexcept
    : AbilityActionSummon() {
    *this = ::std::move(from);
  }

  inline AbilityActionSummon& operator=(AbilityActionSummon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityActionSummon& default_instance();

  static inline const AbilityActionSummon* internal_default_instance() {
    return reinterpret_cast<const AbilityActionSummon*>(
               &_AbilityActionSummon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(AbilityActionSummon* other);
  friend void swap(AbilityActionSummon& a, AbilityActionSummon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityActionSummon* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityActionSummon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityActionSummon& from);
  void MergeFrom(const AbilityActionSummon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityActionSummon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // @@protoc_insertion_point(class_scope:proto.AbilityActionSummon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityActionBlink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityActionBlink) */ {
 public:
  AbilityActionBlink();
  virtual ~AbilityActionBlink();

  AbilityActionBlink(const AbilityActionBlink& from);

  inline AbilityActionBlink& operator=(const AbilityActionBlink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityActionBlink(AbilityActionBlink&& from) noexcept
    : AbilityActionBlink() {
    *this = ::std::move(from);
  }

  inline AbilityActionBlink& operator=(AbilityActionBlink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityActionBlink& default_instance();

  static inline const AbilityActionBlink* internal_default_instance() {
    return reinterpret_cast<const AbilityActionBlink*>(
               &_AbilityActionBlink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(AbilityActionBlink* other);
  friend void swap(AbilityActionBlink& a, AbilityActionBlink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityActionBlink* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityActionBlink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityActionBlink& from);
  void MergeFrom(const AbilityActionBlink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityActionBlink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // @@protoc_insertion_point(class_scope:proto.AbilityActionBlink)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityActionCreateGadget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityActionCreateGadget) */ {
 public:
  AbilityActionCreateGadget();
  virtual ~AbilityActionCreateGadget();

  AbilityActionCreateGadget(const AbilityActionCreateGadget& from);

  inline AbilityActionCreateGadget& operator=(const AbilityActionCreateGadget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityActionCreateGadget(AbilityActionCreateGadget&& from) noexcept
    : AbilityActionCreateGadget() {
    *this = ::std::move(from);
  }

  inline AbilityActionCreateGadget& operator=(AbilityActionCreateGadget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityActionCreateGadget& default_instance();

  static inline const AbilityActionCreateGadget* internal_default_instance() {
    return reinterpret_cast<const AbilityActionCreateGadget*>(
               &_AbilityActionCreateGadget_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(AbilityActionCreateGadget* other);
  friend void swap(AbilityActionCreateGadget& a, AbilityActionCreateGadget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityActionCreateGadget* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityActionCreateGadget* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityActionCreateGadget& from);
  void MergeFrom(const AbilityActionCreateGadget& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityActionCreateGadget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 room_id = 3;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityActionCreateGadget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityApplyLevelModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityApplyLevelModifier) */ {
 public:
  AbilityApplyLevelModifier();
  virtual ~AbilityApplyLevelModifier();

  AbilityApplyLevelModifier(const AbilityApplyLevelModifier& from);

  inline AbilityApplyLevelModifier& operator=(const AbilityApplyLevelModifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityApplyLevelModifier(AbilityApplyLevelModifier&& from) noexcept
    : AbilityApplyLevelModifier() {
    *this = ::std::move(from);
  }

  inline AbilityApplyLevelModifier& operator=(AbilityApplyLevelModifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityApplyLevelModifier& default_instance();

  static inline const AbilityApplyLevelModifier* internal_default_instance() {
    return reinterpret_cast<const AbilityApplyLevelModifier*>(
               &_AbilityApplyLevelModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AbilityApplyLevelModifier* other);
  friend void swap(AbilityApplyLevelModifier& a, AbilityApplyLevelModifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityApplyLevelModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityApplyLevelModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityApplyLevelModifier& from);
  void MergeFrom(const AbilityApplyLevelModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityApplyLevelModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 apply_entity_id = 1;
  void clear_apply_entity_id();
  static const int kApplyEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 apply_entity_id() const;
  void set_apply_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityApplyLevelModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 apply_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityActionGenerateElemBall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityActionGenerateElemBall) */ {
 public:
  AbilityActionGenerateElemBall();
  virtual ~AbilityActionGenerateElemBall();

  AbilityActionGenerateElemBall(const AbilityActionGenerateElemBall& from);

  inline AbilityActionGenerateElemBall& operator=(const AbilityActionGenerateElemBall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityActionGenerateElemBall(AbilityActionGenerateElemBall&& from) noexcept
    : AbilityActionGenerateElemBall() {
    *this = ::std::move(from);
  }

  inline AbilityActionGenerateElemBall& operator=(AbilityActionGenerateElemBall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityActionGenerateElemBall& default_instance();

  static inline const AbilityActionGenerateElemBall* internal_default_instance() {
    return reinterpret_cast<const AbilityActionGenerateElemBall*>(
               &_AbilityActionGenerateElemBall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(AbilityActionGenerateElemBall* other);
  friend void swap(AbilityActionGenerateElemBall& a, AbilityActionGenerateElemBall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityActionGenerateElemBall* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityActionGenerateElemBall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityActionGenerateElemBall& from);
  void MergeFrom(const AbilityActionGenerateElemBall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityActionGenerateElemBall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 room_id = 3;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityActionGenerateElemBall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinEmpty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinEmpty) */ {
 public:
  AbilityMixinEmpty();
  virtual ~AbilityMixinEmpty();

  AbilityMixinEmpty(const AbilityMixinEmpty& from);

  inline AbilityMixinEmpty& operator=(const AbilityMixinEmpty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinEmpty(AbilityMixinEmpty&& from) noexcept
    : AbilityMixinEmpty() {
    *this = ::std::move(from);
  }

  inline AbilityMixinEmpty& operator=(AbilityMixinEmpty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinEmpty& default_instance();

  static inline const AbilityMixinEmpty* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinEmpty*>(
               &_AbilityMixinEmpty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(AbilityMixinEmpty* other);
  friend void swap(AbilityMixinEmpty& a, AbilityMixinEmpty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinEmpty* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinEmpty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinEmpty& from);
  void MergeFrom(const AbilityMixinEmpty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinEmpty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinEmpty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinAvatarSteerByCamera : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinAvatarSteerByCamera) */ {
 public:
  AbilityMixinAvatarSteerByCamera();
  virtual ~AbilityMixinAvatarSteerByCamera();

  AbilityMixinAvatarSteerByCamera(const AbilityMixinAvatarSteerByCamera& from);

  inline AbilityMixinAvatarSteerByCamera& operator=(const AbilityMixinAvatarSteerByCamera& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinAvatarSteerByCamera(AbilityMixinAvatarSteerByCamera&& from) noexcept
    : AbilityMixinAvatarSteerByCamera() {
    *this = ::std::move(from);
  }

  inline AbilityMixinAvatarSteerByCamera& operator=(AbilityMixinAvatarSteerByCamera&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinAvatarSteerByCamera& default_instance();

  static inline const AbilityMixinAvatarSteerByCamera* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinAvatarSteerByCamera*>(
               &_AbilityMixinAvatarSteerByCamera_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(AbilityMixinAvatarSteerByCamera* other);
  friend void swap(AbilityMixinAvatarSteerByCamera& a, AbilityMixinAvatarSteerByCamera& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinAvatarSteerByCamera* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinAvatarSteerByCamera* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinAvatarSteerByCamera& from);
  void MergeFrom(const AbilityMixinAvatarSteerByCamera& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinAvatarSteerByCamera* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector target_pos = 1;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 1;
  const ::proto::Vector& target_pos() const;
  ::proto::Vector* mutable_target_pos();
  ::proto::Vector* release_target_pos();
  void set_allocated_target_pos(::proto::Vector* target_pos);

  // .proto.Vector target_dir = 2;
  bool has_target_dir() const;
  void clear_target_dir();
  static const int kTargetDirFieldNumber = 2;
  const ::proto::Vector& target_dir() const;
  ::proto::Vector* mutable_target_dir();
  ::proto::Vector* release_target_dir();
  void set_allocated_target_dir(::proto::Vector* target_dir);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinAvatarSteerByCamera)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* target_pos_;
  ::proto::Vector* target_dir_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinWindZone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinWindZone) */ {
 public:
  AbilityMixinWindZone();
  virtual ~AbilityMixinWindZone();

  AbilityMixinWindZone(const AbilityMixinWindZone& from);

  inline AbilityMixinWindZone& operator=(const AbilityMixinWindZone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinWindZone(AbilityMixinWindZone&& from) noexcept
    : AbilityMixinWindZone() {
    *this = ::std::move(from);
  }

  inline AbilityMixinWindZone& operator=(AbilityMixinWindZone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinWindZone& default_instance();

  static inline const AbilityMixinWindZone* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinWindZone*>(
               &_AbilityMixinWindZone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(AbilityMixinWindZone* other);
  friend void swap(AbilityMixinWindZone& a, AbilityMixinWindZone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinWindZone* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinWindZone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinWindZone& from);
  void MergeFrom(const AbilityMixinWindZone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinWindZone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 entity_ids = 1;
  int entity_ids_size() const;
  void clear_entity_ids();
  static const int kEntityIdsFieldNumber = 1;
  ::google::protobuf::uint32 entity_ids(int index) const;
  void set_entity_ids(int index, ::google::protobuf::uint32 value);
  void add_entity_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entity_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entity_ids();

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinWindZone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entity_ids_;
  mutable int _entity_ids_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinCostStamina : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinCostStamina) */ {
 public:
  AbilityMixinCostStamina();
  virtual ~AbilityMixinCostStamina();

  AbilityMixinCostStamina(const AbilityMixinCostStamina& from);

  inline AbilityMixinCostStamina& operator=(const AbilityMixinCostStamina& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinCostStamina(AbilityMixinCostStamina&& from) noexcept
    : AbilityMixinCostStamina() {
    *this = ::std::move(from);
  }

  inline AbilityMixinCostStamina& operator=(AbilityMixinCostStamina&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinCostStamina& default_instance();

  static inline const AbilityMixinCostStamina* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinCostStamina*>(
               &_AbilityMixinCostStamina_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(AbilityMixinCostStamina* other);
  friend void swap(AbilityMixinCostStamina& a, AbilityMixinCostStamina& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinCostStamina* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinCostStamina* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinCostStamina& from);
  void MergeFrom(const AbilityMixinCostStamina& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinCostStamina* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_swim = 1;
  void clear_is_swim();
  static const int kIsSwimFieldNumber = 1;
  bool is_swim() const;
  void set_is_swim(bool value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinCostStamina)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_swim_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinEliteShield : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinEliteShield) */ {
 public:
  AbilityMixinEliteShield();
  virtual ~AbilityMixinEliteShield();

  AbilityMixinEliteShield(const AbilityMixinEliteShield& from);

  inline AbilityMixinEliteShield& operator=(const AbilityMixinEliteShield& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinEliteShield(AbilityMixinEliteShield&& from) noexcept
    : AbilityMixinEliteShield() {
    *this = ::std::move(from);
  }

  inline AbilityMixinEliteShield& operator=(AbilityMixinEliteShield&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinEliteShield& default_instance();

  static inline const AbilityMixinEliteShield* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinEliteShield*>(
               &_AbilityMixinEliteShield_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AbilityMixinEliteShield* other);
  friend void swap(AbilityMixinEliteShield& a, AbilityMixinEliteShield& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinEliteShield* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinEliteShield* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinEliteShield& from);
  void MergeFrom(const AbilityMixinEliteShield& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinEliteShield* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float sub_shield = 1;
  void clear_sub_shield();
  static const int kSubShieldFieldNumber = 1;
  float sub_shield() const;
  void set_sub_shield(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinEliteShield)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float sub_shield_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinElementShield : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinElementShield) */ {
 public:
  AbilityMixinElementShield();
  virtual ~AbilityMixinElementShield();

  AbilityMixinElementShield(const AbilityMixinElementShield& from);

  inline AbilityMixinElementShield& operator=(const AbilityMixinElementShield& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinElementShield(AbilityMixinElementShield&& from) noexcept
    : AbilityMixinElementShield() {
    *this = ::std::move(from);
  }

  inline AbilityMixinElementShield& operator=(AbilityMixinElementShield&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinElementShield& default_instance();

  static inline const AbilityMixinElementShield* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinElementShield*>(
               &_AbilityMixinElementShield_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(AbilityMixinElementShield* other);
  friend void swap(AbilityMixinElementShield& a, AbilityMixinElementShield& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinElementShield* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinElementShield* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinElementShield& from);
  void MergeFrom(const AbilityMixinElementShield& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinElementShield* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float sub_shield = 1;
  void clear_sub_shield();
  static const int kSubShieldFieldNumber = 1;
  float sub_shield() const;
  void set_sub_shield(float value);

  // bool is_shield_broken = 2;
  void clear_is_shield_broken();
  static const int kIsShieldBrokenFieldNumber = 2;
  bool is_shield_broken() const;
  void set_is_shield_broken(bool value);

  // float shield = 3;
  void clear_shield();
  static const int kShieldFieldNumber = 3;
  float shield() const;
  void set_shield(float value);

  // float max_shield = 4;
  void clear_max_shield();
  static const int kMaxShieldFieldNumber = 4;
  float max_shield() const;
  void set_max_shield(float value);

  // uint32 absorb_type = 5;
  void clear_absorb_type();
  static const int kAbsorbTypeFieldNumber = 5;
  ::google::protobuf::uint32 absorb_type() const;
  void set_absorb_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinElementShield)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float sub_shield_;
  bool is_shield_broken_;
  float shield_;
  float max_shield_;
  ::google::protobuf::uint32 absorb_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinGlobalShield : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinGlobalShield) */ {
 public:
  AbilityMixinGlobalShield();
  virtual ~AbilityMixinGlobalShield();

  AbilityMixinGlobalShield(const AbilityMixinGlobalShield& from);

  inline AbilityMixinGlobalShield& operator=(const AbilityMixinGlobalShield& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinGlobalShield(AbilityMixinGlobalShield&& from) noexcept
    : AbilityMixinGlobalShield() {
    *this = ::std::move(from);
  }

  inline AbilityMixinGlobalShield& operator=(AbilityMixinGlobalShield&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinGlobalShield& default_instance();

  static inline const AbilityMixinGlobalShield* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinGlobalShield*>(
               &_AbilityMixinGlobalShield_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(AbilityMixinGlobalShield* other);
  friend void swap(AbilityMixinGlobalShield& a, AbilityMixinGlobalShield& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinGlobalShield* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinGlobalShield* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinGlobalShield& from);
  void MergeFrom(const AbilityMixinGlobalShield& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinGlobalShield* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string shield_effect_name = 3;
  void clear_shield_effect_name();
  static const int kShieldEffectNameFieldNumber = 3;
  const ::std::string& shield_effect_name() const;
  void set_shield_effect_name(const ::std::string& value);
  #if LANG_CXX11
  void set_shield_effect_name(::std::string&& value);
  #endif
  void set_shield_effect_name(const char* value);
  void set_shield_effect_name(const char* value, size_t size);
  ::std::string* mutable_shield_effect_name();
  ::std::string* release_shield_effect_name();
  void set_allocated_shield_effect_name(::std::string* shield_effect_name);

  // float sub_shield = 1;
  void clear_sub_shield();
  static const int kSubShieldFieldNumber = 1;
  float sub_shield() const;
  void set_sub_shield(float value);

  // uint32 avatar_id = 2;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // float height_offset = 4;
  void clear_height_offset();
  static const int kHeightOffsetFieldNumber = 4;
  float height_offset() const;
  void set_height_offset(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinGlobalShield)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr shield_effect_name_;
  float sub_shield_;
  ::google::protobuf::uint32 avatar_id_;
  float height_offset_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinShieldBar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinShieldBar) */ {
 public:
  AbilityMixinShieldBar();
  virtual ~AbilityMixinShieldBar();

  AbilityMixinShieldBar(const AbilityMixinShieldBar& from);

  inline AbilityMixinShieldBar& operator=(const AbilityMixinShieldBar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinShieldBar(AbilityMixinShieldBar&& from) noexcept
    : AbilityMixinShieldBar() {
    *this = ::std::move(from);
  }

  inline AbilityMixinShieldBar& operator=(AbilityMixinShieldBar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinShieldBar& default_instance();

  static inline const AbilityMixinShieldBar* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinShieldBar*>(
               &_AbilityMixinShieldBar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AbilityMixinShieldBar* other);
  friend void swap(AbilityMixinShieldBar& a, AbilityMixinShieldBar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinShieldBar* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinShieldBar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinShieldBar& from);
  void MergeFrom(const AbilityMixinShieldBar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinShieldBar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 element_type = 1;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 1;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // float shield = 2;
  void clear_shield();
  static const int kShieldFieldNumber = 2;
  float shield() const;
  void set_shield(float value);

  // float max_shield = 3;
  void clear_max_shield();
  static const int kMaxShieldFieldNumber = 3;
  float max_shield() const;
  void set_max_shield(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinShieldBar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 element_type_;
  float shield_;
  float max_shield_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinWindSeedSpawner_AddSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinWindSeedSpawner.AddSignal) */ {
 public:
  AbilityMixinWindSeedSpawner_AddSignal();
  virtual ~AbilityMixinWindSeedSpawner_AddSignal();

  AbilityMixinWindSeedSpawner_AddSignal(const AbilityMixinWindSeedSpawner_AddSignal& from);

  inline AbilityMixinWindSeedSpawner_AddSignal& operator=(const AbilityMixinWindSeedSpawner_AddSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinWindSeedSpawner_AddSignal(AbilityMixinWindSeedSpawner_AddSignal&& from) noexcept
    : AbilityMixinWindSeedSpawner_AddSignal() {
    *this = ::std::move(from);
  }

  inline AbilityMixinWindSeedSpawner_AddSignal& operator=(AbilityMixinWindSeedSpawner_AddSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinWindSeedSpawner_AddSignal& default_instance();

  static inline const AbilityMixinWindSeedSpawner_AddSignal* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinWindSeedSpawner_AddSignal*>(
               &_AbilityMixinWindSeedSpawner_AddSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(AbilityMixinWindSeedSpawner_AddSignal* other);
  friend void swap(AbilityMixinWindSeedSpawner_AddSignal& a, AbilityMixinWindSeedSpawner_AddSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinWindSeedSpawner_AddSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinWindSeedSpawner_AddSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinWindSeedSpawner_AddSignal& from);
  void MergeFrom(const AbilityMixinWindSeedSpawner_AddSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinWindSeedSpawner_AddSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinWindSeedSpawner.AddSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinWindSeedSpawner_RefreshSeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinWindSeedSpawner.RefreshSeed) */ {
 public:
  AbilityMixinWindSeedSpawner_RefreshSeed();
  virtual ~AbilityMixinWindSeedSpawner_RefreshSeed();

  AbilityMixinWindSeedSpawner_RefreshSeed(const AbilityMixinWindSeedSpawner_RefreshSeed& from);

  inline AbilityMixinWindSeedSpawner_RefreshSeed& operator=(const AbilityMixinWindSeedSpawner_RefreshSeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinWindSeedSpawner_RefreshSeed(AbilityMixinWindSeedSpawner_RefreshSeed&& from) noexcept
    : AbilityMixinWindSeedSpawner_RefreshSeed() {
    *this = ::std::move(from);
  }

  inline AbilityMixinWindSeedSpawner_RefreshSeed& operator=(AbilityMixinWindSeedSpawner_RefreshSeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinWindSeedSpawner_RefreshSeed& default_instance();

  static inline const AbilityMixinWindSeedSpawner_RefreshSeed* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinWindSeedSpawner_RefreshSeed*>(
               &_AbilityMixinWindSeedSpawner_RefreshSeed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(AbilityMixinWindSeedSpawner_RefreshSeed* other);
  friend void swap(AbilityMixinWindSeedSpawner_RefreshSeed& a, AbilityMixinWindSeedSpawner_RefreshSeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinWindSeedSpawner_RefreshSeed* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinWindSeedSpawner_RefreshSeed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinWindSeedSpawner_RefreshSeed& from);
  void MergeFrom(const AbilityMixinWindSeedSpawner_RefreshSeed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinWindSeedSpawner_RefreshSeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Vector pos_list = 1;
  int pos_list_size() const;
  void clear_pos_list();
  static const int kPosListFieldNumber = 1;
  const ::proto::Vector& pos_list(int index) const;
  ::proto::Vector* mutable_pos_list(int index);
  ::proto::Vector* add_pos_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_pos_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      pos_list() const;

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinWindSeedSpawner.RefreshSeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > pos_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinWindSeedSpawner_CatchSeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinWindSeedSpawner.CatchSeed) */ {
 public:
  AbilityMixinWindSeedSpawner_CatchSeed();
  virtual ~AbilityMixinWindSeedSpawner_CatchSeed();

  AbilityMixinWindSeedSpawner_CatchSeed(const AbilityMixinWindSeedSpawner_CatchSeed& from);

  inline AbilityMixinWindSeedSpawner_CatchSeed& operator=(const AbilityMixinWindSeedSpawner_CatchSeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinWindSeedSpawner_CatchSeed(AbilityMixinWindSeedSpawner_CatchSeed&& from) noexcept
    : AbilityMixinWindSeedSpawner_CatchSeed() {
    *this = ::std::move(from);
  }

  inline AbilityMixinWindSeedSpawner_CatchSeed& operator=(AbilityMixinWindSeedSpawner_CatchSeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinWindSeedSpawner_CatchSeed& default_instance();

  static inline const AbilityMixinWindSeedSpawner_CatchSeed* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinWindSeedSpawner_CatchSeed*>(
               &_AbilityMixinWindSeedSpawner_CatchSeed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AbilityMixinWindSeedSpawner_CatchSeed* other);
  friend void swap(AbilityMixinWindSeedSpawner_CatchSeed& a, AbilityMixinWindSeedSpawner_CatchSeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinWindSeedSpawner_CatchSeed* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinWindSeedSpawner_CatchSeed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinWindSeedSpawner_CatchSeed& from);
  void MergeFrom(const AbilityMixinWindSeedSpawner_CatchSeed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinWindSeedSpawner_CatchSeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityMixinWindSeedSpawner.CatchSeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinWindSeedSpawner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinWindSeedSpawner) */ {
 public:
  AbilityMixinWindSeedSpawner();
  virtual ~AbilityMixinWindSeedSpawner();

  AbilityMixinWindSeedSpawner(const AbilityMixinWindSeedSpawner& from);

  inline AbilityMixinWindSeedSpawner& operator=(const AbilityMixinWindSeedSpawner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinWindSeedSpawner(AbilityMixinWindSeedSpawner&& from) noexcept
    : AbilityMixinWindSeedSpawner() {
    *this = ::std::move(from);
  }

  inline AbilityMixinWindSeedSpawner& operator=(AbilityMixinWindSeedSpawner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinWindSeedSpawner& default_instance();

  enum CmdCase {
    kAddSignal = 1,
    kRefreshSeed = 2,
    kCatchSeed = 3,
    CMD_NOT_SET = 0,
  };

  static inline const AbilityMixinWindSeedSpawner* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinWindSeedSpawner*>(
               &_AbilityMixinWindSeedSpawner_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(AbilityMixinWindSeedSpawner* other);
  friend void swap(AbilityMixinWindSeedSpawner& a, AbilityMixinWindSeedSpawner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinWindSeedSpawner* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinWindSeedSpawner* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinWindSeedSpawner& from);
  void MergeFrom(const AbilityMixinWindSeedSpawner& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinWindSeedSpawner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AbilityMixinWindSeedSpawner_AddSignal AddSignal;
  typedef AbilityMixinWindSeedSpawner_RefreshSeed RefreshSeed;
  typedef AbilityMixinWindSeedSpawner_CatchSeed CatchSeed;

  // accessors -------------------------------------------------------

  // .proto.AbilityMixinWindSeedSpawner.AddSignal add_signal = 1;
  bool has_add_signal() const;
  void clear_add_signal();
  static const int kAddSignalFieldNumber = 1;
  const ::proto::AbilityMixinWindSeedSpawner_AddSignal& add_signal() const;
  ::proto::AbilityMixinWindSeedSpawner_AddSignal* mutable_add_signal();
  ::proto::AbilityMixinWindSeedSpawner_AddSignal* release_add_signal();
  void set_allocated_add_signal(::proto::AbilityMixinWindSeedSpawner_AddSignal* add_signal);

  // .proto.AbilityMixinWindSeedSpawner.RefreshSeed refresh_seed = 2;
  bool has_refresh_seed() const;
  void clear_refresh_seed();
  static const int kRefreshSeedFieldNumber = 2;
  const ::proto::AbilityMixinWindSeedSpawner_RefreshSeed& refresh_seed() const;
  ::proto::AbilityMixinWindSeedSpawner_RefreshSeed* mutable_refresh_seed();
  ::proto::AbilityMixinWindSeedSpawner_RefreshSeed* release_refresh_seed();
  void set_allocated_refresh_seed(::proto::AbilityMixinWindSeedSpawner_RefreshSeed* refresh_seed);

  // .proto.AbilityMixinWindSeedSpawner.CatchSeed catch_seed = 3;
  bool has_catch_seed() const;
  void clear_catch_seed();
  static const int kCatchSeedFieldNumber = 3;
  const ::proto::AbilityMixinWindSeedSpawner_CatchSeed& catch_seed() const;
  ::proto::AbilityMixinWindSeedSpawner_CatchSeed* mutable_catch_seed();
  ::proto::AbilityMixinWindSeedSpawner_CatchSeed* release_catch_seed();
  void set_allocated_catch_seed(::proto::AbilityMixinWindSeedSpawner_CatchSeed* catch_seed);

  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityMixinWindSeedSpawner)
 private:
  void set_has_add_signal();
  void set_has_refresh_seed();
  void set_has_catch_seed();

  inline bool has_cmd() const;
  void clear_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union CmdUnion {
    CmdUnion() {}
    ::proto::AbilityMixinWindSeedSpawner_AddSignal* add_signal_;
    ::proto::AbilityMixinWindSeedSpawner_RefreshSeed* refresh_seed_;
    ::proto::AbilityMixinWindSeedSpawner_CatchSeed* catch_seed_;
  } cmd_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientAbilityInitBeginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientAbilityInitBeginNotify) */ {
 public:
  ClientAbilityInitBeginNotify();
  virtual ~ClientAbilityInitBeginNotify();

  ClientAbilityInitBeginNotify(const ClientAbilityInitBeginNotify& from);

  inline ClientAbilityInitBeginNotify& operator=(const ClientAbilityInitBeginNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientAbilityInitBeginNotify(ClientAbilityInitBeginNotify&& from) noexcept
    : ClientAbilityInitBeginNotify() {
    *this = ::std::move(from);
  }

  inline ClientAbilityInitBeginNotify& operator=(ClientAbilityInitBeginNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientAbilityInitBeginNotify& default_instance();

  static inline const ClientAbilityInitBeginNotify* internal_default_instance() {
    return reinterpret_cast<const ClientAbilityInitBeginNotify*>(
               &_ClientAbilityInitBeginNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(ClientAbilityInitBeginNotify* other);
  friend void swap(ClientAbilityInitBeginNotify& a, ClientAbilityInitBeginNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientAbilityInitBeginNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientAbilityInitBeginNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientAbilityInitBeginNotify& from);
  void MergeFrom(const ClientAbilityInitBeginNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientAbilityInitBeginNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientAbilityInitBeginNotify_CmdId CmdId;
  static const CmdId NONE =
    ClientAbilityInitBeginNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientAbilityInitBeginNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientAbilityInitBeginNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientAbilityInitBeginNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientAbilityInitBeginNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientAbilityInitBeginNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientAbilityInitBeginNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientAbilityInitBeginNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientAbilityInitBeginNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientAbilityInitBeginNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientAbilityInitBeginNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientAbilityInitBeginNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientAbilityInitBeginNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientAbilityInitFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientAbilityInitFinishNotify) */ {
 public:
  ClientAbilityInitFinishNotify();
  virtual ~ClientAbilityInitFinishNotify();

  ClientAbilityInitFinishNotify(const ClientAbilityInitFinishNotify& from);

  inline ClientAbilityInitFinishNotify& operator=(const ClientAbilityInitFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientAbilityInitFinishNotify(ClientAbilityInitFinishNotify&& from) noexcept
    : ClientAbilityInitFinishNotify() {
    *this = ::std::move(from);
  }

  inline ClientAbilityInitFinishNotify& operator=(ClientAbilityInitFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientAbilityInitFinishNotify& default_instance();

  static inline const ClientAbilityInitFinishNotify* internal_default_instance() {
    return reinterpret_cast<const ClientAbilityInitFinishNotify*>(
               &_ClientAbilityInitFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(ClientAbilityInitFinishNotify* other);
  friend void swap(ClientAbilityInitFinishNotify& a, ClientAbilityInitFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientAbilityInitFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientAbilityInitFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientAbilityInitFinishNotify& from);
  void MergeFrom(const ClientAbilityInitFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientAbilityInitFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientAbilityInitFinishNotify_CmdId CmdId;
  static const CmdId NONE =
    ClientAbilityInitFinishNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientAbilityInitFinishNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientAbilityInitFinishNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientAbilityInitFinishNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientAbilityInitFinishNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientAbilityInitFinishNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientAbilityInitFinishNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientAbilityInitFinishNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientAbilityInitFinishNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientAbilityInitFinishNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientAbilityInitFinishNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientAbilityInitFinishNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityInvokeEntry invokes = 2;
  int invokes_size() const;
  void clear_invokes();
  static const int kInvokesFieldNumber = 2;
  const ::proto::AbilityInvokeEntry& invokes(int index) const;
  ::proto::AbilityInvokeEntry* mutable_invokes(int index);
  ::proto::AbilityInvokeEntry* add_invokes();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >*
      mutable_invokes();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >&
      invokes() const;

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientAbilityInitFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry > invokes_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityInvocationFailNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityInvocationFailNotify) */ {
 public:
  AbilityInvocationFailNotify();
  virtual ~AbilityInvocationFailNotify();

  AbilityInvocationFailNotify(const AbilityInvocationFailNotify& from);

  inline AbilityInvocationFailNotify& operator=(const AbilityInvocationFailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityInvocationFailNotify(AbilityInvocationFailNotify&& from) noexcept
    : AbilityInvocationFailNotify() {
    *this = ::std::move(from);
  }

  inline AbilityInvocationFailNotify& operator=(AbilityInvocationFailNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityInvocationFailNotify& default_instance();

  static inline const AbilityInvocationFailNotify* internal_default_instance() {
    return reinterpret_cast<const AbilityInvocationFailNotify*>(
               &_AbilityInvocationFailNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(AbilityInvocationFailNotify* other);
  friend void swap(AbilityInvocationFailNotify& a, AbilityInvocationFailNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityInvocationFailNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityInvocationFailNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityInvocationFailNotify& from);
  void MergeFrom(const AbilityInvocationFailNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityInvocationFailNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AbilityInvocationFailNotify_CmdId CmdId;
  static const CmdId NONE =
    AbilityInvocationFailNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AbilityInvocationFailNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AbilityInvocationFailNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AbilityInvocationFailNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AbilityInvocationFailNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AbilityInvocationFailNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AbilityInvocationFailNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AbilityInvocationFailNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AbilityInvocationFailNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AbilityInvocationFailNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AbilityInvocationFailNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // .proto.AbilityInvokeEntry invoke = 2;
  bool has_invoke() const;
  void clear_invoke();
  static const int kInvokeFieldNumber = 2;
  const ::proto::AbilityInvokeEntry& invoke() const;
  ::proto::AbilityInvokeEntry* mutable_invoke();
  ::proto::AbilityInvokeEntry* release_invoke();
  void set_allocated_invoke(::proto::AbilityInvokeEntry* invoke);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityInvocationFailNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::proto::AbilityInvokeEntry* invoke_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityResetReason : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityResetReason) */ {
 public:
  AbilityResetReason();
  virtual ~AbilityResetReason();

  AbilityResetReason(const AbilityResetReason& from);

  inline AbilityResetReason& operator=(const AbilityResetReason& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityResetReason(AbilityResetReason&& from) noexcept
    : AbilityResetReason() {
    *this = ::std::move(from);
  }

  inline AbilityResetReason& operator=(AbilityResetReason&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityResetReason& default_instance();

  static inline const AbilityResetReason* internal_default_instance() {
    return reinterpret_cast<const AbilityResetReason*>(
               &_AbilityResetReason_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(AbilityResetReason* other);
  friend void swap(AbilityResetReason& a, AbilityResetReason& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityResetReason* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityResetReason* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityResetReason& from);
  void MergeFrom(const AbilityResetReason& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityResetReason* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityResetReasonType reason_type = 1;
  void clear_reason_type();
  static const int kReasonTypeFieldNumber = 1;
  ::proto::AbilityResetReasonType reason_type() const;
  void set_reason_type(::proto::AbilityResetReasonType value);

  // uint32 param = 2;
  void clear_param();
  static const int kParamFieldNumber = 2;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityResetReason)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_type_;
  ::google::protobuf::uint32 param_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarAbilityResetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarAbilityResetNotify) */ {
 public:
  AvatarAbilityResetNotify();
  virtual ~AvatarAbilityResetNotify();

  AvatarAbilityResetNotify(const AvatarAbilityResetNotify& from);

  inline AvatarAbilityResetNotify& operator=(const AvatarAbilityResetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarAbilityResetNotify(AvatarAbilityResetNotify&& from) noexcept
    : AvatarAbilityResetNotify() {
    *this = ::std::move(from);
  }

  inline AvatarAbilityResetNotify& operator=(AvatarAbilityResetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarAbilityResetNotify& default_instance();

  static inline const AvatarAbilityResetNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarAbilityResetNotify*>(
               &_AvatarAbilityResetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(AvatarAbilityResetNotify* other);
  friend void swap(AvatarAbilityResetNotify& a, AvatarAbilityResetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarAbilityResetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarAbilityResetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarAbilityResetNotify& from);
  void MergeFrom(const AvatarAbilityResetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarAbilityResetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarAbilityResetNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarAbilityResetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarAbilityResetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarAbilityResetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarAbilityResetNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AvatarAbilityResetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarAbilityResetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarAbilityResetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarAbilityResetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarAbilityResetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarAbilityResetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarAbilityResetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.AbilityResetReason reset_reason = 2;
  bool has_reset_reason() const;
  void clear_reset_reason();
  static const int kResetReasonFieldNumber = 2;
  const ::proto::AbilityResetReason& reset_reason() const;
  ::proto::AbilityResetReason* mutable_reset_reason();
  ::proto::AbilityResetReason* release_reset_reason();
  void set_allocated_reset_reason(::proto::AbilityResetReason* reset_reason);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarAbilityResetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityResetReason* reset_reason_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityAbilityInvokeEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityAbilityInvokeEntry) */ {
 public:
  EntityAbilityInvokeEntry();
  virtual ~EntityAbilityInvokeEntry();

  EntityAbilityInvokeEntry(const EntityAbilityInvokeEntry& from);

  inline EntityAbilityInvokeEntry& operator=(const EntityAbilityInvokeEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityAbilityInvokeEntry(EntityAbilityInvokeEntry&& from) noexcept
    : EntityAbilityInvokeEntry() {
    *this = ::std::move(from);
  }

  inline EntityAbilityInvokeEntry& operator=(EntityAbilityInvokeEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAbilityInvokeEntry& default_instance();

  static inline const EntityAbilityInvokeEntry* internal_default_instance() {
    return reinterpret_cast<const EntityAbilityInvokeEntry*>(
               &_EntityAbilityInvokeEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(EntityAbilityInvokeEntry* other);
  friend void swap(EntityAbilityInvokeEntry& a, EntityAbilityInvokeEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityAbilityInvokeEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityAbilityInvokeEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityAbilityInvokeEntry& from);
  void MergeFrom(const EntityAbilityInvokeEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityAbilityInvokeEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityInvokeEntry invokes = 2;
  int invokes_size() const;
  void clear_invokes();
  static const int kInvokesFieldNumber = 2;
  const ::proto::AbilityInvokeEntry& invokes(int index) const;
  ::proto::AbilityInvokeEntry* mutable_invokes(int index);
  ::proto::AbilityInvokeEntry* add_invokes();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >*
      mutable_invokes();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >&
      invokes() const;

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityAbilityInvokeEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry > invokes_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientAbilitiesInitFinishCombineNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientAbilitiesInitFinishCombineNotify) */ {
 public:
  ClientAbilitiesInitFinishCombineNotify();
  virtual ~ClientAbilitiesInitFinishCombineNotify();

  ClientAbilitiesInitFinishCombineNotify(const ClientAbilitiesInitFinishCombineNotify& from);

  inline ClientAbilitiesInitFinishCombineNotify& operator=(const ClientAbilitiesInitFinishCombineNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientAbilitiesInitFinishCombineNotify(ClientAbilitiesInitFinishCombineNotify&& from) noexcept
    : ClientAbilitiesInitFinishCombineNotify() {
    *this = ::std::move(from);
  }

  inline ClientAbilitiesInitFinishCombineNotify& operator=(ClientAbilitiesInitFinishCombineNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientAbilitiesInitFinishCombineNotify& default_instance();

  static inline const ClientAbilitiesInitFinishCombineNotify* internal_default_instance() {
    return reinterpret_cast<const ClientAbilitiesInitFinishCombineNotify*>(
               &_ClientAbilitiesInitFinishCombineNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(ClientAbilitiesInitFinishCombineNotify* other);
  friend void swap(ClientAbilitiesInitFinishCombineNotify& a, ClientAbilitiesInitFinishCombineNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientAbilitiesInitFinishCombineNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientAbilitiesInitFinishCombineNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientAbilitiesInitFinishCombineNotify& from);
  void MergeFrom(const ClientAbilitiesInitFinishCombineNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientAbilitiesInitFinishCombineNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientAbilitiesInitFinishCombineNotify_CmdId CmdId;
  static const CmdId NONE =
    ClientAbilitiesInitFinishCombineNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientAbilitiesInitFinishCombineNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientAbilitiesInitFinishCombineNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientAbilitiesInitFinishCombineNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientAbilitiesInitFinishCombineNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientAbilitiesInitFinishCombineNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientAbilitiesInitFinishCombineNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientAbilitiesInitFinishCombineNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientAbilitiesInitFinishCombineNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientAbilitiesInitFinishCombineNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.EntityAbilityInvokeEntry entity_invoke_list = 1;
  int entity_invoke_list_size() const;
  void clear_entity_invoke_list();
  static const int kEntityInvokeListFieldNumber = 1;
  const ::proto::EntityAbilityInvokeEntry& entity_invoke_list(int index) const;
  ::proto::EntityAbilityInvokeEntry* mutable_entity_invoke_list(int index);
  ::proto::EntityAbilityInvokeEntry* add_entity_invoke_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityAbilityInvokeEntry >*
      mutable_entity_invoke_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityAbilityInvokeEntry >&
      entity_invoke_list() const;

  // @@protoc_insertion_point(class_scope:proto.ClientAbilitiesInitFinishCombineNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityAbilityInvokeEntry > entity_invoke_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementReactionLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ElementReactionLog) */ {
 public:
  ElementReactionLog();
  virtual ~ElementReactionLog();

  ElementReactionLog(const ElementReactionLog& from);

  inline ElementReactionLog& operator=(const ElementReactionLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementReactionLog(ElementReactionLog&& from) noexcept
    : ElementReactionLog() {
    *this = ::std::move(from);
  }

  inline ElementReactionLog& operator=(ElementReactionLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementReactionLog& default_instance();

  static inline const ElementReactionLog* internal_default_instance() {
    return reinterpret_cast<const ElementReactionLog*>(
               &_ElementReactionLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ElementReactionLog* other);
  friend void swap(ElementReactionLog& a, ElementReactionLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementReactionLog* New() const PROTOBUF_FINAL { return New(NULL); }

  ElementReactionLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ElementReactionLog& from);
  void MergeFrom(const ElementReactionLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ElementReactionLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ability_name = 3;
  void clear_ability_name();
  static const int kAbilityNameFieldNumber = 3;
  const ::std::string& ability_name() const;
  void set_ability_name(const ::std::string& value);
  #if LANG_CXX11
  void set_ability_name(::std::string&& value);
  #endif
  void set_ability_name(const char* value);
  void set_ability_name(const char* value, size_t size);
  ::std::string* mutable_ability_name();
  ::std::string* release_ability_name();
  void set_allocated_ability_name(::std::string* ability_name);

  // string modifier_name = 4;
  void clear_modifier_name();
  static const int kModifierNameFieldNumber = 4;
  const ::std::string& modifier_name() const;
  void set_modifier_name(const ::std::string& value);
  #if LANG_CXX11
  void set_modifier_name(::std::string&& value);
  #endif
  void set_modifier_name(const char* value);
  void set_modifier_name(const char* value, size_t size);
  ::std::string* mutable_modifier_name();
  ::std::string* release_modifier_name();
  void set_allocated_modifier_name(::std::string* modifier_name);

  // string anim_event_id = 5;
  void clear_anim_event_id();
  static const int kAnimEventIdFieldNumber = 5;
  const ::std::string& anim_event_id() const;
  void set_anim_event_id(const ::std::string& value);
  #if LANG_CXX11
  void set_anim_event_id(::std::string&& value);
  #endif
  void set_anim_event_id(const char* value);
  void set_anim_event_id(const char* value, size_t size);
  ::std::string* mutable_anim_event_id();
  ::std::string* release_anim_event_id();
  void set_allocated_anim_event_id(::std::string* anim_event_id);

  // string attack_tag = 6;
  void clear_attack_tag();
  static const int kAttackTagFieldNumber = 6;
  const ::std::string& attack_tag() const;
  void set_attack_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_attack_tag(::std::string&& value);
  #endif
  void set_attack_tag(const char* value);
  void set_attack_tag(const char* value, size_t size);
  ::std::string* mutable_attack_tag();
  ::std::string* release_attack_tag();
  void set_allocated_attack_tag(::std::string* attack_tag);

  // .proto.Vector pos = 11;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 11;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 source_id = 1;
  void clear_source_id();
  static const int kSourceIdFieldNumber = 1;
  ::google::protobuf::uint32 source_id() const;
  void set_source_id(::google::protobuf::uint32 value);

  // uint32 target_id = 2;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  ::google::protobuf::uint32 target_id() const;
  void set_target_id(::google::protobuf::uint32 value);

  // uint32 reaction_type = 7;
  void clear_reaction_type();
  static const int kReactionTypeFieldNumber = 7;
  ::google::protobuf::uint32 reaction_type() const;
  void set_reaction_type(::google::protobuf::uint32 value);

  // uint32 count = 8;
  void clear_count();
  static const int kCountFieldNumber = 8;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 source_lv = 9;
  void clear_source_lv();
  static const int kSourceLvFieldNumber = 9;
  ::google::protobuf::uint32 source_lv() const;
  void set_source_lv(::google::protobuf::uint32 value);

  // uint32 target_lv = 10;
  void clear_target_lv();
  static const int kTargetLvFieldNumber = 10;
  ::google::protobuf::uint32 target_lv() const;
  void set_target_lv(::google::protobuf::uint32 value);

  // uint32 time = 12;
  void clear_time();
  static const int kTimeFieldNumber = 12;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ElementReactionLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ability_name_;
  ::google::protobuf::internal::ArenaStringPtr modifier_name_;
  ::google::protobuf::internal::ArenaStringPtr anim_event_id_;
  ::google::protobuf::internal::ArenaStringPtr attack_tag_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 source_id_;
  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::uint32 reaction_type_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 source_lv_;
  ::google::protobuf::uint32 target_lv_;
  ::google::protobuf::uint32 time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementReactionLogNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ElementReactionLogNotify) */ {
 public:
  ElementReactionLogNotify();
  virtual ~ElementReactionLogNotify();

  ElementReactionLogNotify(const ElementReactionLogNotify& from);

  inline ElementReactionLogNotify& operator=(const ElementReactionLogNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementReactionLogNotify(ElementReactionLogNotify&& from) noexcept
    : ElementReactionLogNotify() {
    *this = ::std::move(from);
  }

  inline ElementReactionLogNotify& operator=(ElementReactionLogNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementReactionLogNotify& default_instance();

  static inline const ElementReactionLogNotify* internal_default_instance() {
    return reinterpret_cast<const ElementReactionLogNotify*>(
               &_ElementReactionLogNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(ElementReactionLogNotify* other);
  friend void swap(ElementReactionLogNotify& a, ElementReactionLogNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementReactionLogNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ElementReactionLogNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ElementReactionLogNotify& from);
  void MergeFrom(const ElementReactionLogNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ElementReactionLogNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ElementReactionLogNotify_CmdId CmdId;
  static const CmdId NONE =
    ElementReactionLogNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ElementReactionLogNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ElementReactionLogNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ElementReactionLogNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ElementReactionLogNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ElementReactionLogNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ElementReactionLogNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ElementReactionLogNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ElementReactionLogNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ElementReactionLogNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ElementReactionLogNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ElementReactionLogNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ElementReactionLog log_list = 1;
  int log_list_size() const;
  void clear_log_list();
  static const int kLogListFieldNumber = 1;
  const ::proto::ElementReactionLog& log_list(int index) const;
  ::proto::ElementReactionLog* mutable_log_list(int index);
  ::proto::ElementReactionLog* add_log_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ElementReactionLog >*
      mutable_log_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ElementReactionLog >&
      log_list() const;

  // @@protoc_insertion_point(class_scope:proto.ElementReactionLogNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ElementReactionLog > log_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarAbilityResetFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarAbilityResetFinishNotify) */ {
 public:
  AvatarAbilityResetFinishNotify();
  virtual ~AvatarAbilityResetFinishNotify();

  AvatarAbilityResetFinishNotify(const AvatarAbilityResetFinishNotify& from);

  inline AvatarAbilityResetFinishNotify& operator=(const AvatarAbilityResetFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarAbilityResetFinishNotify(AvatarAbilityResetFinishNotify&& from) noexcept
    : AvatarAbilityResetFinishNotify() {
    *this = ::std::move(from);
  }

  inline AvatarAbilityResetFinishNotify& operator=(AvatarAbilityResetFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarAbilityResetFinishNotify& default_instance();

  static inline const AvatarAbilityResetFinishNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarAbilityResetFinishNotify*>(
               &_AvatarAbilityResetFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(AvatarAbilityResetFinishNotify* other);
  friend void swap(AvatarAbilityResetFinishNotify& a, AvatarAbilityResetFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarAbilityResetFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarAbilityResetFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarAbilityResetFinishNotify& from);
  void MergeFrom(const AvatarAbilityResetFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarAbilityResetFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarAbilityResetFinishNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarAbilityResetFinishNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarAbilityResetFinishNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarAbilityResetFinishNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarAbilityResetFinishNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarAbilityResetFinishNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarAbilityResetFinishNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarAbilityResetFinishNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarAbilityResetFinishNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarAbilityResetFinishNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarAbilityResetFinishNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarAbilityResetFinishNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarAbilityResetFinishNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.AbilityResetReason reset_reason = 2;
  bool has_reset_reason() const;
  void clear_reset_reason();
  static const int kResetReasonFieldNumber = 2;
  const ::proto::AbilityResetReason& reset_reason() const;
  ::proto::AbilityResetReason* mutable_reset_reason();
  ::proto::AbilityResetReason* release_reset_reason();
  void set_allocated_reset_reason(::proto::AbilityResetReason* reset_reason);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarAbilityResetFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityResetReason* reset_reason_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindSeedClientNotify_RefreshNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WindSeedClientNotify.RefreshNotify) */ {
 public:
  WindSeedClientNotify_RefreshNotify();
  virtual ~WindSeedClientNotify_RefreshNotify();

  WindSeedClientNotify_RefreshNotify(const WindSeedClientNotify_RefreshNotify& from);

  inline WindSeedClientNotify_RefreshNotify& operator=(const WindSeedClientNotify_RefreshNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WindSeedClientNotify_RefreshNotify(WindSeedClientNotify_RefreshNotify&& from) noexcept
    : WindSeedClientNotify_RefreshNotify() {
    *this = ::std::move(from);
  }

  inline WindSeedClientNotify_RefreshNotify& operator=(WindSeedClientNotify_RefreshNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WindSeedClientNotify_RefreshNotify& default_instance();

  static inline const WindSeedClientNotify_RefreshNotify* internal_default_instance() {
    return reinterpret_cast<const WindSeedClientNotify_RefreshNotify*>(
               &_WindSeedClientNotify_RefreshNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(WindSeedClientNotify_RefreshNotify* other);
  friend void swap(WindSeedClientNotify_RefreshNotify& a, WindSeedClientNotify_RefreshNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WindSeedClientNotify_RefreshNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WindSeedClientNotify_RefreshNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WindSeedClientNotify_RefreshNotify& from);
  void MergeFrom(const WindSeedClientNotify_RefreshNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindSeedClientNotify_RefreshNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 refresh_num = 1;
  void clear_refresh_num();
  static const int kRefreshNumFieldNumber = 1;
  ::google::protobuf::uint32 refresh_num() const;
  void set_refresh_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WindSeedClientNotify.RefreshNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 refresh_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindSeedClientNotify_AddWindBulletNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WindSeedClientNotify.AddWindBulletNotify) */ {
 public:
  WindSeedClientNotify_AddWindBulletNotify();
  virtual ~WindSeedClientNotify_AddWindBulletNotify();

  WindSeedClientNotify_AddWindBulletNotify(const WindSeedClientNotify_AddWindBulletNotify& from);

  inline WindSeedClientNotify_AddWindBulletNotify& operator=(const WindSeedClientNotify_AddWindBulletNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WindSeedClientNotify_AddWindBulletNotify(WindSeedClientNotify_AddWindBulletNotify&& from) noexcept
    : WindSeedClientNotify_AddWindBulletNotify() {
    *this = ::std::move(from);
  }

  inline WindSeedClientNotify_AddWindBulletNotify& operator=(WindSeedClientNotify_AddWindBulletNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WindSeedClientNotify_AddWindBulletNotify& default_instance();

  static inline const WindSeedClientNotify_AddWindBulletNotify* internal_default_instance() {
    return reinterpret_cast<const WindSeedClientNotify_AddWindBulletNotify*>(
               &_WindSeedClientNotify_AddWindBulletNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(WindSeedClientNotify_AddWindBulletNotify* other);
  friend void swap(WindSeedClientNotify_AddWindBulletNotify& a, WindSeedClientNotify_AddWindBulletNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WindSeedClientNotify_AddWindBulletNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WindSeedClientNotify_AddWindBulletNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WindSeedClientNotify_AddWindBulletNotify& from);
  void MergeFrom(const WindSeedClientNotify_AddWindBulletNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindSeedClientNotify_AddWindBulletNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector seed_pos = 2;
  bool has_seed_pos() const;
  void clear_seed_pos();
  static const int kSeedPosFieldNumber = 2;
  const ::proto::Vector& seed_pos() const;
  ::proto::Vector* mutable_seed_pos();
  ::proto::Vector* release_seed_pos();
  void set_allocated_seed_pos(::proto::Vector* seed_pos);

  // uint32 seed_entity_id = 1;
  void clear_seed_entity_id();
  static const int kSeedEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 seed_entity_id() const;
  void set_seed_entity_id(::google::protobuf::uint32 value);

  // uint32 catch_player_uid = 3;
  void clear_catch_player_uid();
  static const int kCatchPlayerUidFieldNumber = 3;
  ::google::protobuf::uint32 catch_player_uid() const;
  void set_catch_player_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WindSeedClientNotify.AddWindBulletNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* seed_pos_;
  ::google::protobuf::uint32 seed_entity_id_;
  ::google::protobuf::uint32 catch_player_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindSeedClientNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WindSeedClientNotify) */ {
 public:
  WindSeedClientNotify();
  virtual ~WindSeedClientNotify();

  WindSeedClientNotify(const WindSeedClientNotify& from);

  inline WindSeedClientNotify& operator=(const WindSeedClientNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WindSeedClientNotify(WindSeedClientNotify&& from) noexcept
    : WindSeedClientNotify() {
    *this = ::std::move(from);
  }

  inline WindSeedClientNotify& operator=(WindSeedClientNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WindSeedClientNotify& default_instance();

  enum NotifyCase {
    kRefreshNotify = 1,
    kAddWindBulletNotify = 2,
    NOTIFY_NOT_SET = 0,
  };

  static inline const WindSeedClientNotify* internal_default_instance() {
    return reinterpret_cast<const WindSeedClientNotify*>(
               &_WindSeedClientNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(WindSeedClientNotify* other);
  friend void swap(WindSeedClientNotify& a, WindSeedClientNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WindSeedClientNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WindSeedClientNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WindSeedClientNotify& from);
  void MergeFrom(const WindSeedClientNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindSeedClientNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WindSeedClientNotify_RefreshNotify RefreshNotify;
  typedef WindSeedClientNotify_AddWindBulletNotify AddWindBulletNotify;

  typedef WindSeedClientNotify_CmdId CmdId;
  static const CmdId NONE =
    WindSeedClientNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WindSeedClientNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WindSeedClientNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WindSeedClientNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WindSeedClientNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WindSeedClientNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WindSeedClientNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WindSeedClientNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WindSeedClientNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WindSeedClientNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WindSeedClientNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.WindSeedClientNotify.RefreshNotify refresh_notify = 1;
  bool has_refresh_notify() const;
  void clear_refresh_notify();
  static const int kRefreshNotifyFieldNumber = 1;
  const ::proto::WindSeedClientNotify_RefreshNotify& refresh_notify() const;
  ::proto::WindSeedClientNotify_RefreshNotify* mutable_refresh_notify();
  ::proto::WindSeedClientNotify_RefreshNotify* release_refresh_notify();
  void set_allocated_refresh_notify(::proto::WindSeedClientNotify_RefreshNotify* refresh_notify);

  // .proto.WindSeedClientNotify.AddWindBulletNotify add_wind_bullet_notify = 2;
  bool has_add_wind_bullet_notify() const;
  void clear_add_wind_bullet_notify();
  static const int kAddWindBulletNotifyFieldNumber = 2;
  const ::proto::WindSeedClientNotify_AddWindBulletNotify& add_wind_bullet_notify() const;
  ::proto::WindSeedClientNotify_AddWindBulletNotify* mutable_add_wind_bullet_notify();
  ::proto::WindSeedClientNotify_AddWindBulletNotify* release_add_wind_bullet_notify();
  void set_allocated_add_wind_bullet_notify(::proto::WindSeedClientNotify_AddWindBulletNotify* add_wind_bullet_notify);

  NotifyCase notify_case() const;
  // @@protoc_insertion_point(class_scope:proto.WindSeedClientNotify)
 private:
  void set_has_refresh_notify();
  void set_has_add_wind_bullet_notify();

  inline bool has_notify() const;
  void clear_notify();
  inline void clear_has_notify();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union NotifyUnion {
    NotifyUnion() {}
    ::proto::WindSeedClientNotify_RefreshNotify* refresh_notify_;
    ::proto::WindSeedClientNotify_AddWindBulletNotify* add_wind_bullet_notify_;
  } notify_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fability_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AbilityInvokeEntryHead

// uint32 instanced_ability_id = 1;
inline void AbilityInvokeEntryHead::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityInvokeEntryHead::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntryHead.instanced_ability_id)
  return instanced_ability_id_;
}
inline void AbilityInvokeEntryHead::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntryHead.instanced_ability_id)
}

// uint32 instanced_modifier_id = 2;
inline void AbilityInvokeEntryHead::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityInvokeEntryHead::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntryHead.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void AbilityInvokeEntryHead::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntryHead.instanced_modifier_id)
}

// int32 local_id = 3;
inline void AbilityInvokeEntryHead::clear_local_id() {
  local_id_ = 0;
}
inline ::google::protobuf::int32 AbilityInvokeEntryHead::local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntryHead.local_id)
  return local_id_;
}
inline void AbilityInvokeEntryHead::set_local_id(::google::protobuf::int32 value) {
  
  local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntryHead.local_id)
}

// int32 modifier_config_local_id = 4;
inline void AbilityInvokeEntryHead::clear_modifier_config_local_id() {
  modifier_config_local_id_ = 0;
}
inline ::google::protobuf::int32 AbilityInvokeEntryHead::modifier_config_local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntryHead.modifier_config_local_id)
  return modifier_config_local_id_;
}
inline void AbilityInvokeEntryHead::set_modifier_config_local_id(::google::protobuf::int32 value) {
  
  modifier_config_local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntryHead.modifier_config_local_id)
}

// uint32 target_id = 5;
inline void AbilityInvokeEntryHead::clear_target_id() {
  target_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityInvokeEntryHead::target_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntryHead.target_id)
  return target_id_;
}
inline void AbilityInvokeEntryHead::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntryHead.target_id)
}

// -------------------------------------------------------------------

// AbilityInvokeEntry

// .proto.AbilityInvokeEntryHead head = 1;
inline bool AbilityInvokeEntry::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void AbilityInvokeEntry::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
inline const ::proto::AbilityInvokeEntryHead& AbilityInvokeEntry::head() const {
  const ::proto::AbilityInvokeEntryHead* p = head_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntry.head)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntryHead*>(
      &::proto::_AbilityInvokeEntryHead_default_instance_);
}
inline ::proto::AbilityInvokeEntryHead* AbilityInvokeEntry::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::proto::AbilityInvokeEntryHead;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvokeEntry.head)
  return head_;
}
inline ::proto::AbilityInvokeEntryHead* AbilityInvokeEntry::release_head() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvokeEntry.head)
  
  ::proto::AbilityInvokeEntryHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void AbilityInvokeEntry::set_allocated_head(::proto::AbilityInvokeEntryHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvokeEntry.head)
}

// .proto.AbilityInvokeArgument argument_type = 2;
inline void AbilityInvokeEntry::clear_argument_type() {
  argument_type_ = 0;
}
inline ::proto::AbilityInvokeArgument AbilityInvokeEntry::argument_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntry.argument_type)
  return static_cast< ::proto::AbilityInvokeArgument >(argument_type_);
}
inline void AbilityInvokeEntry::set_argument_type(::proto::AbilityInvokeArgument value) {
  
  argument_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntry.argument_type)
}

// bytes ability_data = 3;
inline void AbilityInvokeEntry::clear_ability_data() {
  ability_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbilityInvokeEntry::ability_data() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntry.ability_data)
  return ability_data_.GetNoArena();
}
inline void AbilityInvokeEntry::set_ability_data(const ::std::string& value) {
  
  ability_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntry.ability_data)
}
#if LANG_CXX11
inline void AbilityInvokeEntry::set_ability_data(::std::string&& value) {
  
  ability_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityInvokeEntry.ability_data)
}
#endif
inline void AbilityInvokeEntry::set_ability_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ability_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityInvokeEntry.ability_data)
}
inline void AbilityInvokeEntry::set_ability_data(const void* value, size_t size) {
  
  ability_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityInvokeEntry.ability_data)
}
inline ::std::string* AbilityInvokeEntry::mutable_ability_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvokeEntry.ability_data)
  return ability_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityInvokeEntry::release_ability_data() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvokeEntry.ability_data)
  
  return ability_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbilityInvokeEntry::set_allocated_ability_data(::std::string* ability_data) {
  if (ability_data != NULL) {
    
  } else {
    
  }
  ability_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ability_data);
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvokeEntry.ability_data)
}

// uint32 entity_id = 4;
inline void AbilityInvokeEntry::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityInvokeEntry::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntry.entity_id)
  return entity_id_;
}
inline void AbilityInvokeEntry::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntry.entity_id)
}

// .proto.ForwardType forward_type = 5;
inline void AbilityInvokeEntry::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType AbilityInvokeEntry::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntry.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void AbilityInvokeEntry::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntry.forward_type)
}

// uint32 forward_peer = 6;
inline void AbilityInvokeEntry::clear_forward_peer() {
  forward_peer_ = 0u;
}
inline ::google::protobuf::uint32 AbilityInvokeEntry::forward_peer() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvokeEntry.forward_peer)
  return forward_peer_;
}
inline void AbilityInvokeEntry::set_forward_peer(::google::protobuf::uint32 value) {
  
  forward_peer_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvokeEntry.forward_peer)
}

// -------------------------------------------------------------------

// AbilityInvocationFixedNotify

// .proto.AbilityInvokeEntry invoke1st = 1;
inline bool AbilityInvocationFixedNotify::has_invoke1st() const {
  return this != internal_default_instance() && invoke1st_ != NULL;
}
inline void AbilityInvocationFixedNotify::clear_invoke1st() {
  if (GetArenaNoVirtual() == NULL && invoke1st_ != NULL) delete invoke1st_;
  invoke1st_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFixedNotify::invoke1st() const {
  const ::proto::AbilityInvokeEntry* p = invoke1st_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFixedNotify.invoke1st)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::mutable_invoke1st() {
  
  if (invoke1st_ == NULL) {
    invoke1st_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFixedNotify.invoke1st)
  return invoke1st_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::release_invoke1st() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFixedNotify.invoke1st)
  
  ::proto::AbilityInvokeEntry* temp = invoke1st_;
  invoke1st_ = NULL;
  return temp;
}
inline void AbilityInvocationFixedNotify::set_allocated_invoke1st(::proto::AbilityInvokeEntry* invoke1st) {
  delete invoke1st_;
  invoke1st_ = invoke1st;
  if (invoke1st) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFixedNotify.invoke1st)
}

// .proto.AbilityInvokeEntry invoke2nd = 2;
inline bool AbilityInvocationFixedNotify::has_invoke2nd() const {
  return this != internal_default_instance() && invoke2nd_ != NULL;
}
inline void AbilityInvocationFixedNotify::clear_invoke2nd() {
  if (GetArenaNoVirtual() == NULL && invoke2nd_ != NULL) delete invoke2nd_;
  invoke2nd_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFixedNotify::invoke2nd() const {
  const ::proto::AbilityInvokeEntry* p = invoke2nd_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFixedNotify.invoke2nd)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::mutable_invoke2nd() {
  
  if (invoke2nd_ == NULL) {
    invoke2nd_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFixedNotify.invoke2nd)
  return invoke2nd_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::release_invoke2nd() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFixedNotify.invoke2nd)
  
  ::proto::AbilityInvokeEntry* temp = invoke2nd_;
  invoke2nd_ = NULL;
  return temp;
}
inline void AbilityInvocationFixedNotify::set_allocated_invoke2nd(::proto::AbilityInvokeEntry* invoke2nd) {
  delete invoke2nd_;
  invoke2nd_ = invoke2nd;
  if (invoke2nd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFixedNotify.invoke2nd)
}

// .proto.AbilityInvokeEntry invoke3rd = 3;
inline bool AbilityInvocationFixedNotify::has_invoke3rd() const {
  return this != internal_default_instance() && invoke3rd_ != NULL;
}
inline void AbilityInvocationFixedNotify::clear_invoke3rd() {
  if (GetArenaNoVirtual() == NULL && invoke3rd_ != NULL) delete invoke3rd_;
  invoke3rd_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFixedNotify::invoke3rd() const {
  const ::proto::AbilityInvokeEntry* p = invoke3rd_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFixedNotify.invoke3rd)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::mutable_invoke3rd() {
  
  if (invoke3rd_ == NULL) {
    invoke3rd_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFixedNotify.invoke3rd)
  return invoke3rd_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::release_invoke3rd() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFixedNotify.invoke3rd)
  
  ::proto::AbilityInvokeEntry* temp = invoke3rd_;
  invoke3rd_ = NULL;
  return temp;
}
inline void AbilityInvocationFixedNotify::set_allocated_invoke3rd(::proto::AbilityInvokeEntry* invoke3rd) {
  delete invoke3rd_;
  invoke3rd_ = invoke3rd;
  if (invoke3rd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFixedNotify.invoke3rd)
}

// .proto.AbilityInvokeEntry invoke4th = 4;
inline bool AbilityInvocationFixedNotify::has_invoke4th() const {
  return this != internal_default_instance() && invoke4th_ != NULL;
}
inline void AbilityInvocationFixedNotify::clear_invoke4th() {
  if (GetArenaNoVirtual() == NULL && invoke4th_ != NULL) delete invoke4th_;
  invoke4th_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFixedNotify::invoke4th() const {
  const ::proto::AbilityInvokeEntry* p = invoke4th_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFixedNotify.invoke4th)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::mutable_invoke4th() {
  
  if (invoke4th_ == NULL) {
    invoke4th_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFixedNotify.invoke4th)
  return invoke4th_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::release_invoke4th() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFixedNotify.invoke4th)
  
  ::proto::AbilityInvokeEntry* temp = invoke4th_;
  invoke4th_ = NULL;
  return temp;
}
inline void AbilityInvocationFixedNotify::set_allocated_invoke4th(::proto::AbilityInvokeEntry* invoke4th) {
  delete invoke4th_;
  invoke4th_ = invoke4th;
  if (invoke4th) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFixedNotify.invoke4th)
}

// .proto.AbilityInvokeEntry invoke5th = 5;
inline bool AbilityInvocationFixedNotify::has_invoke5th() const {
  return this != internal_default_instance() && invoke5th_ != NULL;
}
inline void AbilityInvocationFixedNotify::clear_invoke5th() {
  if (GetArenaNoVirtual() == NULL && invoke5th_ != NULL) delete invoke5th_;
  invoke5th_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFixedNotify::invoke5th() const {
  const ::proto::AbilityInvokeEntry* p = invoke5th_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFixedNotify.invoke5th)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::mutable_invoke5th() {
  
  if (invoke5th_ == NULL) {
    invoke5th_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFixedNotify.invoke5th)
  return invoke5th_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::release_invoke5th() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFixedNotify.invoke5th)
  
  ::proto::AbilityInvokeEntry* temp = invoke5th_;
  invoke5th_ = NULL;
  return temp;
}
inline void AbilityInvocationFixedNotify::set_allocated_invoke5th(::proto::AbilityInvokeEntry* invoke5th) {
  delete invoke5th_;
  invoke5th_ = invoke5th;
  if (invoke5th) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFixedNotify.invoke5th)
}

// .proto.AbilityInvokeEntry invoke6th = 6;
inline bool AbilityInvocationFixedNotify::has_invoke6th() const {
  return this != internal_default_instance() && invoke6th_ != NULL;
}
inline void AbilityInvocationFixedNotify::clear_invoke6th() {
  if (GetArenaNoVirtual() == NULL && invoke6th_ != NULL) delete invoke6th_;
  invoke6th_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFixedNotify::invoke6th() const {
  const ::proto::AbilityInvokeEntry* p = invoke6th_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFixedNotify.invoke6th)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::mutable_invoke6th() {
  
  if (invoke6th_ == NULL) {
    invoke6th_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFixedNotify.invoke6th)
  return invoke6th_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFixedNotify::release_invoke6th() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFixedNotify.invoke6th)
  
  ::proto::AbilityInvokeEntry* temp = invoke6th_;
  invoke6th_ = NULL;
  return temp;
}
inline void AbilityInvocationFixedNotify::set_allocated_invoke6th(::proto::AbilityInvokeEntry* invoke6th) {
  delete invoke6th_;
  invoke6th_ = invoke6th;
  if (invoke6th) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFixedNotify.invoke6th)
}

// -------------------------------------------------------------------

// AbilityInvocationsNotify

// repeated .proto.AbilityInvokeEntry invokes = 1;
inline int AbilityInvocationsNotify::invokes_size() const {
  return invokes_.size();
}
inline void AbilityInvocationsNotify::clear_invokes() {
  invokes_.Clear();
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationsNotify::invokes(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationsNotify.invokes)
  return invokes_.Get(index);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationsNotify::mutable_invokes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationsNotify.invokes)
  return invokes_.Mutable(index);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationsNotify::add_invokes() {
  // @@protoc_insertion_point(field_add:proto.AbilityInvocationsNotify.invokes)
  return invokes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >*
AbilityInvocationsNotify::mutable_invokes() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityInvocationsNotify.invokes)
  return &invokes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >&
AbilityInvocationsNotify::invokes() const {
  // @@protoc_insertion_point(field_list:proto.AbilityInvocationsNotify.invokes)
  return invokes_;
}

// -------------------------------------------------------------------

// AbilityMetaReInitOverrideMap

// repeated .proto.AbilityScalarValueEntry override_map = 1;
inline int AbilityMetaReInitOverrideMap::override_map_size() const {
  return override_map_.size();
}
inline void AbilityMetaReInitOverrideMap::clear_override_map() {
  override_map_.Clear();
}
inline const ::proto::AbilityScalarValueEntry& AbilityMetaReInitOverrideMap::override_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaReInitOverrideMap.override_map)
  return override_map_.Get(index);
}
inline ::proto::AbilityScalarValueEntry* AbilityMetaReInitOverrideMap::mutable_override_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaReInitOverrideMap.override_map)
  return override_map_.Mutable(index);
}
inline ::proto::AbilityScalarValueEntry* AbilityMetaReInitOverrideMap::add_override_map() {
  // @@protoc_insertion_point(field_add:proto.AbilityMetaReInitOverrideMap.override_map)
  return override_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilityMetaReInitOverrideMap::mutable_override_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityMetaReInitOverrideMap.override_map)
  return &override_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilityMetaReInitOverrideMap::override_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilityMetaReInitOverrideMap.override_map)
  return override_map_;
}

// -------------------------------------------------------------------

// AbilityMetaAddAbility

// .proto.AbilityAppliedAbility ability = 1;
inline bool AbilityMetaAddAbility::has_ability() const {
  return this != internal_default_instance() && ability_ != NULL;
}
inline void AbilityMetaAddAbility::clear_ability() {
  if (GetArenaNoVirtual() == NULL && ability_ != NULL) delete ability_;
  ability_ = NULL;
}
inline const ::proto::AbilityAppliedAbility& AbilityMetaAddAbility::ability() const {
  const ::proto::AbilityAppliedAbility* p = ability_;
  // @@protoc_insertion_point(field_get:proto.AbilityMetaAddAbility.ability)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityAppliedAbility*>(
      &::proto::_AbilityAppliedAbility_default_instance_);
}
inline ::proto::AbilityAppliedAbility* AbilityMetaAddAbility::mutable_ability() {
  
  if (ability_ == NULL) {
    ability_ = new ::proto::AbilityAppliedAbility;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaAddAbility.ability)
  return ability_;
}
inline ::proto::AbilityAppliedAbility* AbilityMetaAddAbility::release_ability() {
  // @@protoc_insertion_point(field_release:proto.AbilityMetaAddAbility.ability)
  
  ::proto::AbilityAppliedAbility* temp = ability_;
  ability_ = NULL;
  return temp;
}
inline void AbilityMetaAddAbility::set_allocated_ability(::proto::AbilityAppliedAbility* ability) {
  delete ability_;
  ability_ = ability;
  if (ability) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMetaAddAbility.ability)
}

// -------------------------------------------------------------------

// ModifierProperty

// .proto.AbilityString key = 1;
inline bool ModifierProperty::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void ModifierProperty::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::proto::AbilityString& ModifierProperty::key() const {
  const ::proto::AbilityString* p = key_;
  // @@protoc_insertion_point(field_get:proto.ModifierProperty.key)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* ModifierProperty::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.ModifierProperty.key)
  return key_;
}
inline ::proto::AbilityString* ModifierProperty::release_key() {
  // @@protoc_insertion_point(field_release:proto.ModifierProperty.key)
  
  ::proto::AbilityString* temp = key_;
  key_ = NULL;
  return temp;
}
inline void ModifierProperty::set_allocated_key(::proto::AbilityString* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ModifierProperty.key)
}

// float value = 2;
inline void ModifierProperty::clear_value() {
  value_ = 0;
}
inline float ModifierProperty::value() const {
  // @@protoc_insertion_point(field_get:proto.ModifierProperty.value)
  return value_;
}
inline void ModifierProperty::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierProperty.value)
}

// -------------------------------------------------------------------

// AbilityMetaModifierChange

// .proto.ModifierAction action = 1;
inline void AbilityMetaModifierChange::clear_action() {
  action_ = 0;
}
inline ::proto::ModifierAction AbilityMetaModifierChange::action() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.action)
  return static_cast< ::proto::ModifierAction >(action_);
}
inline void AbilityMetaModifierChange::set_action(::proto::ModifierAction value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierChange.action)
}

// .proto.AbilityString parent_ability_name = 2;
inline bool AbilityMetaModifierChange::has_parent_ability_name() const {
  return this != internal_default_instance() && parent_ability_name_ != NULL;
}
inline void AbilityMetaModifierChange::clear_parent_ability_name() {
  if (GetArenaNoVirtual() == NULL && parent_ability_name_ != NULL) delete parent_ability_name_;
  parent_ability_name_ = NULL;
}
inline const ::proto::AbilityString& AbilityMetaModifierChange::parent_ability_name() const {
  const ::proto::AbilityString* p = parent_ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.parent_ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityMetaModifierChange::mutable_parent_ability_name() {
  
  if (parent_ability_name_ == NULL) {
    parent_ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaModifierChange.parent_ability_name)
  return parent_ability_name_;
}
inline ::proto::AbilityString* AbilityMetaModifierChange::release_parent_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityMetaModifierChange.parent_ability_name)
  
  ::proto::AbilityString* temp = parent_ability_name_;
  parent_ability_name_ = NULL;
  return temp;
}
inline void AbilityMetaModifierChange::set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name) {
  delete parent_ability_name_;
  parent_ability_name_ = parent_ability_name;
  if (parent_ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMetaModifierChange.parent_ability_name)
}

// .proto.AbilityString parent_ability_override = 3;
inline bool AbilityMetaModifierChange::has_parent_ability_override() const {
  return this != internal_default_instance() && parent_ability_override_ != NULL;
}
inline void AbilityMetaModifierChange::clear_parent_ability_override() {
  if (GetArenaNoVirtual() == NULL && parent_ability_override_ != NULL) delete parent_ability_override_;
  parent_ability_override_ = NULL;
}
inline const ::proto::AbilityString& AbilityMetaModifierChange::parent_ability_override() const {
  const ::proto::AbilityString* p = parent_ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.parent_ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityMetaModifierChange::mutable_parent_ability_override() {
  
  if (parent_ability_override_ == NULL) {
    parent_ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaModifierChange.parent_ability_override)
  return parent_ability_override_;
}
inline ::proto::AbilityString* AbilityMetaModifierChange::release_parent_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityMetaModifierChange.parent_ability_override)
  
  ::proto::AbilityString* temp = parent_ability_override_;
  parent_ability_override_ = NULL;
  return temp;
}
inline void AbilityMetaModifierChange::set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override) {
  delete parent_ability_override_;
  parent_ability_override_ = parent_ability_override;
  if (parent_ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMetaModifierChange.parent_ability_override)
}

// .proto.AbilityAttachedModifier attached_instanced_modifier = 4;
inline bool AbilityMetaModifierChange::has_attached_instanced_modifier() const {
  return this != internal_default_instance() && attached_instanced_modifier_ != NULL;
}
inline void AbilityMetaModifierChange::clear_attached_instanced_modifier() {
  if (GetArenaNoVirtual() == NULL && attached_instanced_modifier_ != NULL) delete attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
}
inline const ::proto::AbilityAttachedModifier& AbilityMetaModifierChange::attached_instanced_modifier() const {
  const ::proto::AbilityAttachedModifier* p = attached_instanced_modifier_;
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.attached_instanced_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityAttachedModifier*>(
      &::proto::_AbilityAttachedModifier_default_instance_);
}
inline ::proto::AbilityAttachedModifier* AbilityMetaModifierChange::mutable_attached_instanced_modifier() {
  
  if (attached_instanced_modifier_ == NULL) {
    attached_instanced_modifier_ = new ::proto::AbilityAttachedModifier;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaModifierChange.attached_instanced_modifier)
  return attached_instanced_modifier_;
}
inline ::proto::AbilityAttachedModifier* AbilityMetaModifierChange::release_attached_instanced_modifier() {
  // @@protoc_insertion_point(field_release:proto.AbilityMetaModifierChange.attached_instanced_modifier)
  
  ::proto::AbilityAttachedModifier* temp = attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
  return temp;
}
inline void AbilityMetaModifierChange::set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier) {
  delete attached_instanced_modifier_;
  attached_instanced_modifier_ = attached_instanced_modifier;
  if (attached_instanced_modifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMetaModifierChange.attached_instanced_modifier)
}

// repeated .proto.ModifierProperty properties = 5;
inline int AbilityMetaModifierChange::properties_size() const {
  return properties_.size();
}
inline void AbilityMetaModifierChange::clear_properties() {
  properties_.Clear();
}
inline const ::proto::ModifierProperty& AbilityMetaModifierChange::properties(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.properties)
  return properties_.Get(index);
}
inline ::proto::ModifierProperty* AbilityMetaModifierChange::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaModifierChange.properties)
  return properties_.Mutable(index);
}
inline ::proto::ModifierProperty* AbilityMetaModifierChange::add_properties() {
  // @@protoc_insertion_point(field_add:proto.AbilityMetaModifierChange.properties)
  return properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ModifierProperty >*
AbilityMetaModifierChange::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityMetaModifierChange.properties)
  return &properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ModifierProperty >&
AbilityMetaModifierChange::properties() const {
  // @@protoc_insertion_point(field_list:proto.AbilityMetaModifierChange.properties)
  return properties_;
}

// int32 modifier_local_id = 6;
inline void AbilityMetaModifierChange::clear_modifier_local_id() {
  modifier_local_id_ = 0;
}
inline ::google::protobuf::int32 AbilityMetaModifierChange::modifier_local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.modifier_local_id)
  return modifier_local_id_;
}
inline void AbilityMetaModifierChange::set_modifier_local_id(::google::protobuf::int32 value) {
  
  modifier_local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierChange.modifier_local_id)
}

// bool is_mute_remote = 7;
inline void AbilityMetaModifierChange::clear_is_mute_remote() {
  is_mute_remote_ = false;
}
inline bool AbilityMetaModifierChange::is_mute_remote() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.is_mute_remote)
  return is_mute_remote_;
}
inline void AbilityMetaModifierChange::set_is_mute_remote(bool value) {
  
  is_mute_remote_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierChange.is_mute_remote)
}

// uint32 apply_entity_id = 8;
inline void AbilityMetaModifierChange::clear_apply_entity_id() {
  apply_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMetaModifierChange::apply_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.apply_entity_id)
  return apply_entity_id_;
}
inline void AbilityMetaModifierChange::set_apply_entity_id(::google::protobuf::uint32 value) {
  
  apply_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierChange.apply_entity_id)
}

// bool is_attached_parent_ability = 9;
inline void AbilityMetaModifierChange::clear_is_attached_parent_ability() {
  is_attached_parent_ability_ = false;
}
inline bool AbilityMetaModifierChange::is_attached_parent_ability() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.is_attached_parent_ability)
  return is_attached_parent_ability_;
}
inline void AbilityMetaModifierChange::set_is_attached_parent_ability(bool value) {
  
  is_attached_parent_ability_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierChange.is_attached_parent_ability)
}

// uint32 server_buff_uid = 10;
inline void AbilityMetaModifierChange::clear_server_buff_uid() {
  server_buff_uid_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMetaModifierChange::server_buff_uid() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierChange.server_buff_uid)
  return server_buff_uid_;
}
inline void AbilityMetaModifierChange::set_server_buff_uid(::google::protobuf::uint32 value) {
  
  server_buff_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierChange.server_buff_uid)
}

// -------------------------------------------------------------------

// AbilityMetaSpecialFloatArgument

// float argument_value = 1;
inline void AbilityMetaSpecialFloatArgument::clear_argument_value() {
  argument_value_ = 0;
}
inline float AbilityMetaSpecialFloatArgument::argument_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaSpecialFloatArgument.argument_value)
  return argument_value_;
}
inline void AbilityMetaSpecialFloatArgument::set_argument_value(float value) {
  
  argument_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaSpecialFloatArgument.argument_value)
}

// bool is_on = 2;
inline void AbilityMetaSpecialFloatArgument::clear_is_on() {
  is_on_ = false;
}
inline bool AbilityMetaSpecialFloatArgument::is_on() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaSpecialFloatArgument.is_on)
  return is_on_;
}
inline void AbilityMetaSpecialFloatArgument::set_is_on(bool value) {
  
  is_on_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaSpecialFloatArgument.is_on)
}

// -------------------------------------------------------------------

// AbilityMetaAddOrGetAbilityAndTrigger

// .proto.AbilityString ability_name = 1;
inline bool AbilityMetaAddOrGetAbilityAndTrigger::has_ability_name() const {
  return this != internal_default_instance() && ability_name_ != NULL;
}
inline void AbilityMetaAddOrGetAbilityAndTrigger::clear_ability_name() {
  if (GetArenaNoVirtual() == NULL && ability_name_ != NULL) delete ability_name_;
  ability_name_ = NULL;
}
inline const ::proto::AbilityString& AbilityMetaAddOrGetAbilityAndTrigger::ability_name() const {
  const ::proto::AbilityString* p = ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityMetaAddOrGetAbilityAndTrigger::mutable_ability_name() {
  
  if (ability_name_ == NULL) {
    ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_name)
  return ability_name_;
}
inline ::proto::AbilityString* AbilityMetaAddOrGetAbilityAndTrigger::release_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_name)
  
  ::proto::AbilityString* temp = ability_name_;
  ability_name_ = NULL;
  return temp;
}
inline void AbilityMetaAddOrGetAbilityAndTrigger::set_allocated_ability_name(::proto::AbilityString* ability_name) {
  delete ability_name_;
  ability_name_ = ability_name;
  if (ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_name)
}

// .proto.AbilityString ability_override = 2;
inline bool AbilityMetaAddOrGetAbilityAndTrigger::has_ability_override() const {
  return this != internal_default_instance() && ability_override_ != NULL;
}
inline void AbilityMetaAddOrGetAbilityAndTrigger::clear_ability_override() {
  if (GetArenaNoVirtual() == NULL && ability_override_ != NULL) delete ability_override_;
  ability_override_ = NULL;
}
inline const ::proto::AbilityString& AbilityMetaAddOrGetAbilityAndTrigger::ability_override() const {
  const ::proto::AbilityString* p = ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityMetaAddOrGetAbilityAndTrigger::mutable_ability_override() {
  
  if (ability_override_ == NULL) {
    ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_override)
  return ability_override_;
}
inline ::proto::AbilityString* AbilityMetaAddOrGetAbilityAndTrigger::release_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_override)
  
  ::proto::AbilityString* temp = ability_override_;
  ability_override_ = NULL;
  return temp;
}
inline void AbilityMetaAddOrGetAbilityAndTrigger::set_allocated_ability_override(::proto::AbilityString* ability_override) {
  delete ability_override_;
  ability_override_ = ability_override;
  if (ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMetaAddOrGetAbilityAndTrigger.ability_override)
}

// float trigger_argument = 3;
inline void AbilityMetaAddOrGetAbilityAndTrigger::clear_trigger_argument() {
  trigger_argument_ = 0;
}
inline float AbilityMetaAddOrGetAbilityAndTrigger::trigger_argument() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaAddOrGetAbilityAndTrigger.trigger_argument)
  return trigger_argument_;
}
inline void AbilityMetaAddOrGetAbilityAndTrigger::set_trigger_argument(float value) {
  
  trigger_argument_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaAddOrGetAbilityAndTrigger.trigger_argument)
}

// -------------------------------------------------------------------

// AbilityMetaSetKilledState

// bool killed = 1;
inline void AbilityMetaSetKilledState::clear_killed() {
  killed_ = false;
}
inline bool AbilityMetaSetKilledState::killed() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaSetKilledState.killed)
  return killed_;
}
inline void AbilityMetaSetKilledState::set_killed(bool value) {
  
  killed_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaSetKilledState.killed)
}

// -------------------------------------------------------------------

// AbilityMetaSetAbilityTrigger

// uint32 trigger_ability_entity_id = 1;
inline void AbilityMetaSetAbilityTrigger::clear_trigger_ability_entity_id() {
  trigger_ability_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMetaSetAbilityTrigger::trigger_ability_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaSetAbilityTrigger.trigger_ability_entity_id)
  return trigger_ability_entity_id_;
}
inline void AbilityMetaSetAbilityTrigger::set_trigger_ability_entity_id(::google::protobuf::uint32 value) {
  
  trigger_ability_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaSetAbilityTrigger.trigger_ability_entity_id)
}

// -------------------------------------------------------------------

// AbilityMetaSetModifierApplyEntityId

// uint32 apply_entity_id = 1;
inline void AbilityMetaSetModifierApplyEntityId::clear_apply_entity_id() {
  apply_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMetaSetModifierApplyEntityId::apply_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaSetModifierApplyEntityId.apply_entity_id)
  return apply_entity_id_;
}
inline void AbilityMetaSetModifierApplyEntityId::set_apply_entity_id(::google::protobuf::uint32 value) {
  
  apply_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaSetModifierApplyEntityId.apply_entity_id)
}

// -------------------------------------------------------------------

// AbilityMetaModifierDurabilityChange

// float reduce_durability = 1;
inline void AbilityMetaModifierDurabilityChange::clear_reduce_durability() {
  reduce_durability_ = 0;
}
inline float AbilityMetaModifierDurabilityChange::reduce_durability() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierDurabilityChange.reduce_durability)
  return reduce_durability_;
}
inline void AbilityMetaModifierDurabilityChange::set_reduce_durability(float value) {
  
  reduce_durability_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierDurabilityChange.reduce_durability)
}

// float remain_durability = 2;
inline void AbilityMetaModifierDurabilityChange::clear_remain_durability() {
  remain_durability_ = 0;
}
inline float AbilityMetaModifierDurabilityChange::remain_durability() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMetaModifierDurabilityChange.remain_durability)
  return remain_durability_;
}
inline void AbilityMetaModifierDurabilityChange::set_remain_durability(float value) {
  
  remain_durability_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMetaModifierDurabilityChange.remain_durability)
}

// -------------------------------------------------------------------

// AbilityActionTriggerAbility

// uint32 other_id = 1;
inline void AbilityActionTriggerAbility::clear_other_id() {
  other_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityActionTriggerAbility::other_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityActionTriggerAbility.other_id)
  return other_id_;
}
inline void AbilityActionTriggerAbility::set_other_id(::google::protobuf::uint32 value) {
  
  other_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityActionTriggerAbility.other_id)
}

// -------------------------------------------------------------------

// AbilityActionSetCrashDamage

// float damage = 1;
inline void AbilityActionSetCrashDamage::clear_damage() {
  damage_ = 0;
}
inline float AbilityActionSetCrashDamage::damage() const {
  // @@protoc_insertion_point(field_get:proto.AbilityActionSetCrashDamage.damage)
  return damage_;
}
inline void AbilityActionSetCrashDamage::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityActionSetCrashDamage.damage)
}

// .proto.Vector hit_pos = 2;
inline bool AbilityActionSetCrashDamage::has_hit_pos() const {
  return this != internal_default_instance() && hit_pos_ != NULL;
}
inline void AbilityActionSetCrashDamage::clear_hit_pos() {
  if (GetArenaNoVirtual() == NULL && hit_pos_ != NULL) delete hit_pos_;
  hit_pos_ = NULL;
}
inline const ::proto::Vector& AbilityActionSetCrashDamage::hit_pos() const {
  const ::proto::Vector* p = hit_pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionSetCrashDamage.hit_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionSetCrashDamage::mutable_hit_pos() {
  
  if (hit_pos_ == NULL) {
    hit_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionSetCrashDamage.hit_pos)
  return hit_pos_;
}
inline ::proto::Vector* AbilityActionSetCrashDamage::release_hit_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionSetCrashDamage.hit_pos)
  
  ::proto::Vector* temp = hit_pos_;
  hit_pos_ = NULL;
  return temp;
}
inline void AbilityActionSetCrashDamage::set_allocated_hit_pos(::proto::Vector* hit_pos) {
  delete hit_pos_;
  hit_pos_ = hit_pos;
  if (hit_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionSetCrashDamage.hit_pos)
}

// -------------------------------------------------------------------

// AbilityBornType

// .proto.Vector pos = 1;
inline bool AbilityBornType::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AbilityBornType::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AbilityBornType::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityBornType.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityBornType::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityBornType.pos)
  return pos_;
}
inline ::proto::Vector* AbilityBornType::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityBornType.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AbilityBornType::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityBornType.pos)
}

// .proto.Vector rot = 2;
inline bool AbilityBornType::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void AbilityBornType::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& AbilityBornType::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.AbilityBornType.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityBornType::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityBornType.rot)
  return rot_;
}
inline ::proto::Vector* AbilityBornType::release_rot() {
  // @@protoc_insertion_point(field_release:proto.AbilityBornType.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void AbilityBornType::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityBornType.rot)
}

// -------------------------------------------------------------------

// AbilityActionSummon

// .proto.Vector pos = 1;
inline bool AbilityActionSummon::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AbilityActionSummon::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AbilityActionSummon::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionSummon.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionSummon::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionSummon.pos)
  return pos_;
}
inline ::proto::Vector* AbilityActionSummon::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionSummon.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AbilityActionSummon::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionSummon.pos)
}

// .proto.Vector rot = 2;
inline bool AbilityActionSummon::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void AbilityActionSummon::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& AbilityActionSummon::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionSummon.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionSummon::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionSummon.rot)
  return rot_;
}
inline ::proto::Vector* AbilityActionSummon::release_rot() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionSummon.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void AbilityActionSummon::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionSummon.rot)
}

// -------------------------------------------------------------------

// AbilityActionBlink

// .proto.Vector pos = 1;
inline bool AbilityActionBlink::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AbilityActionBlink::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AbilityActionBlink::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionBlink.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionBlink::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionBlink.pos)
  return pos_;
}
inline ::proto::Vector* AbilityActionBlink::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionBlink.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AbilityActionBlink::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionBlink.pos)
}

// .proto.Vector rot = 2;
inline bool AbilityActionBlink::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void AbilityActionBlink::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& AbilityActionBlink::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionBlink.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionBlink::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionBlink.rot)
  return rot_;
}
inline ::proto::Vector* AbilityActionBlink::release_rot() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionBlink.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void AbilityActionBlink::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionBlink.rot)
}

// -------------------------------------------------------------------

// AbilityActionCreateGadget

// .proto.Vector pos = 1;
inline bool AbilityActionCreateGadget::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AbilityActionCreateGadget::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AbilityActionCreateGadget::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionCreateGadget.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionCreateGadget::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionCreateGadget.pos)
  return pos_;
}
inline ::proto::Vector* AbilityActionCreateGadget::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionCreateGadget.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AbilityActionCreateGadget::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionCreateGadget.pos)
}

// .proto.Vector rot = 2;
inline bool AbilityActionCreateGadget::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void AbilityActionCreateGadget::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& AbilityActionCreateGadget::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionCreateGadget.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionCreateGadget::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionCreateGadget.rot)
  return rot_;
}
inline ::proto::Vector* AbilityActionCreateGadget::release_rot() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionCreateGadget.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void AbilityActionCreateGadget::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionCreateGadget.rot)
}

// uint32 room_id = 3;
inline void AbilityActionCreateGadget::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityActionCreateGadget::room_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityActionCreateGadget.room_id)
  return room_id_;
}
inline void AbilityActionCreateGadget::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityActionCreateGadget.room_id)
}

// -------------------------------------------------------------------

// AbilityApplyLevelModifier

// uint32 apply_entity_id = 1;
inline void AbilityApplyLevelModifier::clear_apply_entity_id() {
  apply_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityApplyLevelModifier::apply_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityApplyLevelModifier.apply_entity_id)
  return apply_entity_id_;
}
inline void AbilityApplyLevelModifier::set_apply_entity_id(::google::protobuf::uint32 value) {
  
  apply_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityApplyLevelModifier.apply_entity_id)
}

// -------------------------------------------------------------------

// AbilityActionGenerateElemBall

// .proto.Vector pos = 1;
inline bool AbilityActionGenerateElemBall::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AbilityActionGenerateElemBall::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AbilityActionGenerateElemBall::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionGenerateElemBall.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionGenerateElemBall::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionGenerateElemBall.pos)
  return pos_;
}
inline ::proto::Vector* AbilityActionGenerateElemBall::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionGenerateElemBall.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AbilityActionGenerateElemBall::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionGenerateElemBall.pos)
}

// .proto.Vector rot = 2;
inline bool AbilityActionGenerateElemBall::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void AbilityActionGenerateElemBall::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& AbilityActionGenerateElemBall::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.AbilityActionGenerateElemBall.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityActionGenerateElemBall::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityActionGenerateElemBall.rot)
  return rot_;
}
inline ::proto::Vector* AbilityActionGenerateElemBall::release_rot() {
  // @@protoc_insertion_point(field_release:proto.AbilityActionGenerateElemBall.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void AbilityActionGenerateElemBall::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityActionGenerateElemBall.rot)
}

// uint32 room_id = 3;
inline void AbilityActionGenerateElemBall::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityActionGenerateElemBall::room_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityActionGenerateElemBall.room_id)
  return room_id_;
}
inline void AbilityActionGenerateElemBall::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityActionGenerateElemBall.room_id)
}

// -------------------------------------------------------------------

// AbilityMixinEmpty

// -------------------------------------------------------------------

// AbilityMixinAvatarSteerByCamera

// .proto.Vector target_pos = 1;
inline bool AbilityMixinAvatarSteerByCamera::has_target_pos() const {
  return this != internal_default_instance() && target_pos_ != NULL;
}
inline void AbilityMixinAvatarSteerByCamera::clear_target_pos() {
  if (GetArenaNoVirtual() == NULL && target_pos_ != NULL) delete target_pos_;
  target_pos_ = NULL;
}
inline const ::proto::Vector& AbilityMixinAvatarSteerByCamera::target_pos() const {
  const ::proto::Vector* p = target_pos_;
  // @@protoc_insertion_point(field_get:proto.AbilityMixinAvatarSteerByCamera.target_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityMixinAvatarSteerByCamera::mutable_target_pos() {
  
  if (target_pos_ == NULL) {
    target_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinAvatarSteerByCamera.target_pos)
  return target_pos_;
}
inline ::proto::Vector* AbilityMixinAvatarSteerByCamera::release_target_pos() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinAvatarSteerByCamera.target_pos)
  
  ::proto::Vector* temp = target_pos_;
  target_pos_ = NULL;
  return temp;
}
inline void AbilityMixinAvatarSteerByCamera::set_allocated_target_pos(::proto::Vector* target_pos) {
  delete target_pos_;
  target_pos_ = target_pos;
  if (target_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinAvatarSteerByCamera.target_pos)
}

// .proto.Vector target_dir = 2;
inline bool AbilityMixinAvatarSteerByCamera::has_target_dir() const {
  return this != internal_default_instance() && target_dir_ != NULL;
}
inline void AbilityMixinAvatarSteerByCamera::clear_target_dir() {
  if (GetArenaNoVirtual() == NULL && target_dir_ != NULL) delete target_dir_;
  target_dir_ = NULL;
}
inline const ::proto::Vector& AbilityMixinAvatarSteerByCamera::target_dir() const {
  const ::proto::Vector* p = target_dir_;
  // @@protoc_insertion_point(field_get:proto.AbilityMixinAvatarSteerByCamera.target_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AbilityMixinAvatarSteerByCamera::mutable_target_dir() {
  
  if (target_dir_ == NULL) {
    target_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinAvatarSteerByCamera.target_dir)
  return target_dir_;
}
inline ::proto::Vector* AbilityMixinAvatarSteerByCamera::release_target_dir() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinAvatarSteerByCamera.target_dir)
  
  ::proto::Vector* temp = target_dir_;
  target_dir_ = NULL;
  return temp;
}
inline void AbilityMixinAvatarSteerByCamera::set_allocated_target_dir(::proto::Vector* target_dir) {
  delete target_dir_;
  target_dir_ = target_dir;
  if (target_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinAvatarSteerByCamera.target_dir)
}

// -------------------------------------------------------------------

// AbilityMixinWindZone

// repeated uint32 entity_ids = 1;
inline int AbilityMixinWindZone::entity_ids_size() const {
  return entity_ids_.size();
}
inline void AbilityMixinWindZone::clear_entity_ids() {
  entity_ids_.Clear();
}
inline ::google::protobuf::uint32 AbilityMixinWindZone::entity_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinWindZone.entity_ids)
  return entity_ids_.Get(index);
}
inline void AbilityMixinWindZone::set_entity_ids(int index, ::google::protobuf::uint32 value) {
  entity_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AbilityMixinWindZone.entity_ids)
}
inline void AbilityMixinWindZone::add_entity_ids(::google::protobuf::uint32 value) {
  entity_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AbilityMixinWindZone.entity_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AbilityMixinWindZone::entity_ids() const {
  // @@protoc_insertion_point(field_list:proto.AbilityMixinWindZone.entity_ids)
  return entity_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AbilityMixinWindZone::mutable_entity_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityMixinWindZone.entity_ids)
  return &entity_ids_;
}

// -------------------------------------------------------------------

// AbilityMixinCostStamina

// bool is_swim = 1;
inline void AbilityMixinCostStamina::clear_is_swim() {
  is_swim_ = false;
}
inline bool AbilityMixinCostStamina::is_swim() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinCostStamina.is_swim)
  return is_swim_;
}
inline void AbilityMixinCostStamina::set_is_swim(bool value) {
  
  is_swim_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinCostStamina.is_swim)
}

// -------------------------------------------------------------------

// AbilityMixinEliteShield

// float sub_shield = 1;
inline void AbilityMixinEliteShield::clear_sub_shield() {
  sub_shield_ = 0;
}
inline float AbilityMixinEliteShield::sub_shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinEliteShield.sub_shield)
  return sub_shield_;
}
inline void AbilityMixinEliteShield::set_sub_shield(float value) {
  
  sub_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinEliteShield.sub_shield)
}

// -------------------------------------------------------------------

// AbilityMixinElementShield

// float sub_shield = 1;
inline void AbilityMixinElementShield::clear_sub_shield() {
  sub_shield_ = 0;
}
inline float AbilityMixinElementShield::sub_shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinElementShield.sub_shield)
  return sub_shield_;
}
inline void AbilityMixinElementShield::set_sub_shield(float value) {
  
  sub_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinElementShield.sub_shield)
}

// bool is_shield_broken = 2;
inline void AbilityMixinElementShield::clear_is_shield_broken() {
  is_shield_broken_ = false;
}
inline bool AbilityMixinElementShield::is_shield_broken() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinElementShield.is_shield_broken)
  return is_shield_broken_;
}
inline void AbilityMixinElementShield::set_is_shield_broken(bool value) {
  
  is_shield_broken_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinElementShield.is_shield_broken)
}

// float shield = 3;
inline void AbilityMixinElementShield::clear_shield() {
  shield_ = 0;
}
inline float AbilityMixinElementShield::shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinElementShield.shield)
  return shield_;
}
inline void AbilityMixinElementShield::set_shield(float value) {
  
  shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinElementShield.shield)
}

// float max_shield = 4;
inline void AbilityMixinElementShield::clear_max_shield() {
  max_shield_ = 0;
}
inline float AbilityMixinElementShield::max_shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinElementShield.max_shield)
  return max_shield_;
}
inline void AbilityMixinElementShield::set_max_shield(float value) {
  
  max_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinElementShield.max_shield)
}

// uint32 absorb_type = 5;
inline void AbilityMixinElementShield::clear_absorb_type() {
  absorb_type_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMixinElementShield::absorb_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinElementShield.absorb_type)
  return absorb_type_;
}
inline void AbilityMixinElementShield::set_absorb_type(::google::protobuf::uint32 value) {
  
  absorb_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinElementShield.absorb_type)
}

// -------------------------------------------------------------------

// AbilityMixinGlobalShield

// float sub_shield = 1;
inline void AbilityMixinGlobalShield::clear_sub_shield() {
  sub_shield_ = 0;
}
inline float AbilityMixinGlobalShield::sub_shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinGlobalShield.sub_shield)
  return sub_shield_;
}
inline void AbilityMixinGlobalShield::set_sub_shield(float value) {
  
  sub_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinGlobalShield.sub_shield)
}

// uint32 avatar_id = 2;
inline void AbilityMixinGlobalShield::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMixinGlobalShield::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinGlobalShield.avatar_id)
  return avatar_id_;
}
inline void AbilityMixinGlobalShield::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinGlobalShield.avatar_id)
}

// string shield_effect_name = 3;
inline void AbilityMixinGlobalShield::clear_shield_effect_name() {
  shield_effect_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbilityMixinGlobalShield::shield_effect_name() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinGlobalShield.shield_effect_name)
  return shield_effect_name_.GetNoArena();
}
inline void AbilityMixinGlobalShield::set_shield_effect_name(const ::std::string& value) {
  
  shield_effect_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityMixinGlobalShield.shield_effect_name)
}
#if LANG_CXX11
inline void AbilityMixinGlobalShield::set_shield_effect_name(::std::string&& value) {
  
  shield_effect_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityMixinGlobalShield.shield_effect_name)
}
#endif
inline void AbilityMixinGlobalShield::set_shield_effect_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  shield_effect_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityMixinGlobalShield.shield_effect_name)
}
inline void AbilityMixinGlobalShield::set_shield_effect_name(const char* value, size_t size) {
  
  shield_effect_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityMixinGlobalShield.shield_effect_name)
}
inline ::std::string* AbilityMixinGlobalShield::mutable_shield_effect_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinGlobalShield.shield_effect_name)
  return shield_effect_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityMixinGlobalShield::release_shield_effect_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinGlobalShield.shield_effect_name)
  
  return shield_effect_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbilityMixinGlobalShield::set_allocated_shield_effect_name(::std::string* shield_effect_name) {
  if (shield_effect_name != NULL) {
    
  } else {
    
  }
  shield_effect_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shield_effect_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinGlobalShield.shield_effect_name)
}

// float height_offset = 4;
inline void AbilityMixinGlobalShield::clear_height_offset() {
  height_offset_ = 0;
}
inline float AbilityMixinGlobalShield::height_offset() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinGlobalShield.height_offset)
  return height_offset_;
}
inline void AbilityMixinGlobalShield::set_height_offset(float value) {
  
  height_offset_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinGlobalShield.height_offset)
}

// -------------------------------------------------------------------

// AbilityMixinShieldBar

// uint32 element_type = 1;
inline void AbilityMixinShieldBar::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMixinShieldBar::element_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinShieldBar.element_type)
  return element_type_;
}
inline void AbilityMixinShieldBar::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinShieldBar.element_type)
}

// float shield = 2;
inline void AbilityMixinShieldBar::clear_shield() {
  shield_ = 0;
}
inline float AbilityMixinShieldBar::shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinShieldBar.shield)
  return shield_;
}
inline void AbilityMixinShieldBar::set_shield(float value) {
  
  shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinShieldBar.shield)
}

// float max_shield = 3;
inline void AbilityMixinShieldBar::clear_max_shield() {
  max_shield_ = 0;
}
inline float AbilityMixinShieldBar::max_shield() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinShieldBar.max_shield)
  return max_shield_;
}
inline void AbilityMixinShieldBar::set_max_shield(float value) {
  
  max_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinShieldBar.max_shield)
}

// -------------------------------------------------------------------

// AbilityMixinWindSeedSpawner_AddSignal

// -------------------------------------------------------------------

// AbilityMixinWindSeedSpawner_RefreshSeed

// repeated .proto.Vector pos_list = 1;
inline int AbilityMixinWindSeedSpawner_RefreshSeed::pos_list_size() const {
  return pos_list_.size();
}
inline void AbilityMixinWindSeedSpawner_RefreshSeed::clear_pos_list() {
  pos_list_.Clear();
}
inline const ::proto::Vector& AbilityMixinWindSeedSpawner_RefreshSeed::pos_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinWindSeedSpawner.RefreshSeed.pos_list)
  return pos_list_.Get(index);
}
inline ::proto::Vector* AbilityMixinWindSeedSpawner_RefreshSeed::mutable_pos_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinWindSeedSpawner.RefreshSeed.pos_list)
  return pos_list_.Mutable(index);
}
inline ::proto::Vector* AbilityMixinWindSeedSpawner_RefreshSeed::add_pos_list() {
  // @@protoc_insertion_point(field_add:proto.AbilityMixinWindSeedSpawner.RefreshSeed.pos_list)
  return pos_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
AbilityMixinWindSeedSpawner_RefreshSeed::mutable_pos_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityMixinWindSeedSpawner.RefreshSeed.pos_list)
  return &pos_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
AbilityMixinWindSeedSpawner_RefreshSeed::pos_list() const {
  // @@protoc_insertion_point(field_list:proto.AbilityMixinWindSeedSpawner.RefreshSeed.pos_list)
  return pos_list_;
}

// -------------------------------------------------------------------

// AbilityMixinWindSeedSpawner_CatchSeed

// uint32 entity_id = 1;
inline void AbilityMixinWindSeedSpawner_CatchSeed::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMixinWindSeedSpawner_CatchSeed::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinWindSeedSpawner.CatchSeed.entity_id)
  return entity_id_;
}
inline void AbilityMixinWindSeedSpawner_CatchSeed::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinWindSeedSpawner.CatchSeed.entity_id)
}

// -------------------------------------------------------------------

// AbilityMixinWindSeedSpawner

// .proto.AbilityMixinWindSeedSpawner.AddSignal add_signal = 1;
inline bool AbilityMixinWindSeedSpawner::has_add_signal() const {
  return cmd_case() == kAddSignal;
}
inline void AbilityMixinWindSeedSpawner::set_has_add_signal() {
  _oneof_case_[0] = kAddSignal;
}
inline void AbilityMixinWindSeedSpawner::clear_add_signal() {
  if (has_add_signal()) {
    delete cmd_.add_signal_;
    clear_has_cmd();
  }
}
inline  const ::proto::AbilityMixinWindSeedSpawner_AddSignal& AbilityMixinWindSeedSpawner::add_signal() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinWindSeedSpawner.add_signal)
  return has_add_signal()
      ? *cmd_.add_signal_
      : ::proto::AbilityMixinWindSeedSpawner_AddSignal::default_instance();
}
inline ::proto::AbilityMixinWindSeedSpawner_AddSignal* AbilityMixinWindSeedSpawner::mutable_add_signal() {
  if (!has_add_signal()) {
    clear_cmd();
    set_has_add_signal();
    cmd_.add_signal_ = new ::proto::AbilityMixinWindSeedSpawner_AddSignal;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinWindSeedSpawner.add_signal)
  return cmd_.add_signal_;
}
inline ::proto::AbilityMixinWindSeedSpawner_AddSignal* AbilityMixinWindSeedSpawner::release_add_signal() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinWindSeedSpawner.add_signal)
  if (has_add_signal()) {
    clear_has_cmd();
    ::proto::AbilityMixinWindSeedSpawner_AddSignal* temp = cmd_.add_signal_;
    cmd_.add_signal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AbilityMixinWindSeedSpawner::set_allocated_add_signal(::proto::AbilityMixinWindSeedSpawner_AddSignal* add_signal) {
  clear_cmd();
  if (add_signal) {
    set_has_add_signal();
    cmd_.add_signal_ = add_signal;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinWindSeedSpawner.add_signal)
}

// .proto.AbilityMixinWindSeedSpawner.RefreshSeed refresh_seed = 2;
inline bool AbilityMixinWindSeedSpawner::has_refresh_seed() const {
  return cmd_case() == kRefreshSeed;
}
inline void AbilityMixinWindSeedSpawner::set_has_refresh_seed() {
  _oneof_case_[0] = kRefreshSeed;
}
inline void AbilityMixinWindSeedSpawner::clear_refresh_seed() {
  if (has_refresh_seed()) {
    delete cmd_.refresh_seed_;
    clear_has_cmd();
  }
}
inline  const ::proto::AbilityMixinWindSeedSpawner_RefreshSeed& AbilityMixinWindSeedSpawner::refresh_seed() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinWindSeedSpawner.refresh_seed)
  return has_refresh_seed()
      ? *cmd_.refresh_seed_
      : ::proto::AbilityMixinWindSeedSpawner_RefreshSeed::default_instance();
}
inline ::proto::AbilityMixinWindSeedSpawner_RefreshSeed* AbilityMixinWindSeedSpawner::mutable_refresh_seed() {
  if (!has_refresh_seed()) {
    clear_cmd();
    set_has_refresh_seed();
    cmd_.refresh_seed_ = new ::proto::AbilityMixinWindSeedSpawner_RefreshSeed;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinWindSeedSpawner.refresh_seed)
  return cmd_.refresh_seed_;
}
inline ::proto::AbilityMixinWindSeedSpawner_RefreshSeed* AbilityMixinWindSeedSpawner::release_refresh_seed() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinWindSeedSpawner.refresh_seed)
  if (has_refresh_seed()) {
    clear_has_cmd();
    ::proto::AbilityMixinWindSeedSpawner_RefreshSeed* temp = cmd_.refresh_seed_;
    cmd_.refresh_seed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AbilityMixinWindSeedSpawner::set_allocated_refresh_seed(::proto::AbilityMixinWindSeedSpawner_RefreshSeed* refresh_seed) {
  clear_cmd();
  if (refresh_seed) {
    set_has_refresh_seed();
    cmd_.refresh_seed_ = refresh_seed;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinWindSeedSpawner.refresh_seed)
}

// .proto.AbilityMixinWindSeedSpawner.CatchSeed catch_seed = 3;
inline bool AbilityMixinWindSeedSpawner::has_catch_seed() const {
  return cmd_case() == kCatchSeed;
}
inline void AbilityMixinWindSeedSpawner::set_has_catch_seed() {
  _oneof_case_[0] = kCatchSeed;
}
inline void AbilityMixinWindSeedSpawner::clear_catch_seed() {
  if (has_catch_seed()) {
    delete cmd_.catch_seed_;
    clear_has_cmd();
  }
}
inline  const ::proto::AbilityMixinWindSeedSpawner_CatchSeed& AbilityMixinWindSeedSpawner::catch_seed() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinWindSeedSpawner.catch_seed)
  return has_catch_seed()
      ? *cmd_.catch_seed_
      : ::proto::AbilityMixinWindSeedSpawner_CatchSeed::default_instance();
}
inline ::proto::AbilityMixinWindSeedSpawner_CatchSeed* AbilityMixinWindSeedSpawner::mutable_catch_seed() {
  if (!has_catch_seed()) {
    clear_cmd();
    set_has_catch_seed();
    cmd_.catch_seed_ = new ::proto::AbilityMixinWindSeedSpawner_CatchSeed;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinWindSeedSpawner.catch_seed)
  return cmd_.catch_seed_;
}
inline ::proto::AbilityMixinWindSeedSpawner_CatchSeed* AbilityMixinWindSeedSpawner::release_catch_seed() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinWindSeedSpawner.catch_seed)
  if (has_catch_seed()) {
    clear_has_cmd();
    ::proto::AbilityMixinWindSeedSpawner_CatchSeed* temp = cmd_.catch_seed_;
    cmd_.catch_seed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AbilityMixinWindSeedSpawner::set_allocated_catch_seed(::proto::AbilityMixinWindSeedSpawner_CatchSeed* catch_seed) {
  clear_cmd();
  if (catch_seed) {
    set_has_catch_seed();
    cmd_.catch_seed_ = catch_seed;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinWindSeedSpawner.catch_seed)
}

inline bool AbilityMixinWindSeedSpawner::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void AbilityMixinWindSeedSpawner::clear_has_cmd() {
  _oneof_case_[0] = CMD_NOT_SET;
}
inline AbilityMixinWindSeedSpawner::CmdCase AbilityMixinWindSeedSpawner::cmd_case() const {
  return AbilityMixinWindSeedSpawner::CmdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ClientAbilityInitBeginNotify

// uint32 entity_id = 1;
inline void ClientAbilityInitBeginNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientAbilityInitBeginNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientAbilityInitBeginNotify.entity_id)
  return entity_id_;
}
inline void ClientAbilityInitBeginNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientAbilityInitBeginNotify.entity_id)
}

// -------------------------------------------------------------------

// ClientAbilityInitFinishNotify

// uint32 entity_id = 1;
inline void ClientAbilityInitFinishNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientAbilityInitFinishNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientAbilityInitFinishNotify.entity_id)
  return entity_id_;
}
inline void ClientAbilityInitFinishNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientAbilityInitFinishNotify.entity_id)
}

// repeated .proto.AbilityInvokeEntry invokes = 2;
inline int ClientAbilityInitFinishNotify::invokes_size() const {
  return invokes_.size();
}
inline void ClientAbilityInitFinishNotify::clear_invokes() {
  invokes_.Clear();
}
inline const ::proto::AbilityInvokeEntry& ClientAbilityInitFinishNotify::invokes(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientAbilityInitFinishNotify.invokes)
  return invokes_.Get(index);
}
inline ::proto::AbilityInvokeEntry* ClientAbilityInitFinishNotify::mutable_invokes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClientAbilityInitFinishNotify.invokes)
  return invokes_.Mutable(index);
}
inline ::proto::AbilityInvokeEntry* ClientAbilityInitFinishNotify::add_invokes() {
  // @@protoc_insertion_point(field_add:proto.ClientAbilityInitFinishNotify.invokes)
  return invokes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >*
ClientAbilityInitFinishNotify::mutable_invokes() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientAbilityInitFinishNotify.invokes)
  return &invokes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >&
ClientAbilityInitFinishNotify::invokes() const {
  // @@protoc_insertion_point(field_list:proto.ClientAbilityInitFinishNotify.invokes)
  return invokes_;
}

// -------------------------------------------------------------------

// AbilityInvocationFailNotify

// uint32 entity_id = 1;
inline void AbilityInvocationFailNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityInvocationFailNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFailNotify.entity_id)
  return entity_id_;
}
inline void AbilityInvocationFailNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityInvocationFailNotify.entity_id)
}

// .proto.AbilityInvokeEntry invoke = 2;
inline bool AbilityInvocationFailNotify::has_invoke() const {
  return this != internal_default_instance() && invoke_ != NULL;
}
inline void AbilityInvocationFailNotify::clear_invoke() {
  if (GetArenaNoVirtual() == NULL && invoke_ != NULL) delete invoke_;
  invoke_ = NULL;
}
inline const ::proto::AbilityInvokeEntry& AbilityInvocationFailNotify::invoke() const {
  const ::proto::AbilityInvokeEntry* p = invoke_;
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFailNotify.invoke)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityInvokeEntry*>(
      &::proto::_AbilityInvokeEntry_default_instance_);
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFailNotify::mutable_invoke() {
  
  if (invoke_ == NULL) {
    invoke_ = new ::proto::AbilityInvokeEntry;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFailNotify.invoke)
  return invoke_;
}
inline ::proto::AbilityInvokeEntry* AbilityInvocationFailNotify::release_invoke() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFailNotify.invoke)
  
  ::proto::AbilityInvokeEntry* temp = invoke_;
  invoke_ = NULL;
  return temp;
}
inline void AbilityInvocationFailNotify::set_allocated_invoke(::proto::AbilityInvokeEntry* invoke) {
  delete invoke_;
  invoke_ = invoke;
  if (invoke) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFailNotify.invoke)
}

// string reason = 3;
inline void AbilityInvocationFailNotify::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbilityInvocationFailNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.AbilityInvocationFailNotify.reason)
  return reason_.GetNoArena();
}
inline void AbilityInvocationFailNotify::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityInvocationFailNotify.reason)
}
#if LANG_CXX11
inline void AbilityInvocationFailNotify::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityInvocationFailNotify.reason)
}
#endif
inline void AbilityInvocationFailNotify::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityInvocationFailNotify.reason)
}
inline void AbilityInvocationFailNotify::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityInvocationFailNotify.reason)
}
inline ::std::string* AbilityInvocationFailNotify::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:proto.AbilityInvocationFailNotify.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityInvocationFailNotify::release_reason() {
  // @@protoc_insertion_point(field_release:proto.AbilityInvocationFailNotify.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbilityInvocationFailNotify::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityInvocationFailNotify.reason)
}

// -------------------------------------------------------------------

// AbilityResetReason

// .proto.AbilityResetReasonType reason_type = 1;
inline void AbilityResetReason::clear_reason_type() {
  reason_type_ = 0;
}
inline ::proto::AbilityResetReasonType AbilityResetReason::reason_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityResetReason.reason_type)
  return static_cast< ::proto::AbilityResetReasonType >(reason_type_);
}
inline void AbilityResetReason::set_reason_type(::proto::AbilityResetReasonType value) {
  
  reason_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityResetReason.reason_type)
}

// uint32 param = 2;
inline void AbilityResetReason::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 AbilityResetReason::param() const {
  // @@protoc_insertion_point(field_get:proto.AbilityResetReason.param)
  return param_;
}
inline void AbilityResetReason::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityResetReason.param)
}

// -------------------------------------------------------------------

// AvatarAbilityResetNotify

// uint32 entity_id = 1;
inline void AvatarAbilityResetNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarAbilityResetNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarAbilityResetNotify.entity_id)
  return entity_id_;
}
inline void AvatarAbilityResetNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarAbilityResetNotify.entity_id)
}

// .proto.AbilityResetReason reset_reason = 2;
inline bool AvatarAbilityResetNotify::has_reset_reason() const {
  return this != internal_default_instance() && reset_reason_ != NULL;
}
inline void AvatarAbilityResetNotify::clear_reset_reason() {
  if (GetArenaNoVirtual() == NULL && reset_reason_ != NULL) delete reset_reason_;
  reset_reason_ = NULL;
}
inline const ::proto::AbilityResetReason& AvatarAbilityResetNotify::reset_reason() const {
  const ::proto::AbilityResetReason* p = reset_reason_;
  // @@protoc_insertion_point(field_get:proto.AvatarAbilityResetNotify.reset_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityResetReason*>(
      &::proto::_AbilityResetReason_default_instance_);
}
inline ::proto::AbilityResetReason* AvatarAbilityResetNotify::mutable_reset_reason() {
  
  if (reset_reason_ == NULL) {
    reset_reason_ = new ::proto::AbilityResetReason;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarAbilityResetNotify.reset_reason)
  return reset_reason_;
}
inline ::proto::AbilityResetReason* AvatarAbilityResetNotify::release_reset_reason() {
  // @@protoc_insertion_point(field_release:proto.AvatarAbilityResetNotify.reset_reason)
  
  ::proto::AbilityResetReason* temp = reset_reason_;
  reset_reason_ = NULL;
  return temp;
}
inline void AvatarAbilityResetNotify::set_allocated_reset_reason(::proto::AbilityResetReason* reset_reason) {
  delete reset_reason_;
  reset_reason_ = reset_reason;
  if (reset_reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarAbilityResetNotify.reset_reason)
}

// -------------------------------------------------------------------

// EntityAbilityInvokeEntry

// uint32 entity_id = 1;
inline void EntityAbilityInvokeEntry::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityAbilityInvokeEntry::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityAbilityInvokeEntry.entity_id)
  return entity_id_;
}
inline void EntityAbilityInvokeEntry::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityAbilityInvokeEntry.entity_id)
}

// repeated .proto.AbilityInvokeEntry invokes = 2;
inline int EntityAbilityInvokeEntry::invokes_size() const {
  return invokes_.size();
}
inline void EntityAbilityInvokeEntry::clear_invokes() {
  invokes_.Clear();
}
inline const ::proto::AbilityInvokeEntry& EntityAbilityInvokeEntry::invokes(int index) const {
  // @@protoc_insertion_point(field_get:proto.EntityAbilityInvokeEntry.invokes)
  return invokes_.Get(index);
}
inline ::proto::AbilityInvokeEntry* EntityAbilityInvokeEntry::mutable_invokes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EntityAbilityInvokeEntry.invokes)
  return invokes_.Mutable(index);
}
inline ::proto::AbilityInvokeEntry* EntityAbilityInvokeEntry::add_invokes() {
  // @@protoc_insertion_point(field_add:proto.EntityAbilityInvokeEntry.invokes)
  return invokes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >*
EntityAbilityInvokeEntry::mutable_invokes() {
  // @@protoc_insertion_point(field_mutable_list:proto.EntityAbilityInvokeEntry.invokes)
  return &invokes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityInvokeEntry >&
EntityAbilityInvokeEntry::invokes() const {
  // @@protoc_insertion_point(field_list:proto.EntityAbilityInvokeEntry.invokes)
  return invokes_;
}

// -------------------------------------------------------------------

// ClientAbilitiesInitFinishCombineNotify

// repeated .proto.EntityAbilityInvokeEntry entity_invoke_list = 1;
inline int ClientAbilitiesInitFinishCombineNotify::entity_invoke_list_size() const {
  return entity_invoke_list_.size();
}
inline void ClientAbilitiesInitFinishCombineNotify::clear_entity_invoke_list() {
  entity_invoke_list_.Clear();
}
inline const ::proto::EntityAbilityInvokeEntry& ClientAbilitiesInitFinishCombineNotify::entity_invoke_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientAbilitiesInitFinishCombineNotify.entity_invoke_list)
  return entity_invoke_list_.Get(index);
}
inline ::proto::EntityAbilityInvokeEntry* ClientAbilitiesInitFinishCombineNotify::mutable_entity_invoke_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClientAbilitiesInitFinishCombineNotify.entity_invoke_list)
  return entity_invoke_list_.Mutable(index);
}
inline ::proto::EntityAbilityInvokeEntry* ClientAbilitiesInitFinishCombineNotify::add_entity_invoke_list() {
  // @@protoc_insertion_point(field_add:proto.ClientAbilitiesInitFinishCombineNotify.entity_invoke_list)
  return entity_invoke_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityAbilityInvokeEntry >*
ClientAbilitiesInitFinishCombineNotify::mutable_entity_invoke_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientAbilitiesInitFinishCombineNotify.entity_invoke_list)
  return &entity_invoke_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityAbilityInvokeEntry >&
ClientAbilitiesInitFinishCombineNotify::entity_invoke_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientAbilitiesInitFinishCombineNotify.entity_invoke_list)
  return entity_invoke_list_;
}

// -------------------------------------------------------------------

// ElementReactionLog

// uint32 source_id = 1;
inline void ElementReactionLog::clear_source_id() {
  source_id_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::source_id() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.source_id)
  return source_id_;
}
inline void ElementReactionLog::set_source_id(::google::protobuf::uint32 value) {
  
  source_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.source_id)
}

// uint32 target_id = 2;
inline void ElementReactionLog::clear_target_id() {
  target_id_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::target_id() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.target_id)
  return target_id_;
}
inline void ElementReactionLog::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.target_id)
}

// string ability_name = 3;
inline void ElementReactionLog::clear_ability_name() {
  ability_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ElementReactionLog::ability_name() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.ability_name)
  return ability_name_.GetNoArena();
}
inline void ElementReactionLog::set_ability_name(const ::std::string& value) {
  
  ability_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.ability_name)
}
#if LANG_CXX11
inline void ElementReactionLog::set_ability_name(::std::string&& value) {
  
  ability_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ElementReactionLog.ability_name)
}
#endif
inline void ElementReactionLog::set_ability_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ability_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ElementReactionLog.ability_name)
}
inline void ElementReactionLog::set_ability_name(const char* value, size_t size) {
  
  ability_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ElementReactionLog.ability_name)
}
inline ::std::string* ElementReactionLog::mutable_ability_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ElementReactionLog.ability_name)
  return ability_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ElementReactionLog::release_ability_name() {
  // @@protoc_insertion_point(field_release:proto.ElementReactionLog.ability_name)
  
  return ability_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ElementReactionLog::set_allocated_ability_name(::std::string* ability_name) {
  if (ability_name != NULL) {
    
  } else {
    
  }
  ability_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ability_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ElementReactionLog.ability_name)
}

// string modifier_name = 4;
inline void ElementReactionLog::clear_modifier_name() {
  modifier_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ElementReactionLog::modifier_name() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.modifier_name)
  return modifier_name_.GetNoArena();
}
inline void ElementReactionLog::set_modifier_name(const ::std::string& value) {
  
  modifier_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.modifier_name)
}
#if LANG_CXX11
inline void ElementReactionLog::set_modifier_name(::std::string&& value) {
  
  modifier_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ElementReactionLog.modifier_name)
}
#endif
inline void ElementReactionLog::set_modifier_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modifier_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ElementReactionLog.modifier_name)
}
inline void ElementReactionLog::set_modifier_name(const char* value, size_t size) {
  
  modifier_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ElementReactionLog.modifier_name)
}
inline ::std::string* ElementReactionLog::mutable_modifier_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ElementReactionLog.modifier_name)
  return modifier_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ElementReactionLog::release_modifier_name() {
  // @@protoc_insertion_point(field_release:proto.ElementReactionLog.modifier_name)
  
  return modifier_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ElementReactionLog::set_allocated_modifier_name(::std::string* modifier_name) {
  if (modifier_name != NULL) {
    
  } else {
    
  }
  modifier_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modifier_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ElementReactionLog.modifier_name)
}

// string anim_event_id = 5;
inline void ElementReactionLog::clear_anim_event_id() {
  anim_event_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ElementReactionLog::anim_event_id() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.anim_event_id)
  return anim_event_id_.GetNoArena();
}
inline void ElementReactionLog::set_anim_event_id(const ::std::string& value) {
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.anim_event_id)
}
#if LANG_CXX11
inline void ElementReactionLog::set_anim_event_id(::std::string&& value) {
  
  anim_event_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ElementReactionLog.anim_event_id)
}
#endif
inline void ElementReactionLog::set_anim_event_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ElementReactionLog.anim_event_id)
}
inline void ElementReactionLog::set_anim_event_id(const char* value, size_t size) {
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ElementReactionLog.anim_event_id)
}
inline ::std::string* ElementReactionLog::mutable_anim_event_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ElementReactionLog.anim_event_id)
  return anim_event_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ElementReactionLog::release_anim_event_id() {
  // @@protoc_insertion_point(field_release:proto.ElementReactionLog.anim_event_id)
  
  return anim_event_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ElementReactionLog::set_allocated_anim_event_id(::std::string* anim_event_id) {
  if (anim_event_id != NULL) {
    
  } else {
    
  }
  anim_event_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anim_event_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ElementReactionLog.anim_event_id)
}

// string attack_tag = 6;
inline void ElementReactionLog::clear_attack_tag() {
  attack_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ElementReactionLog::attack_tag() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.attack_tag)
  return attack_tag_.GetNoArena();
}
inline void ElementReactionLog::set_attack_tag(const ::std::string& value) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.attack_tag)
}
#if LANG_CXX11
inline void ElementReactionLog::set_attack_tag(::std::string&& value) {
  
  attack_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ElementReactionLog.attack_tag)
}
#endif
inline void ElementReactionLog::set_attack_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ElementReactionLog.attack_tag)
}
inline void ElementReactionLog::set_attack_tag(const char* value, size_t size) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ElementReactionLog.attack_tag)
}
inline ::std::string* ElementReactionLog::mutable_attack_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.ElementReactionLog.attack_tag)
  return attack_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ElementReactionLog::release_attack_tag() {
  // @@protoc_insertion_point(field_release:proto.ElementReactionLog.attack_tag)
  
  return attack_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ElementReactionLog::set_allocated_attack_tag(::std::string* attack_tag) {
  if (attack_tag != NULL) {
    
  } else {
    
  }
  attack_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.ElementReactionLog.attack_tag)
}

// uint32 reaction_type = 7;
inline void ElementReactionLog::clear_reaction_type() {
  reaction_type_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::reaction_type() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.reaction_type)
  return reaction_type_;
}
inline void ElementReactionLog::set_reaction_type(::google::protobuf::uint32 value) {
  
  reaction_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.reaction_type)
}

// uint32 count = 8;
inline void ElementReactionLog::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::count() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.count)
  return count_;
}
inline void ElementReactionLog::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.count)
}

// uint32 source_lv = 9;
inline void ElementReactionLog::clear_source_lv() {
  source_lv_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::source_lv() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.source_lv)
  return source_lv_;
}
inline void ElementReactionLog::set_source_lv(::google::protobuf::uint32 value) {
  
  source_lv_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.source_lv)
}

// uint32 target_lv = 10;
inline void ElementReactionLog::clear_target_lv() {
  target_lv_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::target_lv() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.target_lv)
  return target_lv_;
}
inline void ElementReactionLog::set_target_lv(::google::protobuf::uint32 value) {
  
  target_lv_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.target_lv)
}

// .proto.Vector pos = 11;
inline bool ElementReactionLog::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void ElementReactionLog::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& ElementReactionLog::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ElementReactionLog::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ElementReactionLog.pos)
  return pos_;
}
inline ::proto::Vector* ElementReactionLog::release_pos() {
  // @@protoc_insertion_point(field_release:proto.ElementReactionLog.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ElementReactionLog::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ElementReactionLog.pos)
}

// uint32 time = 12;
inline void ElementReactionLog::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 ElementReactionLog::time() const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLog.time)
  return time_;
}
inline void ElementReactionLog::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.ElementReactionLog.time)
}

// -------------------------------------------------------------------

// ElementReactionLogNotify

// repeated .proto.ElementReactionLog log_list = 1;
inline int ElementReactionLogNotify::log_list_size() const {
  return log_list_.size();
}
inline void ElementReactionLogNotify::clear_log_list() {
  log_list_.Clear();
}
inline const ::proto::ElementReactionLog& ElementReactionLogNotify::log_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ElementReactionLogNotify.log_list)
  return log_list_.Get(index);
}
inline ::proto::ElementReactionLog* ElementReactionLogNotify::mutable_log_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ElementReactionLogNotify.log_list)
  return log_list_.Mutable(index);
}
inline ::proto::ElementReactionLog* ElementReactionLogNotify::add_log_list() {
  // @@protoc_insertion_point(field_add:proto.ElementReactionLogNotify.log_list)
  return log_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ElementReactionLog >*
ElementReactionLogNotify::mutable_log_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ElementReactionLogNotify.log_list)
  return &log_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ElementReactionLog >&
ElementReactionLogNotify::log_list() const {
  // @@protoc_insertion_point(field_list:proto.ElementReactionLogNotify.log_list)
  return log_list_;
}

// -------------------------------------------------------------------

// AvatarAbilityResetFinishNotify

// uint32 entity_id = 1;
inline void AvatarAbilityResetFinishNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarAbilityResetFinishNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarAbilityResetFinishNotify.entity_id)
  return entity_id_;
}
inline void AvatarAbilityResetFinishNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarAbilityResetFinishNotify.entity_id)
}

// .proto.AbilityResetReason reset_reason = 2;
inline bool AvatarAbilityResetFinishNotify::has_reset_reason() const {
  return this != internal_default_instance() && reset_reason_ != NULL;
}
inline void AvatarAbilityResetFinishNotify::clear_reset_reason() {
  if (GetArenaNoVirtual() == NULL && reset_reason_ != NULL) delete reset_reason_;
  reset_reason_ = NULL;
}
inline const ::proto::AbilityResetReason& AvatarAbilityResetFinishNotify::reset_reason() const {
  const ::proto::AbilityResetReason* p = reset_reason_;
  // @@protoc_insertion_point(field_get:proto.AvatarAbilityResetFinishNotify.reset_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityResetReason*>(
      &::proto::_AbilityResetReason_default_instance_);
}
inline ::proto::AbilityResetReason* AvatarAbilityResetFinishNotify::mutable_reset_reason() {
  
  if (reset_reason_ == NULL) {
    reset_reason_ = new ::proto::AbilityResetReason;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarAbilityResetFinishNotify.reset_reason)
  return reset_reason_;
}
inline ::proto::AbilityResetReason* AvatarAbilityResetFinishNotify::release_reset_reason() {
  // @@protoc_insertion_point(field_release:proto.AvatarAbilityResetFinishNotify.reset_reason)
  
  ::proto::AbilityResetReason* temp = reset_reason_;
  reset_reason_ = NULL;
  return temp;
}
inline void AvatarAbilityResetFinishNotify::set_allocated_reset_reason(::proto::AbilityResetReason* reset_reason) {
  delete reset_reason_;
  reset_reason_ = reset_reason;
  if (reset_reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarAbilityResetFinishNotify.reset_reason)
}

// -------------------------------------------------------------------

// WindSeedClientNotify_RefreshNotify

// uint32 refresh_num = 1;
inline void WindSeedClientNotify_RefreshNotify::clear_refresh_num() {
  refresh_num_ = 0u;
}
inline ::google::protobuf::uint32 WindSeedClientNotify_RefreshNotify::refresh_num() const {
  // @@protoc_insertion_point(field_get:proto.WindSeedClientNotify.RefreshNotify.refresh_num)
  return refresh_num_;
}
inline void WindSeedClientNotify_RefreshNotify::set_refresh_num(::google::protobuf::uint32 value) {
  
  refresh_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WindSeedClientNotify.RefreshNotify.refresh_num)
}

// -------------------------------------------------------------------

// WindSeedClientNotify_AddWindBulletNotify

// uint32 seed_entity_id = 1;
inline void WindSeedClientNotify_AddWindBulletNotify::clear_seed_entity_id() {
  seed_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 WindSeedClientNotify_AddWindBulletNotify::seed_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WindSeedClientNotify.AddWindBulletNotify.seed_entity_id)
  return seed_entity_id_;
}
inline void WindSeedClientNotify_AddWindBulletNotify::set_seed_entity_id(::google::protobuf::uint32 value) {
  
  seed_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WindSeedClientNotify.AddWindBulletNotify.seed_entity_id)
}

// .proto.Vector seed_pos = 2;
inline bool WindSeedClientNotify_AddWindBulletNotify::has_seed_pos() const {
  return this != internal_default_instance() && seed_pos_ != NULL;
}
inline void WindSeedClientNotify_AddWindBulletNotify::clear_seed_pos() {
  if (GetArenaNoVirtual() == NULL && seed_pos_ != NULL) delete seed_pos_;
  seed_pos_ = NULL;
}
inline const ::proto::Vector& WindSeedClientNotify_AddWindBulletNotify::seed_pos() const {
  const ::proto::Vector* p = seed_pos_;
  // @@protoc_insertion_point(field_get:proto.WindSeedClientNotify.AddWindBulletNotify.seed_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* WindSeedClientNotify_AddWindBulletNotify::mutable_seed_pos() {
  
  if (seed_pos_ == NULL) {
    seed_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.WindSeedClientNotify.AddWindBulletNotify.seed_pos)
  return seed_pos_;
}
inline ::proto::Vector* WindSeedClientNotify_AddWindBulletNotify::release_seed_pos() {
  // @@protoc_insertion_point(field_release:proto.WindSeedClientNotify.AddWindBulletNotify.seed_pos)
  
  ::proto::Vector* temp = seed_pos_;
  seed_pos_ = NULL;
  return temp;
}
inline void WindSeedClientNotify_AddWindBulletNotify::set_allocated_seed_pos(::proto::Vector* seed_pos) {
  delete seed_pos_;
  seed_pos_ = seed_pos;
  if (seed_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WindSeedClientNotify.AddWindBulletNotify.seed_pos)
}

// uint32 catch_player_uid = 3;
inline void WindSeedClientNotify_AddWindBulletNotify::clear_catch_player_uid() {
  catch_player_uid_ = 0u;
}
inline ::google::protobuf::uint32 WindSeedClientNotify_AddWindBulletNotify::catch_player_uid() const {
  // @@protoc_insertion_point(field_get:proto.WindSeedClientNotify.AddWindBulletNotify.catch_player_uid)
  return catch_player_uid_;
}
inline void WindSeedClientNotify_AddWindBulletNotify::set_catch_player_uid(::google::protobuf::uint32 value) {
  
  catch_player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.WindSeedClientNotify.AddWindBulletNotify.catch_player_uid)
}

// -------------------------------------------------------------------

// WindSeedClientNotify

// .proto.WindSeedClientNotify.RefreshNotify refresh_notify = 1;
inline bool WindSeedClientNotify::has_refresh_notify() const {
  return notify_case() == kRefreshNotify;
}
inline void WindSeedClientNotify::set_has_refresh_notify() {
  _oneof_case_[0] = kRefreshNotify;
}
inline void WindSeedClientNotify::clear_refresh_notify() {
  if (has_refresh_notify()) {
    delete notify_.refresh_notify_;
    clear_has_notify();
  }
}
inline  const ::proto::WindSeedClientNotify_RefreshNotify& WindSeedClientNotify::refresh_notify() const {
  // @@protoc_insertion_point(field_get:proto.WindSeedClientNotify.refresh_notify)
  return has_refresh_notify()
      ? *notify_.refresh_notify_
      : ::proto::WindSeedClientNotify_RefreshNotify::default_instance();
}
inline ::proto::WindSeedClientNotify_RefreshNotify* WindSeedClientNotify::mutable_refresh_notify() {
  if (!has_refresh_notify()) {
    clear_notify();
    set_has_refresh_notify();
    notify_.refresh_notify_ = new ::proto::WindSeedClientNotify_RefreshNotify;
  }
  // @@protoc_insertion_point(field_mutable:proto.WindSeedClientNotify.refresh_notify)
  return notify_.refresh_notify_;
}
inline ::proto::WindSeedClientNotify_RefreshNotify* WindSeedClientNotify::release_refresh_notify() {
  // @@protoc_insertion_point(field_release:proto.WindSeedClientNotify.refresh_notify)
  if (has_refresh_notify()) {
    clear_has_notify();
    ::proto::WindSeedClientNotify_RefreshNotify* temp = notify_.refresh_notify_;
    notify_.refresh_notify_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void WindSeedClientNotify::set_allocated_refresh_notify(::proto::WindSeedClientNotify_RefreshNotify* refresh_notify) {
  clear_notify();
  if (refresh_notify) {
    set_has_refresh_notify();
    notify_.refresh_notify_ = refresh_notify;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WindSeedClientNotify.refresh_notify)
}

// .proto.WindSeedClientNotify.AddWindBulletNotify add_wind_bullet_notify = 2;
inline bool WindSeedClientNotify::has_add_wind_bullet_notify() const {
  return notify_case() == kAddWindBulletNotify;
}
inline void WindSeedClientNotify::set_has_add_wind_bullet_notify() {
  _oneof_case_[0] = kAddWindBulletNotify;
}
inline void WindSeedClientNotify::clear_add_wind_bullet_notify() {
  if (has_add_wind_bullet_notify()) {
    delete notify_.add_wind_bullet_notify_;
    clear_has_notify();
  }
}
inline  const ::proto::WindSeedClientNotify_AddWindBulletNotify& WindSeedClientNotify::add_wind_bullet_notify() const {
  // @@protoc_insertion_point(field_get:proto.WindSeedClientNotify.add_wind_bullet_notify)
  return has_add_wind_bullet_notify()
      ? *notify_.add_wind_bullet_notify_
      : ::proto::WindSeedClientNotify_AddWindBulletNotify::default_instance();
}
inline ::proto::WindSeedClientNotify_AddWindBulletNotify* WindSeedClientNotify::mutable_add_wind_bullet_notify() {
  if (!has_add_wind_bullet_notify()) {
    clear_notify();
    set_has_add_wind_bullet_notify();
    notify_.add_wind_bullet_notify_ = new ::proto::WindSeedClientNotify_AddWindBulletNotify;
  }
  // @@protoc_insertion_point(field_mutable:proto.WindSeedClientNotify.add_wind_bullet_notify)
  return notify_.add_wind_bullet_notify_;
}
inline ::proto::WindSeedClientNotify_AddWindBulletNotify* WindSeedClientNotify::release_add_wind_bullet_notify() {
  // @@protoc_insertion_point(field_release:proto.WindSeedClientNotify.add_wind_bullet_notify)
  if (has_add_wind_bullet_notify()) {
    clear_has_notify();
    ::proto::WindSeedClientNotify_AddWindBulletNotify* temp = notify_.add_wind_bullet_notify_;
    notify_.add_wind_bullet_notify_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void WindSeedClientNotify::set_allocated_add_wind_bullet_notify(::proto::WindSeedClientNotify_AddWindBulletNotify* add_wind_bullet_notify) {
  clear_notify();
  if (add_wind_bullet_notify) {
    set_has_add_wind_bullet_notify();
    notify_.add_wind_bullet_notify_ = add_wind_bullet_notify;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WindSeedClientNotify.add_wind_bullet_notify)
}

inline bool WindSeedClientNotify::has_notify() const {
  return notify_case() != NOTIFY_NOT_SET;
}
inline void WindSeedClientNotify::clear_has_notify() {
  _oneof_case_[0] = NOTIFY_NOT_SET;
}
inline WindSeedClientNotify::NotifyCase WindSeedClientNotify::notify_case() const {
  return WindSeedClientNotify::NotifyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::AbilityInvocationFixedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityInvocationFixedNotify_CmdId>() {
  return ::proto::AbilityInvocationFixedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AbilityInvocationsNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityInvocationsNotify_CmdId>() {
  return ::proto::AbilityInvocationsNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientAbilityInitBeginNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientAbilityInitBeginNotify_CmdId>() {
  return ::proto::ClientAbilityInitBeginNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientAbilityInitFinishNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientAbilityInitFinishNotify_CmdId>() {
  return ::proto::ClientAbilityInitFinishNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AbilityInvocationFailNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityInvocationFailNotify_CmdId>() {
  return ::proto::AbilityInvocationFailNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarAbilityResetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarAbilityResetNotify_CmdId>() {
  return ::proto::AvatarAbilityResetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientAbilitiesInitFinishCombineNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientAbilitiesInitFinishCombineNotify_CmdId>() {
  return ::proto::ClientAbilitiesInitFinishCombineNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ElementReactionLogNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ElementReactionLogNotify_CmdId>() {
  return ::proto::ElementReactionLogNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarAbilityResetFinishNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarAbilityResetFinishNotify_CmdId>() {
  return ::proto::AvatarAbilityResetFinishNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WindSeedClientNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WindSeedClientNotify_CmdId>() {
  return ::proto::WindSeedClientNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AbilityInvokeArgument> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityInvokeArgument>() {
  return ::proto::AbilityInvokeArgument_descriptor();
}
template <> struct is_proto_enum< ::proto::ModifierAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ModifierAction>() {
  return ::proto::ModifierAction_descriptor();
}
template <> struct is_proto_enum< ::proto::AbilityResetReasonType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityResetReasonType>() {
  return ::proto::AbilityResetReasonType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fability_2eproto__INCLUDED
