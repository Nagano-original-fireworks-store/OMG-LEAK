// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log/client/client_head.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "log/client/client_head.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_log {
class ClientLogHeadDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientLogHead>
     _instance;
} _ClientLogHead_default_instance_;

namespace protobuf_log_2fclient_2fclient_5fhead_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, log_serial_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, action_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, action_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, upload_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, region_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, game_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, device_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, mac_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLogHead, account_uuid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ClientLogHead)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientLogHead_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "log/client/client_head.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ClientLogHead_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientLogHead_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034log/client/client_head.proto\022\tproto_lo"
      "g\"\264\002\n\rClientLogHead\022\022\n\nevent_time\030\001 \001(\t\022"
      "\031\n\021log_serial_number\030\002 \001(\t\022\021\n\taction_id\030"
      "\003 \001(\r\022\023\n\013action_name\030\004 \001(\t\022\021\n\tupload_ip\030"
      "\005 \001(\t\022\022\n\nproduct_id\030\006 \001(\t\022\022\n\nchannel_id\030"
      "\007 \001(\t\022\023\n\013region_name\030\010 \001(\t\022\024\n\014game_versi"
      "on\030\t \001(\t\022\023\n\013device_type\030\n \001(\t\022\023\n\013device_"
      "uuid\030\013 \001(\t\022\020\n\010mac_addr\030\014 \001(\t\022\024\n\014account_"
      "name\030\r \001(\t\022\024\n\014account_uuid\030\016 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 360);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "log/client/client_head.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_log_2fclient_2fclient_5fhead_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLogHead::kEventTimeFieldNumber;
const int ClientLogHead::kLogSerialNumberFieldNumber;
const int ClientLogHead::kActionIdFieldNumber;
const int ClientLogHead::kActionNameFieldNumber;
const int ClientLogHead::kUploadIpFieldNumber;
const int ClientLogHead::kProductIdFieldNumber;
const int ClientLogHead::kChannelIdFieldNumber;
const int ClientLogHead::kRegionNameFieldNumber;
const int ClientLogHead::kGameVersionFieldNumber;
const int ClientLogHead::kDeviceTypeFieldNumber;
const int ClientLogHead::kDeviceUuidFieldNumber;
const int ClientLogHead::kMacAddrFieldNumber;
const int ClientLogHead::kAccountNameFieldNumber;
const int ClientLogHead::kAccountUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLogHead::ClientLogHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_log_2fclient_2fclient_5fhead_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_log.ClientLogHead)
}
ClientLogHead::ClientLogHead(const ClientLogHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_time().size() > 0) {
    event_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_time_);
  }
  log_serial_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_serial_number().size() > 0) {
    log_serial_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_serial_number_);
  }
  action_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action_name().size() > 0) {
    action_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_name_);
  }
  upload_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.upload_ip().size() > 0) {
    upload_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upload_ip_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_id().size() > 0) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  region_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region_name().size() > 0) {
    region_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_name_);
  }
  game_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_version().size() > 0) {
    game_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_version_);
  }
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  device_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_uuid().size() > 0) {
    device_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_uuid_);
  }
  mac_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_addr().size() > 0) {
    mac_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_addr_);
  }
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  account_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uuid().size() > 0) {
    account_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uuid_);
  }
  action_id_ = from.action_id_;
  // @@protoc_insertion_point(copy_constructor:proto_log.ClientLogHead)
}

void ClientLogHead::SharedCtor() {
  event_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_serial_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upload_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_id_ = 0u;
  _cached_size_ = 0;
}

ClientLogHead::~ClientLogHead() {
  // @@protoc_insertion_point(destructor:proto_log.ClientLogHead)
  SharedDtor();
}

void ClientLogHead::SharedDtor() {
  event_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_serial_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upload_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientLogHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientLogHead::descriptor() {
  protobuf_log_2fclient_2fclient_5fhead_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2fclient_2fclient_5fhead_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientLogHead& ClientLogHead::default_instance() {
  protobuf_log_2fclient_2fclient_5fhead_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientLogHead* ClientLogHead::New(::google::protobuf::Arena* arena) const {
  ClientLogHead* n = new ClientLogHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientLogHead::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_log.ClientLogHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upload_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientLogHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_log.ClientLogHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_time().data(), static_cast<int>(this->event_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.event_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_serial_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_serial_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_serial_number().data(), static_cast<int>(this->log_serial_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.log_serial_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action_name().data(), static_cast<int>(this->action_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.action_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string upload_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upload_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->upload_ip().data(), static_cast<int>(this->upload_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.upload_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_id().data(), static_cast<int>(this->channel_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.channel_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region_name().data(), static_cast<int>(this->region_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.region_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_version = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_version().data(), static_cast<int>(this->game_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.game_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_uuid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.device_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mac_addr = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_addr().data(), static_cast<int>(this->mac_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.mac_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.account_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uuid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uuid().data(), static_cast<int>(this->account_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_log.ClientLogHead.account_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_log.ClientLogHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_log.ClientLogHead)
  return false;
#undef DO_
}

void ClientLogHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_log.ClientLogHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_time = 1;
  if (this->event_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_time().data(), static_cast<int>(this->event_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.event_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_time(), output);
  }

  // string log_serial_number = 2;
  if (this->log_serial_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_serial_number().data(), static_cast<int>(this->log_serial_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.log_serial_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->log_serial_number(), output);
  }

  // uint32 action_id = 3;
  if (this->action_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_id(), output);
  }

  // string action_name = 4;
  if (this->action_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action_name().data(), static_cast<int>(this->action_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.action_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->action_name(), output);
  }

  // string upload_ip = 5;
  if (this->upload_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upload_ip().data(), static_cast<int>(this->upload_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.upload_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->upload_ip(), output);
  }

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->product_id(), output);
  }

  // string channel_id = 7;
  if (this->channel_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_id().data(), static_cast<int>(this->channel_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->channel_id(), output);
  }

  // string region_name = 8;
  if (this->region_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_name().data(), static_cast<int>(this->region_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.region_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->region_name(), output);
  }

  // string game_version = 9;
  if (this->game_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_version().data(), static_cast<int>(this->game_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.game_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->game_version(), output);
  }

  // string device_type = 10;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->device_type(), output);
  }

  // string device_uuid = 11;
  if (this->device_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.device_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->device_uuid(), output);
  }

  // string mac_addr = 12;
  if (this->mac_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_addr().data(), static_cast<int>(this->mac_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.mac_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->mac_addr(), output);
  }

  // string account_name = 13;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->account_name(), output);
  }

  // string account_uuid = 14;
  if (this->account_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uuid().data(), static_cast<int>(this->account_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.account_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->account_uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_log.ClientLogHead)
}

::google::protobuf::uint8* ClientLogHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_log.ClientLogHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_time = 1;
  if (this->event_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_time().data(), static_cast<int>(this->event_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.event_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_time(), target);
  }

  // string log_serial_number = 2;
  if (this->log_serial_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_serial_number().data(), static_cast<int>(this->log_serial_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.log_serial_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->log_serial_number(), target);
  }

  // uint32 action_id = 3;
  if (this->action_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_id(), target);
  }

  // string action_name = 4;
  if (this->action_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action_name().data(), static_cast<int>(this->action_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.action_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->action_name(), target);
  }

  // string upload_ip = 5;
  if (this->upload_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upload_ip().data(), static_cast<int>(this->upload_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.upload_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->upload_ip(), target);
  }

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->product_id(), target);
  }

  // string channel_id = 7;
  if (this->channel_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_id().data(), static_cast<int>(this->channel_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->channel_id(), target);
  }

  // string region_name = 8;
  if (this->region_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_name().data(), static_cast<int>(this->region_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.region_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->region_name(), target);
  }

  // string game_version = 9;
  if (this->game_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_version().data(), static_cast<int>(this->game_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.game_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->game_version(), target);
  }

  // string device_type = 10;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->device_type(), target);
  }

  // string device_uuid = 11;
  if (this->device_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.device_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->device_uuid(), target);
  }

  // string mac_addr = 12;
  if (this->mac_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_addr().data(), static_cast<int>(this->mac_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.mac_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->mac_addr(), target);
  }

  // string account_name = 13;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->account_name(), target);
  }

  // string account_uuid = 14;
  if (this->account_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uuid().data(), static_cast<int>(this->account_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_log.ClientLogHead.account_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->account_uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_log.ClientLogHead)
  return target;
}

size_t ClientLogHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_log.ClientLogHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string event_time = 1;
  if (this->event_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_time());
  }

  // string log_serial_number = 2;
  if (this->log_serial_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_serial_number());
  }

  // string action_name = 4;
  if (this->action_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action_name());
  }

  // string upload_ip = 5;
  if (this->upload_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upload_ip());
  }

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string channel_id = 7;
  if (this->channel_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_id());
  }

  // string region_name = 8;
  if (this->region_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_name());
  }

  // string game_version = 9;
  if (this->game_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_version());
  }

  // string device_type = 10;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // string device_uuid = 11;
  if (this->device_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_uuid());
  }

  // string mac_addr = 12;
  if (this->mac_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_addr());
  }

  // string account_name = 13;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // string account_uuid = 14;
  if (this->account_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uuid());
  }

  // uint32 action_id = 3;
  if (this->action_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientLogHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_log.ClientLogHead)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLogHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLogHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_log.ClientLogHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_log.ClientLogHead)
    MergeFrom(*source);
  }
}

void ClientLogHead::MergeFrom(const ClientLogHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_log.ClientLogHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_time().size() > 0) {

    event_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_time_);
  }
  if (from.log_serial_number().size() > 0) {

    log_serial_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_serial_number_);
  }
  if (from.action_name().size() > 0) {

    action_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_name_);
  }
  if (from.upload_ip().size() > 0) {

    upload_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upload_ip_);
  }
  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.channel_id().size() > 0) {

    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  if (from.region_name().size() > 0) {

    region_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_name_);
  }
  if (from.game_version().size() > 0) {

    game_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_version_);
  }
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.device_uuid().size() > 0) {

    device_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_uuid_);
  }
  if (from.mac_addr().size() > 0) {

    mac_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_addr_);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.account_uuid().size() > 0) {

    account_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uuid_);
  }
  if (from.action_id() != 0) {
    set_action_id(from.action_id());
  }
}

void ClientLogHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_log.ClientLogHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLogHead::CopyFrom(const ClientLogHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_log.ClientLogHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLogHead::IsInitialized() const {
  return true;
}

void ClientLogHead::Swap(ClientLogHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLogHead::InternalSwap(ClientLogHead* other) {
  using std::swap;
  event_time_.Swap(&other->event_time_);
  log_serial_number_.Swap(&other->log_serial_number_);
  action_name_.Swap(&other->action_name_);
  upload_ip_.Swap(&other->upload_ip_);
  product_id_.Swap(&other->product_id_);
  channel_id_.Swap(&other->channel_id_);
  region_name_.Swap(&other->region_name_);
  game_version_.Swap(&other->game_version_);
  device_type_.Swap(&other->device_type_);
  device_uuid_.Swap(&other->device_uuid_);
  mac_addr_.Swap(&other->mac_addr_);
  account_name_.Swap(&other->account_name_);
  account_uuid_.Swap(&other->account_uuid_);
  swap(action_id_, other->action_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientLogHead::GetMetadata() const {
  protobuf_log_2fclient_2fclient_5fhead_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2fclient_2fclient_5fhead_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientLogHead

// string event_time = 1;
void ClientLogHead::clear_event_time() {
  event_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::event_time() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.event_time)
  return event_time_.GetNoArena();
}
void ClientLogHead::set_event_time(const ::std::string& value) {
  
  event_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.event_time)
}
#if LANG_CXX11
void ClientLogHead::set_event_time(::std::string&& value) {
  
  event_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.event_time)
}
#endif
void ClientLogHead::set_event_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.event_time)
}
void ClientLogHead::set_event_time(const char* value, size_t size) {
  
  event_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.event_time)
}
::std::string* ClientLogHead::mutable_event_time() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.event_time)
  return event_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_event_time() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.event_time)
  
  return event_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_event_time(::std::string* event_time) {
  if (event_time != NULL) {
    
  } else {
    
  }
  event_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_time);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.event_time)
}

// string log_serial_number = 2;
void ClientLogHead::clear_log_serial_number() {
  log_serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::log_serial_number() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.log_serial_number)
  return log_serial_number_.GetNoArena();
}
void ClientLogHead::set_log_serial_number(const ::std::string& value) {
  
  log_serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.log_serial_number)
}
#if LANG_CXX11
void ClientLogHead::set_log_serial_number(::std::string&& value) {
  
  log_serial_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.log_serial_number)
}
#endif
void ClientLogHead::set_log_serial_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.log_serial_number)
}
void ClientLogHead::set_log_serial_number(const char* value, size_t size) {
  
  log_serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.log_serial_number)
}
::std::string* ClientLogHead::mutable_log_serial_number() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.log_serial_number)
  return log_serial_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_log_serial_number() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.log_serial_number)
  
  return log_serial_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_log_serial_number(::std::string* log_serial_number) {
  if (log_serial_number != NULL) {
    
  } else {
    
  }
  log_serial_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_serial_number);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.log_serial_number)
}

// uint32 action_id = 3;
void ClientLogHead::clear_action_id() {
  action_id_ = 0u;
}
::google::protobuf::uint32 ClientLogHead::action_id() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.action_id)
  return action_id_;
}
void ClientLogHead::set_action_id(::google::protobuf::uint32 value) {
  
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.action_id)
}

// string action_name = 4;
void ClientLogHead::clear_action_name() {
  action_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::action_name() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.action_name)
  return action_name_.GetNoArena();
}
void ClientLogHead::set_action_name(const ::std::string& value) {
  
  action_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.action_name)
}
#if LANG_CXX11
void ClientLogHead::set_action_name(::std::string&& value) {
  
  action_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.action_name)
}
#endif
void ClientLogHead::set_action_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.action_name)
}
void ClientLogHead::set_action_name(const char* value, size_t size) {
  
  action_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.action_name)
}
::std::string* ClientLogHead::mutable_action_name() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.action_name)
  return action_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_action_name() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.action_name)
  
  return action_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_action_name(::std::string* action_name) {
  if (action_name != NULL) {
    
  } else {
    
  }
  action_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_name);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.action_name)
}

// string upload_ip = 5;
void ClientLogHead::clear_upload_ip() {
  upload_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::upload_ip() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.upload_ip)
  return upload_ip_.GetNoArena();
}
void ClientLogHead::set_upload_ip(const ::std::string& value) {
  
  upload_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.upload_ip)
}
#if LANG_CXX11
void ClientLogHead::set_upload_ip(::std::string&& value) {
  
  upload_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.upload_ip)
}
#endif
void ClientLogHead::set_upload_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  upload_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.upload_ip)
}
void ClientLogHead::set_upload_ip(const char* value, size_t size) {
  
  upload_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.upload_ip)
}
::std::string* ClientLogHead::mutable_upload_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.upload_ip)
  return upload_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_upload_ip() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.upload_ip)
  
  return upload_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_upload_ip(::std::string* upload_ip) {
  if (upload_ip != NULL) {
    
  } else {
    
  }
  upload_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upload_ip);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.upload_ip)
}

// string product_id = 6;
void ClientLogHead::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::product_id() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.product_id)
  return product_id_.GetNoArena();
}
void ClientLogHead::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.product_id)
}
#if LANG_CXX11
void ClientLogHead::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.product_id)
}
#endif
void ClientLogHead::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.product_id)
}
void ClientLogHead::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.product_id)
}
::std::string* ClientLogHead::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_product_id() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.product_id)
}

// string channel_id = 7;
void ClientLogHead::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::channel_id() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.channel_id)
  return channel_id_.GetNoArena();
}
void ClientLogHead::set_channel_id(const ::std::string& value) {
  
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.channel_id)
}
#if LANG_CXX11
void ClientLogHead::set_channel_id(::std::string&& value) {
  
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.channel_id)
}
#endif
void ClientLogHead::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.channel_id)
}
void ClientLogHead::set_channel_id(const char* value, size_t size) {
  
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.channel_id)
}
::std::string* ClientLogHead::mutable_channel_id() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_channel_id() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.channel_id)
  
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    
  } else {
    
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.channel_id)
}

// string region_name = 8;
void ClientLogHead::clear_region_name() {
  region_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::region_name() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.region_name)
  return region_name_.GetNoArena();
}
void ClientLogHead::set_region_name(const ::std::string& value) {
  
  region_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.region_name)
}
#if LANG_CXX11
void ClientLogHead::set_region_name(::std::string&& value) {
  
  region_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.region_name)
}
#endif
void ClientLogHead::set_region_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.region_name)
}
void ClientLogHead::set_region_name(const char* value, size_t size) {
  
  region_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.region_name)
}
::std::string* ClientLogHead::mutable_region_name() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.region_name)
  return region_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_region_name() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.region_name)
  
  return region_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_region_name(::std::string* region_name) {
  if (region_name != NULL) {
    
  } else {
    
  }
  region_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_name);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.region_name)
}

// string game_version = 9;
void ClientLogHead::clear_game_version() {
  game_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::game_version() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.game_version)
  return game_version_.GetNoArena();
}
void ClientLogHead::set_game_version(const ::std::string& value) {
  
  game_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.game_version)
}
#if LANG_CXX11
void ClientLogHead::set_game_version(::std::string&& value) {
  
  game_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.game_version)
}
#endif
void ClientLogHead::set_game_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.game_version)
}
void ClientLogHead::set_game_version(const char* value, size_t size) {
  
  game_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.game_version)
}
::std::string* ClientLogHead::mutable_game_version() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.game_version)
  return game_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_game_version() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.game_version)
  
  return game_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_game_version(::std::string* game_version) {
  if (game_version != NULL) {
    
  } else {
    
  }
  game_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_version);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.game_version)
}

// string device_type = 10;
void ClientLogHead::clear_device_type() {
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::device_type() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.device_type)
  return device_type_.GetNoArena();
}
void ClientLogHead::set_device_type(const ::std::string& value) {
  
  device_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.device_type)
}
#if LANG_CXX11
void ClientLogHead::set_device_type(::std::string&& value) {
  
  device_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.device_type)
}
#endif
void ClientLogHead::set_device_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.device_type)
}
void ClientLogHead::set_device_type(const char* value, size_t size) {
  
  device_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.device_type)
}
::std::string* ClientLogHead::mutable_device_type() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.device_type)
  return device_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_device_type() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.device_type)
  
  return device_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_device_type(::std::string* device_type) {
  if (device_type != NULL) {
    
  } else {
    
  }
  device_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_type);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.device_type)
}

// string device_uuid = 11;
void ClientLogHead::clear_device_uuid() {
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::device_uuid() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.device_uuid)
  return device_uuid_.GetNoArena();
}
void ClientLogHead::set_device_uuid(const ::std::string& value) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.device_uuid)
}
#if LANG_CXX11
void ClientLogHead::set_device_uuid(::std::string&& value) {
  
  device_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.device_uuid)
}
#endif
void ClientLogHead::set_device_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.device_uuid)
}
void ClientLogHead::set_device_uuid(const char* value, size_t size) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.device_uuid)
}
::std::string* ClientLogHead::mutable_device_uuid() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.device_uuid)
  return device_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_device_uuid() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.device_uuid)
  
  return device_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_device_uuid(::std::string* device_uuid) {
  if (device_uuid != NULL) {
    
  } else {
    
  }
  device_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_uuid);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.device_uuid)
}

// string mac_addr = 12;
void ClientLogHead::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::mac_addr() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.mac_addr)
  return mac_addr_.GetNoArena();
}
void ClientLogHead::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.mac_addr)
}
#if LANG_CXX11
void ClientLogHead::set_mac_addr(::std::string&& value) {
  
  mac_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.mac_addr)
}
#endif
void ClientLogHead::set_mac_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.mac_addr)
}
void ClientLogHead::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.mac_addr)
}
::std::string* ClientLogHead::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_mac_addr() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.mac_addr)
}

// string account_name = 13;
void ClientLogHead::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::account_name() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.account_name)
  return account_name_.GetNoArena();
}
void ClientLogHead::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.account_name)
}
#if LANG_CXX11
void ClientLogHead::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.account_name)
}
#endif
void ClientLogHead::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.account_name)
}
void ClientLogHead::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.account_name)
}
::std::string* ClientLogHead::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_account_name() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.account_name)
}

// string account_uuid = 14;
void ClientLogHead::clear_account_uuid() {
  account_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientLogHead::account_uuid() const {
  // @@protoc_insertion_point(field_get:proto_log.ClientLogHead.account_uuid)
  return account_uuid_.GetNoArena();
}
void ClientLogHead::set_account_uuid(const ::std::string& value) {
  
  account_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_log.ClientLogHead.account_uuid)
}
#if LANG_CXX11
void ClientLogHead::set_account_uuid(::std::string&& value) {
  
  account_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_log.ClientLogHead.account_uuid)
}
#endif
void ClientLogHead::set_account_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_log.ClientLogHead.account_uuid)
}
void ClientLogHead::set_account_uuid(const char* value, size_t size) {
  
  account_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_log.ClientLogHead.account_uuid)
}
::std::string* ClientLogHead::mutable_account_uuid() {
  
  // @@protoc_insertion_point(field_mutable:proto_log.ClientLogHead.account_uuid)
  return account_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientLogHead::release_account_uuid() {
  // @@protoc_insertion_point(field_release:proto_log.ClientLogHead.account_uuid)
  
  return account_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientLogHead::set_allocated_account_uuid(::std::string* account_uuid) {
  if (account_uuid != NULL) {
    
  } else {
    
  }
  account_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uuid);
  // @@protoc_insertion_point(field_set_allocated:proto_log.ClientLogHead.account_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_log

// @@protoc_insertion_point(global_scope)
